<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dell Technologies â€“ Upgrade</title>
    <link>/v1/upgradation/</link>
    <description>Recent content in Upgrade on Dell Technologies</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="/v1/upgradation/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>V1: Dell CSI Operator</title>
      <link>/v1/upgradation/drivers/operator/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1/upgradation/drivers/operator/</guid>
      <description>
        
        
        &lt;p&gt;If you are upgrading the Dell CSI Operator from v1.1.0 or v1.2.0 to v1.3.0, then follow the instructions below. If you are trying to upgrade the Operator from an older version, please refer the instructions &lt;a href=&#34;#upgrade-operator-from-version-older-than-v110-to-v130&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;using-installation-script&#34;&gt;Using Installation Script&lt;/h3&gt;
&lt;p&gt;Run the following command to upgrade the operator from v1.2.0 release&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ bash scripts/install.sh --upgrade
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;using-olm&#34;&gt;Using OLM&lt;/h3&gt;
&lt;p&gt;The upgrade of the Dell CSI Operator is done via Operator Lifecycle Manager.
If the &lt;code&gt;InstallPlan&lt;/code&gt; for the Operator subscription is set to &lt;code&gt;Automatic&lt;/code&gt;, the operator will be automatically upgraded to the new version. If the &lt;code&gt;InstallPlan&lt;/code&gt; is set to &lt;code&gt;Manual&lt;/code&gt;, then a Cluster Administrator would need to approve the upgrade.&lt;/p&gt;
&lt;h3 id=&#34;upgrade-operator-from-version-older-than-v110-to-v130&#34;&gt;Upgrade Operator from version older than v1.1.0 to v1.3.0&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Uninstall the old version of the Operator&lt;/li&gt;
&lt;li&gt;If required, upgrade your cluster to a supported version&lt;/li&gt;
&lt;li&gt;Follow the installation instructions to install the v1.3.0 of the Operator &lt;a href=&#34;../../../installation/operator&#34;&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>V1: PowerFlex</title>
      <link>/v1/upgradation/drivers/powerflex/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1/upgradation/drivers/powerflex/</guid>
      <description>
        
        
        &lt;p&gt;You can upgrade the CSI Driver for Dell EMC PowerFlex using Helm or Dell CSI Operator.&lt;/p&gt;
&lt;h2 id=&#34;update-driver-from-v12v13-to-v14-using-helm&#34;&gt;Update Driver from v1.2/v1.3 to v1.4 using Helm&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Steps&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Run &lt;code&gt;git clone https://github.com/dell/csi-powerflex.git&lt;/code&gt; to clone the git repository and get the v1.4 driver.&lt;/li&gt;
&lt;li&gt;You need to create config.json with configuration of your system.
Check this section in installation documentation:  &lt;a href=&#34;../../../docs/installation/helm/powerflex.md#install-the-driver&#34;&gt;Install the Driver&lt;/a&gt;
You must set the only system managed in v1.3/v1.2 driver as default in config.json in v1.4 so that the driver know the existing volumes belong to that system.&lt;/li&gt;
&lt;li&gt;Update values file as needed.&lt;/li&gt;
&lt;li&gt;Run the &lt;code&gt;csi-install&lt;/code&gt; script with the option &lt;em&gt;--upgrade&lt;/em&gt; by running: &lt;code&gt;cd ../dell-csi-helm-installer &amp;amp;&amp;amp; ./csi-install.sh --namespace vxflexos --values ./myvalues.yaml --upgrade&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;update-driver-from-pre-v12-to-v14-using-helm&#34;&gt;Update Driver from pre-v1.2 to v1.4 using Helm&lt;/h2&gt;
&lt;p&gt;A direct upgrade of the driver from an older version pre-v1.2 to version 1.4 is not supported because of breaking changes in Kubernetes APIs in the migration from alpha snapshots to beta snapshots. In order to update the driver in this situation you need to remove alpha snapshot related artifacts.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Steps&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Before deleting the alpha snapshot CRDs, ensure that their version is v1alpha1 by examining the output of the &lt;code&gt;kubectl get crd&lt;/code&gt; command.&lt;/li&gt;
&lt;li&gt;Delete any VolumeSnapshotClass present in the cluster.&lt;/li&gt;
&lt;li&gt;Delete all the alpha snapshot CRDs from the cluster by running the following commands:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;kubectl delete crd volumesnapshotclasses.snapshot.storage.k8s.io
kubectl delete crd volumesnapshotcontents.snapshot.storage.k8s.io
kubectl delete crd volumesnapshots.snapshot.storage.k8s.io
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Uninstall the driver using the &lt;code&gt;csi-uninstall.sh&lt;/code&gt; script by running the command: &lt;code&gt;./csi-uninstall.sh --namespace vxflexos&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Install the driver using the steps described in the Installation Using Helm section for the CSI PowerFlex driver.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;NOTE:&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If you are upgrading from a driver version which was installed using Helm v2, ensure that you install Helm3 before installing the driver.&lt;/li&gt;
&lt;li&gt;Installation of the CSI Driver for Dell EMC PowerFlex version 1.4 driver is not supported on Kubernetes upstream clusters running version 1.17. You must upgrade your cluster to 1.18, 1.19, or 1.20 before attempting to install the new version of the driver.&lt;/li&gt;
&lt;li&gt;To update any installation parameter after the driver has been installed, change the &lt;code&gt;myvalues.yaml&lt;/code&gt; file and run the install script with the option &lt;em&gt;--upgrade&lt;/em&gt;, for example: &lt;code&gt;./csi-install.sh --namespace vxflexos --values ./myvalues.yaml --upgrade&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;upgrade-using-dell-csi-operator&#34;&gt;Upgrade using Dell CSI Operator:&lt;/h2&gt;
&lt;p&gt;Follow the instructions for upgrade on the Dell CSI Operator &lt;a href=&#34;https://github.com/dell/dell-csi-operator&#34;&gt;GitHub&lt;/a&gt; page.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>V1: PowerMax</title>
      <link>/v1/upgradation/drivers/powermax/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1/upgradation/drivers/powermax/</guid>
      <description>
        
        
        &lt;p&gt;You can upgrade the CSI Driver for Dell EMC PowerMax using Helm or Dell CSI Operator.&lt;/p&gt;
&lt;h2 id=&#34;update-driver-from-v15-to-v16-using-helm&#34;&gt;Update Driver from v1.5 to v1.6 using Helm&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Steps&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Run &lt;code&gt;git clone https://github.com/dell/csi-powermax.git&lt;/code&gt; to clone the git repository and get the v1.6 driver.&lt;/li&gt;
&lt;li&gt;Update values file as needed.&lt;/li&gt;
&lt;li&gt;Run the &lt;code&gt;csi-install&lt;/code&gt; script with the option &lt;em&gt;--upgrade&lt;/em&gt; by running: &lt;code&gt;cd ../dell-csi-helm-installer &amp;amp;&amp;amp; ./csi-install.sh --namespace powermax --values ./my-powermax-settings.yaml --upgrade&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;update-driver-from-pre-v14-to-v16-using-helm&#34;&gt;Update Driver from pre-v1.4 to v1.6 using Helm&lt;/h2&gt;
&lt;p&gt;A rolling upgrade of the driver from an older version to v1.4 is not supported because of breaking changes in Kubernetes APIs in the migration from alpha snapshots to beta snapshots. In order to update the driver in this situation you need to remove alpha snapshot related artifacts.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Steps&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Delete any alpha VolumeSnapshot or VolumeSnapshotContent in the cluster.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Before deleting the alpha snapshot CRDs, ensure that their version is v1alpha1 by examining the output of the &lt;code&gt;kubectl get crd&lt;/code&gt; command.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Delete any VolumeSnapshotClass present in the cluster.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Delete all the alpha snapshot CRDs from the cluster by running the following commands:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;kubectl delete crd volumesnapshotclasses.snapshot.storage.k8s.io
kubectl delete crd volumesnapshotcontents.snapshot.storage.k8s.io
kubectl delete crd volumesnapshots.snapshot.storage.k8s.io
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Uninstall the driver using the &lt;code&gt;csi-uninstall.sh&lt;/code&gt; script by running the command: &lt;code&gt;./csi-uninstall.sh --namespace &amp;lt;driver-namespace&amp;gt;&lt;/code&gt; where &lt;em&gt;driver-namespace&lt;/em&gt; is the namespace where driver is installed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install the driver using the steps described in the Installation Using Helm section for the CSI PowerMax driver.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;NOTE:&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If you are upgrading from a driver version which was installed using Helm v2, ensure that you install Helm3 before installing the driver.&lt;/li&gt;
&lt;li&gt;Installation of the CSI Driver for Dell EMC PowerMax version 1.6 driver is not supported on Kubernetes upstream clusters running Kubernetes version 1.17 or lower. You must upgrade your cluster to 1.18, 1.19, or 1.20 before attempting to install the new version of the driver.&lt;/li&gt;
&lt;li&gt;To update any installation parameter after the driver has been installed, change the &lt;code&gt;my-powermax-settings.yaml&lt;/code&gt; file and run the install script with the option &lt;em&gt;--upgrade&lt;/em&gt;, for example: &lt;code&gt;./csi-install.sh --namespace powermax --values ./my-powermax-settings.yaml â€“upgrade&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;upgrade-using-dell-csi-operator&#34;&gt;Upgrade using Dell CSI Operator:&lt;/h2&gt;
&lt;p&gt;Follow the instructions for upgrade on the Dell CSI Operator &lt;a href=&#34;https://github.com/dell/dell-csi-operator&#34;&gt;GitHub&lt;/a&gt; page.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>V1: PowerScale</title>
      <link>/v1/upgradation/drivers/isilon/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1/upgradation/drivers/isilon/</guid>
      <description>
        
        
        &lt;p&gt;You can upgrade the CSI Driver for Dell EMC Unity using Helm or Dell CSI Operator.&lt;/p&gt;
&lt;h2 id=&#34;upgrade-driver-from-version-v140-to-v150&#34;&gt;Upgrade Driver from version v1.4.0 to v1.5.0&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Steps&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Verify that all pre-requisites to install CSI Driver for Dell EMC PowerScale v1.5.0 are fulfilled (including change in secret formats).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  1.1 Delete the existing secrets (isilon-creds and isilon-certs)

  1.2 Create new secrets (isilon-creds and isilon-certs-0) in the format specified by csi-powerscale 1.5. 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Refer Installation section &lt;a href=&#34;./../../../installation/helm/isilon/#install-csi-driver-for-powerscale&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Clone the repository &lt;a href=&#34;https://github.com/dell/csi-powerscale&#34;&gt;https://github.com/dell/csi-powerscale&lt;/a&gt; , copy the helm/csi-isilon/values.yaml into a new location with name say my-isilon-settings.yaml, to customize settings for installation. Edit my-isilon-settings.yaml as per the requirements.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Change to directory dell-csi-helm-installer to install the Dell EMC PowerScale &lt;code&gt;cd dell-csi-helm-installer&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Upgrade the CSI Driver for Dell EMC PowerScale v1.5.0 using following command:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;./csi-install.sh --namespace isilon --values ./my-isilon-settings.yaml --upgrade&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;upgrade-using-dell-csi-operator&#34;&gt;Upgrade using Dell CSI Operator:&lt;/h2&gt;
&lt;p&gt;To upgrade the driver from csi-PowerScale v1.4 to csi-PowerScale v1.5 (OpenShift 4.6) :&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Clone operator version 1.3.0&lt;/li&gt;
&lt;li&gt;Execute &lt;code&gt;bash scripts/install.sh --upgrade&lt;/code&gt;  .This command will install latest version of operator.&lt;/li&gt;
&lt;li&gt;Uninstall the existing driver by executing the command &lt;code&gt;kubectl delete -f &amp;lt;driver.yaml&amp;gt;&lt;/code&gt; with appropriate yaml file used for csi-powerscale 1.4 installation.&lt;/li&gt;
&lt;li&gt;Delete the existing secrets (both isilon-creds and isilon-certs)&lt;/li&gt;
&lt;li&gt;Create new isilon-creds secret in the latest csi-PowerScale format. For additional information, refer &lt;a href=&#34;./../../../installation/helm/isilon/#install-csi-driver-for-powerscale&#34;&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Create new isilon-certs secret. Make sure the name of new secret is isilon-certs-0. For additional information, refer &lt;a href=&#34;./../../../installation/helm/isilon/#certificate-validation-for-onefs-rest-api-calls&#34;&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Furnish the sample CR yaml according to your environment.&lt;/li&gt;
&lt;li&gt;Install csi-PowerScale driver 1.5 by executing the following command:
&lt;code&gt;kubectl create -f &amp;lt;furnished-cr.yaml&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The above said steps are for Operator which was deployed in non-olm way.&lt;/p&gt;
&lt;p&gt;For additional information, refer Dell CSI Operator &lt;a href=&#34;https://github.com/dell/dell-csi-operator&#34;&gt;GitHub&lt;/a&gt; page.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>V1: PowerStore</title>
      <link>/v1/upgradation/drivers/powerstore/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1/upgradation/drivers/powerstore/</guid>
      <description>
        
        
        &lt;p&gt;You can upgrade the CSI Driver for Dell EMC PowerStore using Helm or Dell CSI Operator.&lt;/p&gt;
&lt;h2 id=&#34;update-driver-from-v12-to-v13-using-helm&#34;&gt;Update Driver from v1.2 to v1.3 using Helm&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Steps&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Run &lt;code&gt;git clone https://github.com/dell/csi-powerstore.git&lt;/code&gt; to clone the git repository and get the v1.3 driver.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Edit &lt;code&gt;helm/config.yaml&lt;/code&gt; file and configure connection information for your PowerStore arrays changing following parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;endpoint&lt;/em&gt;: defines the full URL path to the PowerStore API.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;username&lt;/em&gt;, &lt;em&gt;password&lt;/em&gt;: defines credentials for connecting to array.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;insecure&lt;/em&gt;: defines if we should use insecure connection or not.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;default&lt;/em&gt;: defines if we should treat the current array as a default.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;block-protocol&lt;/em&gt;: defines what SCSI transport protocol we must use (FC, ISCSI, None, or auto).&lt;/li&gt;
&lt;li&gt;&lt;em&gt;nas-name&lt;/em&gt;: defines what NAS should be used for NFS volumes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Add more blocks similar to above for each PowerStore array if necessary.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(optional) create new storage classes using ones from &lt;code&gt;helm/samples/storageclass&lt;/code&gt; folder as an example and apply them to the Kubernetes cluster by running &lt;code&gt;kubectl create -f &amp;lt;path_to_storageclass_file&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Storage classes created by v1.2 driver will not be deleted, v1.3 driver will use default array to manage volumes provisioned with old storage classes. Thus, if you still have volumes provisioned by v1.2 in your cluster then be sure to include same array you have used for v1.2 driver and make it default in &lt;code&gt;config.yaml&lt;/code&gt; file.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create the secret by running &lt;code&gt;sed &amp;quot;s/CONFIG_YAML/`cat helm/config.yaml | base64 -w0`/g&amp;quot; helm/secret.yaml | kubectl apply -f -&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Update values file as needed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run the &lt;code&gt;csi-install&lt;/code&gt; script with the option &lt;em&gt;--upgrade&lt;/em&gt; by running: &lt;code&gt;cd ../dell-csi-helm-installer &amp;amp;&amp;amp; ./csi-install.sh --namespace csi-powerstore --values ./my-powerstore-settings.yaml --upgrade&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;upgrade-using-dell-csi-operator&#34;&gt;Upgrade using Dell CSI Operator:&lt;/h2&gt;
&lt;p&gt;Follow the instructions for upgrade on the Dell CSI Operator &lt;a href=&#34;https://github.com/dell/dell-csi-operator&#34;&gt;GitHub&lt;/a&gt; page.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>V1: Unity</title>
      <link>/v1/upgradation/drivers/unity/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1/upgradation/drivers/unity/</guid>
      <description>
        
        
        &lt;p&gt;You can upgrade the CSI Driver for Dell EMC Unity using Helm or Dell CSI Operator.&lt;/p&gt;
&lt;h3 id=&#34;using-helm&#34;&gt;Using Helm&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; While upgrading the driver via helm, controllerCount variable in myvalues.yaml can be at most one less than the number of worker nodes.&lt;/p&gt;
&lt;p&gt;Preparing myvalues.yaml is the same as explained in install section.&lt;/p&gt;
&lt;p&gt;To upgrade the driver from csi-unity v1.4 to csi-unity 1.5 (across K8S 1.18, K8S 1.19, K8S 1.20).&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Get the latest csi-unity 1.5 code from Github.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create myvalues.yaml according to csi-unity 1.5 .&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Delete the existing default storage classes of csi-unity 1.4 .&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Clone the repository &lt;a href=&#34;https://github.com/dell/csi-unity&#34;&gt;https://github.com/dell/csi-unity&lt;/a&gt; , copy the helm/csi-unity/values.yaml to the new location
csi-unity/dell-csi-helm-installer with name say myvalues.yaml, to customize settings for installation edit myvalues.yaml as per the requirements.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Navigate to common-helm-installer folder and execute the following command:
&lt;code&gt;./csi-install.sh --namespace unity --values ./myvalues.yaml --upgrade&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If the value of &amp;lsquo;createStorageClassesWithTopology&amp;rsquo; is set to &amp;ldquo;true&amp;rdquo; in myvalues.yaml , then&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Check the default storage classes, VolumeBindingMode should be &amp;lsquo;WaitForFirstConsumer&amp;rsquo;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; User has to re-create existing custom-storage classes (if any) according to latest (v1.5) format.&lt;/p&gt;
&lt;h3 id=&#34;using-operator&#34;&gt;Using Operator&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; While upgrading the driver via operator, replicas count in sample CR yaml can be at most one less than the number of worker nodes.&lt;/p&gt;
&lt;p&gt;To upgrade the driver from csi-unity v1.4 to csi-unity v1.5 (OpenShift 4.6) :&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Clone operator version 1.3.0&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Execute &lt;code&gt;bash scripts/install.sh --upgrade&lt;/code&gt;
This command will install latest version of operator.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Furnish the sample CR yaml according to your environment.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For upgrading the csi-unity driver execute the following command:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;kubectl apply -f &amp;lt;furnished-cr.yaml&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
  </channel>
</rss>
