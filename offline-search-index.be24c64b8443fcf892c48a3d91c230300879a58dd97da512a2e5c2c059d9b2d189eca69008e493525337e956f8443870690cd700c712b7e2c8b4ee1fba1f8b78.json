[{"body":"Coming Soon!\n","excerpt":"Coming Soon!","ref":"/ansible-docs/docs/network/introduction/","title":"Introduction"},{"body":"Coming Soon!\n","excerpt":"Coming Soon!","ref":"/ansible-docs/docs/server/introduction/","title":"Introduction"},{"body":"Automating Dell EMC Storage with the Ansible Automation Platform The Dell EMC storage portfolio provides deep integration with Ansible through a number of modules to enable configuration management and workflow automation for a number of use cases including SAN zone setup, provisioning, snapshots, remote replication as well as data and workload mobility across the hybrid cloud.\nSolution Benefits Ansible modules for Dell EMC storage platforms: PowerMax, PowerStore, PowerScale, PowerFlex, Unity XT and VPLEX help customers improve efficiency, flexibility, and agility to run their datacenter operations.Gone are the days when automation meant specialized programming skills like Perl, Python or hard to use shell scripting.Instead, Ansible modules for Dell EMC storage do the heavy lifting of coding REST API interactions with storage platforms and expose the storage functionality to the Ansible engine.IT users simply need to specify the storage management actions and the desired configuration in a simple key-value pair format in a YAML file.Dell EMC storage Ansible plugins verify if the desired state has been reached and execute the actions only if the desired state is not reached.This underlying execution intelligence (idempotency) avoids inadvertent execution of actions and any resulting drift in the infrastructure configuration.This approach helps makes it easier to attain consistent and highly scalable operations over the entire IT infrastructure stack for a variety of use cases like DevOps process automation and managing large scale application deployments.\nGetting Started Looking to learn more about the Dell Certified Content Collection? Here are some great resources to get you started:\n Dell EMC storage automation YouTube Dell EMC storage PowerMax workflows automated by Ansible Dell EMC storage solution brief Dell EMC storage best practices guide  Get Started Explore the Community Ansible Collection for Dell EMC\nDownload the Supported Ansible Collection for Dell EMC from Automation Hub (Ansible subscription required)\nDell EMC DevOps and Automation resources\nDell EMC Storage Automation and Developer\n","excerpt":"Automating Dell EMC Storage with the Ansible Automation Platform The Dell EMC storage portfolio …","ref":"/ansible-docs/docs/storage/introduction/","title":"Introduction"},{"body":"Coming Soon!\n","excerpt":"Coming Soon!","ref":"/ansible-docs/docs/network/licensing/","title":"Licensing"},{"body":"Coming Soon!\n","excerpt":"Coming Soon!","ref":"/ansible-docs/docs/server/licensing/","title":"Licensing"},{"body":"Ansible collection is released and licensed under the GPL-3.0 license. Ansible modules and module utilities that are part of the Ansible collection are released and licensed under the Apache 2.0 license.\n","excerpt":"Ansible collection is released and licensed under the GPL-3.0 license. Ansible modules and module …","ref":"/ansible-docs/docs/storage/licensing/","title":"Licensing"},{"body":"","excerpt":"","ref":"/ansible-docs/docs/storage/platforms/","title":"Platforms"},{"body":"","excerpt":"","ref":"/ansible-docs/docs/storage/platforms/powerflex/","title":"PowerFlex"},{"body":"","excerpt":"","ref":"/ansible-docs/docs/storage/platforms/powermax/","title":"PowerMax"},{"body":"","excerpt":"","ref":"/ansible-docs/docs/storage/platforms/powerscale/","title":"PowerScale"},{"body":"","excerpt":"","ref":"/ansible-docs/docs/storage/platforms/powerstore/","title":"PowerStore"},{"body":"Ansible Modules for Dell EMC PowerFlex Product Guide 1.1.0 © 2021 Dell Inc. or its subsidiaries. All rights reserved. Dell, EMC, and other trademarks are trademarks of Dell Inc. or its subsidiaries. Other trademarks may be trademarks of their respective owners.\n Contents  Device Module  Synopsis Parameters Notes Examples Return Values Authors   SDC Module  Synopsis Parameters Notes Examples Return Values Authors   Volume Module  Synopsis Parameters Notes Examples Return Values Authors   SDS Module  Synopsis Parameters Notes Examples Return Values Authors   Gatherfacts Module  Synopsis Parameters Notes Examples Return Values Authors   Snapshot Module  Synopsis Parameters Notes Examples Return Values Authors   Storage Pool Module  Synopsis Parameters Notes Examples Return Values Authors     Device Module Manage device on Dell EMC PowerFlex\nSynopsis Managing device on PowerFlex storage system includes adding new device, getting details of device, and removing a device.\nParameters   Parameter Type Required Default Choices Description   current_pathname  str      Full path of the device to be added. Required while adding a device.    device_name  str      Device name. Mutually exclusive with device_id.    device_id  str      Device ID. Mutually exclusive with device_name.    sds_name  str      The name of the SDS. Required while adding a device. Mutually exclusive with sds_id.    sds_id  str      The ID of the SDS. Required while adding a device. Mutually exclusive with sds_name.    storage_pool_name  str      Storage Pool name. Used while adding a storage device. Mutually exclusive with storage_pool_id, acceleration_pool_id and acceleration_pool_name.    storage_pool_id  str      Storage Pool ID. Used while adding a storage device. Media type supported are SSD and HDD. Mutually exclusive with storage_pool_name, acceleration_pool_id and acceleration_pool_name.    acceleration_pool_name  str      Acceleration Pool Name. Used while adding an acceleration device. Media type supported are SSD and NVDIMM. Mutually exclusive with storage_pool_id, storage_pool_name and acceleration_pool_name.    acceleration_pool_id  str      Acceleration Pool ID. Used while adding an acceleration device. Media type supported are SSD and NVDIMM. Mutually exclusive with acceleration_pool_name, storage_pool_name and storage_pool_id.    protection_domain_name  str      Protection domain name. Used while identifying a storage pool along with storage_pool_name. Mutually exclusive with protection_domain_id.    protection_domain_id  str      Protection domain ID. Used while identifying a storage pool along with storage_pool_name. Mutually exclusive with protection_domain_name.    external_acceleration_type  str      Invalid None Read Write ReadAndWrite   Device external acceleration types. Used while adding a device.    media_type  str      HDD SSD NVDIMM   Device media types. Required while adding a device.    state  str   True     present absent   State of the device.    gateway_host  str   True     IP or FQDN of the PowerFlex gateway host.    username  str   True     The username of the PowerFlex gateway host.    password  str   True     The password of the PowerFlex gateway host.    verifycert  bool    True    True False   Boolean variable to specify whether or not to validate SSL certificate. True - Indicates that the SSL certificate should be verified. False - Indicates that the SSL certificate should not be verified.    port  int    443    Port number through which communication happens with PowerFlex gateway host.    Notes  The value for device_id is generated only after successful addition of the device. Unique ways to identify a device - (current_pathname , sds_id) or (current_pathname , sds_name) or (device_name , sds_name) or (device_name , sds_id) or device_id. It is recommended to install Rfcache driver for SSD device on SDS in order to add it to an acceleration pool. The check_mode is not supported.  Examples - name: Add a device dellemc.powerflex.dellemc_powerflex_device: gateway_host: \u0026quot;{{gateway_host}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; port: \u0026quot;{{port}}\u0026quot; current_pathname: \u0026quot;/dev/sdb\u0026quot; sds_name: \u0026quot;node1\u0026quot; media_type: \u0026quot;HDD\u0026quot; device_name: \u0026quot;device2\u0026quot; storage_pool_name: \u0026quot;pool1\u0026quot; protection_domain_name: \u0026quot;domain1\u0026quot; external_acceleration_type: \u0026quot;ReadAndWrite\u0026quot; state: \u0026quot;present\u0026quot; - name: Get device details using device_id dellemc.powerflex.dellemc_powerflex_device: gateway_host: \u0026quot;{{gateway_host}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; port: \u0026quot;{{port}}\u0026quot; device_id: \u0026quot;d7fe088900000000\u0026quot; state: \u0026quot;present\u0026quot; - name: Get device details using (current_pathname, sds_name) dellemc.powerflex.dellemc_powerflex_device: gateway_host: \u0026quot;{{gateway_host}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; port: \u0026quot;{{port}}\u0026quot; current_pathname: \u0026quot;/dev/sdb\u0026quot; sds_name: \u0026quot;node0\u0026quot; state: \u0026quot;present\u0026quot; - name: Get device details using (current_pathname, sds_id) dellemc.powerflex.dellemc_powerflex_device: gateway_host: \u0026quot;{{gateway_host}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; port: \u0026quot;{{port}}\u0026quot; current_pathname: \u0026quot;/dev/sdb\u0026quot; sds_id: \u0026quot;5717d71800000000\u0026quot; state: \u0026quot;present\u0026quot; - name: Remove a device using device_id dellemc.powerflex.dellemc_powerflex_device: gateway_host: \u0026quot;{{gateway_host}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; port: \u0026quot;{{port}}\u0026quot; device_id: \u0026quot;76eb7e2f00010000\u0026quot; state: \u0026quot;absent\u0026quot; - name: Remove a device using (current_pathname, sds_id) dellemc.powerflex.dellemc_powerflex_device: gateway_host: \u0026quot;{{gateway_host}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; port: \u0026quot;{{port}}\u0026quot; current_pathname: \u0026quot;/dev/sdb\u0026quot; sds_name: \u0026quot;node1\u0026quot; state: \u0026quot;absent\u0026quot; Return Values   Key Type Returned Description   changed   bool   always   Whether or not the resource has changed.    device_details   complex   When device exists   Details of the device.    \u0026nbsp; accelerationPoolId   str  success  Acceleration pool ID.    \u0026nbsp; accelerationPoolName   str  success  Acceleration pool name.    \u0026nbsp; accelerationProps   str  success  Indicates acceleration props.    \u0026nbsp; aggregatedState   str  success  Indicates aggregated state.    \u0026nbsp; ataSecurityActive   bool  success  Indicates ATA security active state.    \u0026nbsp; autoDetectMediaType   str  success  Indicates auto detection of media type.    \u0026nbsp; cacheLookAheadActive   bool  success  Indicates cache look ahead active state.    \u0026nbsp; capacity   int  success  Device capacity.    \u0026nbsp; capacityLimitInKb   int  success  Device capacity limit in KB.    \u0026nbsp; deviceCurrentPathName   str  success  Device current path name.    \u0026nbsp; deviceOriginalPathName   str  success  Device original path name.    \u0026nbsp; deviceState   str  success  Indicates device state.    \u0026nbsp; deviceType   str  success  Indicates device type.    \u0026nbsp; errorState   str  success  Indicates error state.    \u0026nbsp; externalAccelerationType   str  success  Indicates external acceleration type.    \u0026nbsp; fglNvdimmMetadataAmortizationX100   int  success  Indicates FGL NVDIMM meta data amortization value.    \u0026nbsp; fglNvdimmWriteCacheSize   int  success  Indicates FGL NVDIMM write cache size.    \u0026nbsp; firmwareVersion   str  success  Indicates firmware version.    \u0026nbsp; id   str  success  Device ID.    \u0026nbsp; ledSetting   str  success  Indicates LED setting.    \u0026nbsp; links   list  success  Device links.    \u0026nbsp; \u0026nbsp; href   str  success  Device instance URL.    \u0026nbsp; \u0026nbsp; rel   str  success  Relationship of device with different entities.    \u0026nbsp; logicalSectorSizeInBytes   int  success  Logical sector size in bytes.    \u0026nbsp; longSuccessfulIos   list  success  Indicates long successful IOs.    \u0026nbsp; maxCapacityInKb   int  success  Maximum device capacity limit in KB.    \u0026nbsp; mediaFailing   bool  success  Indicates media failing.    \u0026nbsp; mediaType   str  success  Indicates media type.    \u0026nbsp; modelName   str  success  Indicates model name.    \u0026nbsp; name   str  success  Device name.    \u0026nbsp; persistentChecksumState   str  success  Indicates persistent checksum state.    \u0026nbsp; physicalSectorSizeInBytes   int  success  Physical sector size in bytes.    \u0026nbsp; protectionDomainId   str  success  Protection domain ID.    \u0026nbsp; protectionDomainName   str  success  Protection domain name.    \u0026nbsp; raidControllerSerialNumber   str  success  RAID controller serial number.    \u0026nbsp; rfcacheErrorDeviceDoesNotExist   bool  success  Indicates RF cache error device does not exist.    \u0026nbsp; rfcacheProps   str  success  RF cache props.    \u0026nbsp; sdsId   str  success  SDS ID.    \u0026nbsp; sdsName   str  success  SDS name.    \u0026nbsp; serialNumber   str  success  Indicates Serial number.    \u0026nbsp; spSdsId   str  success  Indicates SPs SDS ID.    \u0026nbsp; ssdEndOfLifeState   str  success  Indicates SSD end of life state.    \u0026nbsp; storagePoolId   str  success  Storage Pool ID.    \u0026nbsp; storagePoolName   str  success  Storage Pool name.    \u0026nbsp; storageProps   list  success  Storage props.    \u0026nbsp; temperatureState   str  success  Indicates temperature state.    \u0026nbsp; vendorName   str  success  Indicates vendor name.    \u0026nbsp; writeCacheActive   bool  success  Indicates write cache active.    Authors  Rajshree Khare (@khareRajshree) ansible.team@dell.com   SDC Module Manage SDCs on Dell EMC PowerFlex\nSynopsis Managing SDCs on PowerFlex storage system includes getting details of SDC and renaming SDC.\nParameters   Parameter Type Required Default Choices Description   sdc_name  str      Name of the SDC. Specify either sdc_name, sdc_id or sdc_ip for get/rename operation. Mutually exclusive with sdc_id and sdc_ip.    sdc_id  str      ID of the SDC. Specify either sdc_name, sdc_id or sdc_ip for get/rename operation. Mutually exclusive with sdc_name and sdc_ip.    sdc_ip  str      IP of the SDC. Specify either sdc_name, sdc_id or sdc_ip for get/rename operation. Mutually exclusive with sdc_id and sdc_name.    sdc_new_name  str      New name of the SDC. Used to rename the SDC.    state  str   True     present absent   State of the SDC.    gateway_host  str   True     IP or FQDN of the PowerFlex gateway host.    username  str   True     The username of the PowerFlex gateway host.    password  str   True     The password of the PowerFlex gateway host.    verifycert  bool    True    True False   Boolean variable to specify whether or not to validate SSL certificate. True - Indicates that the SSL certificate should be verified. False - Indicates that the SSL certificate should not be verified.    port  int    443    Port number through which communication happens with PowerFlex gateway host.    Notes  The check_mode is not supported.  Examples - name: Get SDC details using SDC ip dellemc.powerflex.dellemc_powerflex_sdc: gateway_host: \u0026quot;{{gateway_host}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; sdc_ip: \u0026quot;{{sdc_ip}}\u0026quot; state: \u0026quot;present\u0026quot; - name: Rename SDC using SDC name dellemc.powerflex.dellemc_powerflex_sdc: gateway_host: \u0026quot;{{gateway_host}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; sdc_name: \u0026quot;centos_sdc\u0026quot; sdc_new_name: \u0026quot;centos_sdc_renamed\u0026quot; state: \u0026quot;present\u0026quot; Return Values   Key Type Returned Description   changed   bool   always   Whether or not the resource has changed.    sdc_details   complex   When SDC exists   Details of the SDC.    \u0026nbsp; id   str  success  The ID of the SDC.    \u0026nbsp; mapped_volumes   list  success  The details of the mapped volumes.    \u0026nbsp; \u0026nbsp; id   str  success  The ID of the volume.    \u0026nbsp; \u0026nbsp; name   str  success  The name of the volume.    \u0026nbsp; \u0026nbsp; volumeType   str  success  Type of the volume.    \u0026nbsp; name   str  success  Name of the SDC.    \u0026nbsp; osType   str  success  OS type of the SDC.    \u0026nbsp; sdcApproved   bool  success  Indicates whether an SDC has approved access to the system.    \u0026nbsp; sdcIp   str  success  IP of the SDC.    Authors  Akash Shendge (@shenda1) ansible.team@dell.com   Volume Module Manage volumes on Dell EMC PowerFlex\nSynopsis Managing volumes on PowerFlex storage system includes creating new volume, getting details of volume, adding/removing snapshot policy to/from volume, mapping/unmapping volume to/from SDC, listing snapshots associated with a volume, modifying attributes of volume and deleting volume.\nParameters   Parameter Type Required Default Choices Description   vol_name  str      The name of the volume. Mandatory for create operation. It is unique across the PowerFlex array. Mutually exclusive with vol_id.    vol_id  str      The ID of the volume. Except create operation, all other operations can be performed using vol_id. Mutually exclusive with vol_id.    storage_pool_name  str      The name of the storage pool. Either name or the id of the storage pool is required for creating a volume. During creation, if storage pool name is provided then either protection domain name or id must be mentioned along with it. Mutually exclusive with storage_pool_id.    storage_pool_id  str      The ID of the storage pool. Either name or the id of the storage pool is required for creating a volume. Mutually exclusive with storage_pool_name.    protection_domain_name  str      The name of the protection domain. During creation of a volume, if more than one storage pool exists with the same name then either protection domain name or id must be mentioned along with it. Mutually exclusive with protection_domain_id.    protection_domain_id  str      The ID of the protection domain. During creation of a volume, if more than one storage pool exists with the same name then either protection domain name or id must be mentioned along with it. Mutually exclusive with protection_domain_name.    vol_type  str      THICK_PROVISIONED THIN_PROVISIONED   Type of volume provisioning.    compression_type  str      NORMAL NONE   Type of the compression method.    use_rmcache  bool      Whether to use RM Cache or not.    snapshot_policy_name  str      Name of the snapshot policy. To remove/detach snapshot policy, empty snapshot_policy_id/snapshot_policy_name is to be passed along with auto_snap_remove_type.    snapshot_policy_id  str      ID of the snapshot policy. To remove/detach snapshot policy, empty snapshot_policy_id/snapshot_policy_name is to be passed along with auto_snap_remove_type.    auto_snap_remove_type  str      remove detach   Whether to remove or detach the snapshot policy. To remove/detach snapshot policy, empty snapshot_policy_id/snapshot_policy_name is to be passed along with auto_snap_remove_type. If the snapshot policy name/id is passed empty then auto_snap_remove_type is defaulted to 'detach'.    size  int      The size of the volume. Size of the volume will be assigned as higher multiple of 8 GB.    cap_unit  str      GB TB   The unit of the volume size. It defaults to 'GB'.    vol_new_name  str      New name of the volume. Used to rename the volume.    allow_multiple_mappings  bool      Specifies whether to allow multiple mappings or not. If the volume is mapped to one SDC then for every new mapping allow_multiple_mappings has to be passed as True.    sdc  list elements: dict      Specifies SDC parameters.    \u0026nbsp; sdc_name   str      Name of the SDC. Specify either sdc_name, sdc_id or sdc_ip. Mutually exclusive with sdc_id and sdc_ip.    \u0026nbsp; sdc_id   str      ID of the SDC. Specify either sdc_name, sdc_id or sdc_ip. Mutually exclusive with sdc_name and sdc_ip.    \u0026nbsp; sdc_ip   str      IP of the SDC. Specify either sdc_name, sdc_id or sdc_ip. Mutually exclusive with sdc_id and sdc_ip.    \u0026nbsp; access_mode   str      READ_WRITE READ_ONLY NO_ACCESS   Define the access mode for all mappings of the volume.    \u0026nbsp; bandwidth_limit   int      Limit of volume network bandwidth. Need to mention in multiple of 1024 Kbps. To set no limit, 0 is to be passed.    \u0026nbsp; iops_limit   int      Limit of volume IOPS. Minimum IOPS limit is 11 and specify 0 for unlimited iops.    sdc_state  str      mapped unmapped   Mapping state of the SDC.    delete_snapshots  bool      If True, the volume and all its dependent snapshots will be deleted. If False, only the volume will be deleted. It can be specified only when the state is absent. It defaults to False, if not specified.    state  str   True     present absent   State of the volume.    gateway_host  str   True     IP or FQDN of the PowerFlex gateway host.    username  str   True     The username of the PowerFlex gateway host.    password  str   True     The password of the PowerFlex gateway host.    verifycert  bool    True    True False   Boolean variable to specify whether or not to validate SSL certificate. True - Indicates that the SSL certificate should be verified. False - Indicates that the SSL certificate should not be verified.    port  int    443    Port number through which communication happens with PowerFlex gateway host.    Notes  The check_mode is not supported.  Examples - name: Create a volume dellemc.powerflex.dellemc_powerflex_volume: gateway_host: \u0026quot;{{gateway_host}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; port: \u0026quot;{{port}}\u0026quot; vol_name: \u0026quot;sample_volume\u0026quot; storage_pool_name: \u0026quot;pool_1\u0026quot; protection_domain_name: \u0026quot;pd_1\u0026quot; vol_type: \u0026quot;THICK_PROVISIONED\u0026quot; compression_type: \u0026quot;NORMAL\u0026quot; use_rmcache: True size: 16 state: \u0026quot;present\u0026quot; - name: Map a SDC to volume dellemc.powerflex.dellemc_powerflex_volume: gateway_host: \u0026quot;{{gateway_host}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; port: \u0026quot;{{port}}\u0026quot; vol_name: \u0026quot;sample_volume\u0026quot; allow_multiple_mappings: True sdc: - sdc_id: \u0026quot;92A304DB-EFD7-44DF-A07E-D78134CC9764\u0026quot; access_mode: \u0026quot;READ_WRITE\u0026quot; sdc_state: \u0026quot;mapped\u0026quot; state: \u0026quot;present\u0026quot; - name: Unmap a SDC to volume dellemc.powerflex.dellemc_powerflex_volume: gateway_host: \u0026quot;{{gateway_host}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; port: \u0026quot;{{port}}\u0026quot; vol_name: \u0026quot;sample_volume\u0026quot; sdc: - sdc_id: \u0026quot;92A304DB-EFD7-44DF-A07E-D78134CC9764\u0026quot; sdc_state: \u0026quot;unmapped\u0026quot; state: \u0026quot;present\u0026quot; - name: Map multiple SDCs to a volume dellemc.powerflex.dellemc_powerflex_volume: gateway_host: \u0026quot;{{gateway_host}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; port: \u0026quot;{{port}}\u0026quot; vol_name: \u0026quot;sample_volume\u0026quot; protection_domain_name: \u0026quot;pd_1\u0026quot; sdc: - sdc_id: \u0026quot;92A304DB-EFD7-44DF-A07E-D78134CC9764\u0026quot; access_mode: \u0026quot;READ_WRITE\u0026quot; bandwidth_limit: 2048 iops_limit: 20 - sdc_ip: \u0026quot;198.10.xxx.xxx\u0026quot; access_mode: \u0026quot;READ_ONLY\u0026quot; allow_multiple_mappings: True sdc_state: \u0026quot;mapped\u0026quot; state: \u0026quot;present\u0026quot; - name: Get the details of the volume dellemc.powerflex.dellemc_powerflex_volume: gateway_host: \u0026quot;{{gateway_host}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; port: \u0026quot;{{port}}\u0026quot; vol_id: \u0026quot;fe6c8b7100000005\u0026quot; state: \u0026quot;present\u0026quot; - name: Modify the details of the Volume dellemc.powerflex.dellemc_powerflex_volume: gateway_host: \u0026quot;{{gateway_host}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; port: \u0026quot;{{port}}\u0026quot; vol_name: \u0026quot;sample_volume\u0026quot; storage_pool_name: \u0026quot;pool_1\u0026quot; new_vol_name: \u0026quot;new_sample_volume\u0026quot; size: 64 state: \u0026quot;present\u0026quot; - name: Delete the Volume dellemc.powerflex.dellemc_powerflex_volume: gateway_host: \u0026quot;{{gateway_host}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; port: \u0026quot;{{port}}\u0026quot; vol_name: \u0026quot;sample_volume\u0026quot; delete_snapshots: False state: \u0026quot;absent\u0026quot; - name: Delete the Volume and all its dependent snapshots dellemc.powerflex.dellemc_powerflex_volume: gateway_host: \u0026quot;{{gateway_host}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; port: \u0026quot;{{port}}\u0026quot; vol_name: \u0026quot;sample_volume\u0026quot; delete_snapshots: True state: \u0026quot;absent\u0026quot; Return Values   Key Type Returned Description   changed   bool   always   Whether or not the resource has changed.    volume_details   complex   When volume exists   Details of the volume.    \u0026nbsp; id   str  success  The ID of the volume.    \u0026nbsp; mappedSdcInfo   complex  success  The details of the mapped SDC.    \u0026nbsp; \u0026nbsp; accessMode   str  success  mapping access mode for the specified volume.    \u0026nbsp; \u0026nbsp; limitBwInMbps   int  success  Bandwidth limit for the SDC.    \u0026nbsp; \u0026nbsp; limitIops   int  success  IOPS limit for the SDC.    \u0026nbsp; \u0026nbsp; sdcId   str  success  ID of the SDC.    \u0026nbsp; \u0026nbsp; sdcIp   str  success  IP of the SDC.    \u0026nbsp; \u0026nbsp; sdcName   str  success  Name of the SDC.    \u0026nbsp; name   str  success  Name of the volume.    \u0026nbsp; protectionDomainId   str  success  ID of the protection domain in which volume resides.    \u0026nbsp; protectionDomainName   str  success  Name of the protection domain in which volume resides.    \u0026nbsp; sizeInGb   int  success  Size of the volume in Gb.    \u0026nbsp; sizeInKb   int  success  Size of the volume in Kb.    \u0026nbsp; snapshotPolicyId   str  success  ID of the snapshot policy associated with volume.    \u0026nbsp; snapshotPolicyName   str  success  Name of the snapshot policy associated with volume.    \u0026nbsp; snapshotsList   str  success  List of snapshots associated with the volume.    \u0026nbsp; storagePoolId   str  success  ID of the storage pool in which volume resides.    \u0026nbsp; storagePoolName   str  success  Name of the storage pool in which volume resides.    Authors  P Srinivas Rao (@srinivas-rao5) ansible.team@dell.com   SDS Module Manage SDS on Dell EMC PowerFlex\nSynopsis Managing SDS on PowerFlex storage system includes creating new SDS, getting details of SDS, adding/removing IP to/from SDS, modifying attributes of SDS, and deleting SDS.\nParameters   Parameter Type Required Default Choices Description   sds_name  str      The name of the SDS. Mandatory for create operation. It is unique across the PowerFlex array. Mutually exclusive with sds_id.    sds_id  str      The ID of the SDS. Except create operation, all other operations can be performed using sds_id. Mutually exclusive with sds_name.    protection_domain_name  str      The name of the protection domain. Mutually exclusive with protection_domain_id.    protection_domain_id  str      The ID of the protection domain. Mutually exclusive with protection_domain_name.    sds_ip_list  list elements: dict      Dictionary of IPs and their roles for the SDS. At least one IP-role is mandatory while creating a SDS. IP-roles can be updated as well.    \u0026nbsp; ip   str   True     IP address of the SDS.    \u0026nbsp; role   str   True     sdsOnly sdcOnly all   Role assigned to the SDS IP address.    sds_ip_state  str      present-in-sds absent-in-sds   State of IP with respect to the SDS.    rfcache_enabled  bool      Whether to enable the Read Flash cache.    rmcache_enabled  bool      Whether to enable the Read RAM cache.    rmcache_size  int      Read RAM cache size (in MB). Minimum size is 128 MB. Maximum size is 3911 MB.    sds_new_name  str      SDS new name.    performance_profile  str      Compact HighPerformance   Performance profile to apply to the SDS. The HighPerformance profile configures a predefined set of parameters for very high performance use cases. Default value by API is \"HighPerformance\".    state  str   True     present absent   State of the SDS.    gateway_host  str   True     IP or FQDN of the PowerFlex gateway host.    username  str   True     The username of the PowerFlex gateway host.    password  str   True     The password of the PowerFlex gateway host.    verifycert  bool    True    True False   Boolean variable to specify whether or not to validate SSL certificate. True - Indicates that the SSL certificate should be verified. False - Indicates that the SSL certificate should not be verified.    port  int    443    Port number through which communication happens with PowerFlex gateway host.    Notes  The maximum limit for the IPs that can be associated with an SDS is 8. There needs to be at least 1 IP for SDS communication and 1 for SDC communication(if only 1 IP exists, it must be with role \u0026lsquo;all\u0026rsquo;; else 1 IP can be with role \u0026lsquo;all\u0026rsquo;and other IPs with role \u0026lsquo;sdcOnly\u0026rsquo;; or 1 IP must be with role \u0026lsquo;sdsOnly\u0026rsquo; and others with role \u0026lsquo;sdcOnly\u0026rsquo;). There can be 1 or more IPs with role \u0026lsquo;sdcOnly\u0026rsquo;. There must be only 1 IP with SDS role (either with role \u0026lsquo;all\u0026rsquo; or \u0026lsquo;sdsOnly\u0026rsquo;). SDS can be created with RF cache disabled, but, be aware that the RF cache is not always updated. In this case, the user should re-try the operation. The check_mode is not supported.  Examples - name: Create SDS dellemc.powerflex.dellemc_powerflex_sds: gateway_host: \u0026quot;{{gateway_host}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; port: \u0026quot;{{port}}\u0026quot; sds_name: \u0026quot;node0\u0026quot; protection_domain_name: \u0026quot;domain1\u0026quot; sds_ip_list: - ip: \u0026quot;198.10.xxx.xxx\u0026quot; role: \u0026quot;all\u0026quot; sds_ip_state: \u0026quot;present-in-sds\u0026quot; state: \u0026quot;present\u0026quot; - name: Create SDS with all parameters dellemc.powerflex.dellemc_powerflex_sds: gateway_host: \u0026quot;{{gateway_host}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; port: \u0026quot;{{port}}\u0026quot; sds_name: \u0026quot;node1\u0026quot; protection_domain_name: \u0026quot;domain1\u0026quot; sds_ip_list: - ip: \u0026quot;198.10.xxx.xxx\u0026quot; role: \u0026quot;sdcOnly\u0026quot; sds_ip_state: \u0026quot;present-in-sds\u0026quot; rmcache_enabled: true rmcache_size: 128 performance_profile: \u0026quot;HighPerformance\u0026quot; state: \u0026quot;present\u0026quot; - name: Get SDS details using name dellemc.powerflex.dellemc_powerflex_sds: gateway_host: \u0026quot;{{gateway_host}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; port: \u0026quot;{{port}}\u0026quot; sds_name: \u0026quot;node0\u0026quot; state: \u0026quot;present\u0026quot; - name: Get SDS details using ID dellemc.powerflex.dellemc_powerflex_sds: gateway_host: \u0026quot;{{gateway_host}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; port: \u0026quot;{{port}}\u0026quot; sds_id: \u0026quot;5718253c00000004\u0026quot; state: \u0026quot;present\u0026quot; - name: Modify SDS attributes using name dellemc.powerflex.dellemc_powerflex_sds: gateway_host: \u0026quot;{{gateway_host}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; port: \u0026quot;{{port}}\u0026quot; sds_name: \u0026quot;node0\u0026quot; sds_new_name: \u0026quot;node0_new\u0026quot; rfcache_enabled: true rmcache_enabled: true rmcache_size: 256 performance_profile: \u0026quot;HighPerformance\u0026quot; state: \u0026quot;present\u0026quot; - name: Modify SDS attributes using ID dellemc.powerflex.dellemc_powerflex_sds: gateway_host: \u0026quot;{{gateway_host}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; port: \u0026quot;{{port}}\u0026quot; sds_id: \u0026quot;5718253c00000004\u0026quot; sds_new_name: \u0026quot;node0_new\u0026quot; rfcache_enabled: true rmcache_enabled: true rmcache_size: 256 performance_profile: \u0026quot;HighPerformance\u0026quot; state: \u0026quot;present\u0026quot; - name: Add IP and role to an SDS dellemc.powerflex.dellemc_powerflex_sds: gateway_host: \u0026quot;{{gateway_host}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; port: \u0026quot;{{port}}\u0026quot; sds_name: \u0026quot;node0\u0026quot; sds_ip_list: - ip: \u0026quot;198.10.xxx.xxx\u0026quot; role: \u0026quot;sdcOnly\u0026quot; sds_ip_state: \u0026quot;present-in-sds\u0026quot; state: \u0026quot;present\u0026quot; - name: Remove IP and role from an SDS dellemc.powerflex.dellemc_powerflex_sds: gateway_host: \u0026quot;{{gateway_host}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; port: \u0026quot;{{port}}\u0026quot; sds_name: \u0026quot;node0\u0026quot; sds_ip_list: - ip: \u0026quot;198.10.xxx.xxx\u0026quot; role: \u0026quot;sdcOnly\u0026quot; sds_ip_state: \u0026quot;absent-in-sds\u0026quot; state: \u0026quot;present\u0026quot; - name: Delete SDS using name dellemc.powerflex.dellemc_powerflex_sds: gateway_host: \u0026quot;{{gateway_host}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; port: \u0026quot;{{port}}\u0026quot; sds_name: \u0026quot;node0\u0026quot; state: \u0026quot;absent\u0026quot; - name: Delete SDS using ID dellemc.powerflex.dellemc_powerflex_sds: gateway_host: \u0026quot;{{gateway_host}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; port: \u0026quot;{{port}}\u0026quot; sds_id: \u0026quot;5718253c00000004\u0026quot; state: \u0026quot;absent\u0026quot; Return Values   Key Type Returned Description   changed   bool   always   Whether or not the resource has changed.    sds_details   complex   When SDS exists   Details of the SDS.    \u0026nbsp; authenticationError   str  success  Indicates authentication error.    \u0026nbsp; certificateInfo   str  success  Information about certificate.    \u0026nbsp; configuredDrlMode   str  success  Configured DRL mode.    \u0026nbsp; drlMode   str  success  DRL mode.    \u0026nbsp; faultSetId   str  success  Fault set ID.    \u0026nbsp; fglMetadataCacheSize   int  success  FGL metadata cache size.    \u0026nbsp; fglMetadataCacheState   str  success  FGL metadata cache state.    \u0026nbsp; fglNumConcurrentWrites   int  success  FGL concurrent writes.    \u0026nbsp; id   str  success  SDS ID.    \u0026nbsp; ipList   list  success  SDS IP list.    \u0026nbsp; \u0026nbsp; ip   str  success  IP present in the SDS.    \u0026nbsp; \u0026nbsp; role   str  success  Role of the SDS IP.    \u0026nbsp; lastUpgradeTime   str  success  Last time SDS was upgraded.    \u0026nbsp; links   list  success  SDS links.    \u0026nbsp; \u0026nbsp; href   str  success  SDS instance URL.    \u0026nbsp; \u0026nbsp; rel   str  success  SDS's relationship with different entities.    \u0026nbsp; maintenanceState   str  success  Maintenance state.    \u0026nbsp; maintenanceType   str  success  Maintenance type.    \u0026nbsp; mdmConnectionState   str  success  MDM connection state.    \u0026nbsp; membershipState   str  success  Membership state.    \u0026nbsp; name   str  success  Name of the SDS.    \u0026nbsp; numOfIoBuffers   int  success  Number of IO buffers.    \u0026nbsp; numRestarts   int  success  Number of restarts.    \u0026nbsp; onVmWare   bool  success  Presence on VMware.    \u0026nbsp; perfProfile   str  success  Performance profile.    \u0026nbsp; port   int  success  SDS port.    \u0026nbsp; protectionDomainId   str  success  Protection Domain ID.    \u0026nbsp; protectionDomainName   str  success  Protection Domain Name.    \u0026nbsp; raidControllers   int  success  Number of RAID controllers.    \u0026nbsp; rfcacheEnabled   bool  success  Whether RF cache is enabled or not.    \u0026nbsp; rfcacheErrorApiVersionMismatch   bool  success  RF cache error for API version mismatch.    \u0026nbsp; rfcacheErrorDeviceDoesNotExist   bool  success  RF cache error for device does not exist.    \u0026nbsp; rfcacheErrorInconsistentCacheConfiguration   bool  success  RF cache error for inconsistent cache configuration.    \u0026nbsp; rfcacheErrorInconsistentSourceConfiguration   bool  success  RF cache error for inconsistent source configuration.    \u0026nbsp; rfcacheErrorInvalidDriverPath   bool  success  RF cache error for invalid driver path.    \u0026nbsp; rfcacheErrorLowResources   bool  success  RF cache error for low resources.    \u0026nbsp; rmcacheEnabled   bool  success  Whether Read RAM cache is enabled or not.    \u0026nbsp; rmcacheFrozen   bool  success  RM cache frozen.    \u0026nbsp; rmcacheMemoryAllocationState   bool  success  RM cache memory allocation state.    \u0026nbsp; rmcacheSizeInKb   int  success  RM cache size in KB.    \u0026nbsp; rmcacheSizeInMb   int  success  RM cache size in MB.    \u0026nbsp; sdsConfigurationFailure   str  success  SDS configuration failure.    \u0026nbsp; sdsDecoupled   str  success  SDS decoupled.    \u0026nbsp; sdsReceiveBufferAllocationFailures   str  success  SDS receive buffer allocation failures.    \u0026nbsp; sdsState   str  success  SDS state.    \u0026nbsp; softwareVersionInfo   str  success  SDS software version information.    Authors  Rajshree Khare (@khareRajshree) ansible.team@dell.com   Gatherfacts Module Gathering information about Dell EMC PowerFlex\nSynopsis Gathering information about Dell EMC PowerFlex storage system includes get the api details of a PowerFlex array, get list of volumes in PowerFlex array, get list of SDSs in a PowerFlex array, get list of SDCs in a PowerFlex array, get list of storage pools in PowerFlex array, get list of protection domains in a PowerFlex array, get list of snapshot policies in a PowerFlex array, and get list of devices in a PowerFlex array.\nParameters   Parameter Type Required Default Choices Description   gather_subset  list elements: str      vol storage_pool protection_domain sdc sds snapshot_policy device   List of string variables to specify the Powerflex storage system entities for which information is required. Volumes - vol. Storage pools - storage_pool. Protection domains - protection_domain. SDCs - sdc. SDSs - sds. Snapshot policies - snapshot_policy. Devices - device.    filters  list elements: dict      List of filters to support filtered output for storage entities. Each filter is a list of filter_key, filter_operator, filter_value. Supports passing of multiple filters.    \u0026nbsp; filter_key   str   True     Name identifier of the filter.    \u0026nbsp; filter_operator   str   True     equal   Operation to be performed on filter key.    \u0026nbsp; filter_value   str   True     Value of the filter key.    gateway_host  str   True     IP or FQDN of the PowerFlex gateway host.    username  str   True     The username of the PowerFlex gateway host.    password  str   True     The password of the PowerFlex gateway host.    verifycert  bool    True    True False   Boolean variable to specify whether or not to validate SSL certificate. True - Indicates that the SSL certificate should be verified. False - Indicates that the SSL certificate should not be verified.    port  int    443    Port number through which communication happens with PowerFlex gateway host.    Notes  The check_mode is not supported.  Examples  - name: Get detailed list of PowerFlex entities dellemc.powerflex.dellemc_powerflex_gatherfacts: gateway_host: \u0026quot;{{gateway_host}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; gather_subset: - vol - storage_pool - protection_domain - sdc - sds - snapshot_policy - device - name: Get a subset list of PowerFlex volumes dellemc.powerflex.dellemc_powerflex_gatherfacts: gateway_host: \u0026quot;{{gateway_host}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; gather_subset: - vol filters: - filter_key: \u0026quot;name\u0026quot; filter_operator: \u0026quot;equal\u0026quot; filter_value: \u0026quot;ansible_test\u0026quot; Return Values   Key Type Returned Description   API_Version   str   always   API version of PowerFlex API Gateway.    Array_Details   dict   always   System entities of PowerFlex storage array.    \u0026nbsp; addressSpaceUsage   str  success  Address space usage.    \u0026nbsp; authenticationMethod   str  success  Authentication method.    \u0026nbsp; capacityAlertCriticalThresholdPercent   int  success  Capacity alert critical threshold percentage.    \u0026nbsp; capacityAlertHighThresholdPercent   int  success  Capacity alert high threshold percentage.    \u0026nbsp; capacityTimeLeftInDays   str  success  Capacity time left in days.    \u0026nbsp; cliPasswordAllowed   bool  success  CLI password allowed.    \u0026nbsp; daysInstalled   int  success  Days installed.    \u0026nbsp; defragmentationEnabled   bool  success  Defragmentation enabled.    \u0026nbsp; enterpriseFeaturesEnabled   bool  success  Enterprise eatures enabled.    \u0026nbsp; id   str  success  The ID of the system.    \u0026nbsp; installId   str  success  installation Id.    \u0026nbsp; isInitialLicense   bool  success  Initial license.    \u0026nbsp; lastUpgradeTime   int  success  Last upgrade time.    \u0026nbsp; managementClientSecureCommunicationEnabled   bool  success  Management client secure communication enabled.    \u0026nbsp; maxCapacityInGb   dict  success  Maximum capacity in GB.    \u0026nbsp; mdmCluster   dict  success  MDM cluster details.    \u0026nbsp; mdmExternalPort   int  success  MDM external port.    \u0026nbsp; mdmManagementPort   int  success  MDM management port.    \u0026nbsp; mdmSecurityPolicy   str  success  MDM security policy.    \u0026nbsp; showGuid   bool  success  Show guid.    \u0026nbsp; swid   str  success  SWID.    \u0026nbsp; systemVersionName   str  success  System version and name.    \u0026nbsp; tlsVersion   str  success  TLS version.    \u0026nbsp; upgradeState   str  success  Upgrade state.    Devices   list   always   Details of devices.    \u0026nbsp; id   str  success  device id.    \u0026nbsp; name   str  success  device name.    Protection_Domains   list   always   Details of all protection domains.    \u0026nbsp; id   str  success  protection domain id.    \u0026nbsp; name   str  success  protection domain name.    SDCs   list   always   Details of storage data clients.    \u0026nbsp; id   str  success  storage data client id.    \u0026nbsp; name   str  success  storage data client name.    SDSs   list   always   Details of storage data servers.    \u0026nbsp; id   str  success  storage data server id.    \u0026nbsp; name   str  success  storage data server name.    Snapshot_Policies   list   always   Details of snapshot policies.    \u0026nbsp; id   str  success  snapshot policy id.    \u0026nbsp; name   str  success  snapshot policy name.    Storage_Pools   list   always   Details of storage pools.    \u0026nbsp; id   str  success  storage pool id.    \u0026nbsp; name   str  success  storage pool name.    Volumes   list   always   Details of volumes.    \u0026nbsp; id   str  success  volume id.    \u0026nbsp; name   str  success  volume name.    changed   bool   always   Whether or not the resource has changed.    Authors  Arindam Datta (@dattaarindam) ansible.team@dell.com   Snapshot Module Manage Snapshots on Dell EMC PowerFlex\nSynopsis Managing snapshots on PowerFlex Storage System includes creating new snapshot, getting details of snapshot, mapping/unmapping snapshot to/from SDC, modifying attributes of snapshot and deleting snapshot.\nParameters   Parameter Type Required Default Choices Description   snapshot_name  str      The name of the snapshot. Mandatory for create operation. Specify either snapshot name or ID (but not both) for any operation.    snapshot_id  str      The ID of the Snapshot.    vol_name  str      The name of the volume for which snapshot will be taken. Specify either vol_name or vol_id while creating snapshot.    vol_id  str      The ID of the volume.    read_only  bool      Specifies whether mapping of the created snapshot volume will have read-write access or limited to read-only access. If true, snapshot is created with read-only access. If false, snapshot is created with read-write access.    size  int      The size of the snapshot.    cap_unit  str      GB TB   The unit of the volume size. It defaults to 'GB', if not specified..    snapshot_new_name  str      New name of the snapshot. Used to rename the snapshot.    allow_multiple_mappings  bool      Specifies whether to allow multiple mappings or not.    desired_retention  int      The retention value for the Snapshot. If the desired_retention is not mentioned during creation, snapshot will be created with unlimited retention. Maximum supported desired retention is 31 days.    retention_unit  str      hours days   The unit for retention. It defaults to 'hours', if not specified.    sdc  list elements: dict      Specifies SDC parameters.    \u0026nbsp; sdc_name   str      Name of the SDC. Specify either sdc_name, sdc_id or sdc_ip. Mutually exclusive with sdc_id and sdc_ip.    \u0026nbsp; sdc_id   str      ID of the SDC. Specify either sdc_name, sdc_id or sdc_ip. Mutually exclusive with sdc_name and sdc_ip.    \u0026nbsp; sdc_ip   str      IP of the SDC. Specify either sdc_name, sdc_id or sdc_ip. Mutually exclusive with sdc_id and sdc_ip.    \u0026nbsp; access_mode   str      READ_WRITE READ_ONLY NO_ACCESS   Define the access mode for all mappings of the snapshot.    \u0026nbsp; bandwidth_limit   int      Limit of snapshot network bandwidth. Need to mention in multiple of 1024 Kbps. To set no limit, 0 is to be passed.    \u0026nbsp; iops_limit   int      Limit of snapshot IOPS. Minimum IOPS limit is 11 and specify 0 for unlimited iops.    sdc_state  str      mapped unmapped   Mapping state of the SDC.    remove_mode  str      ONLY_ME INCLUDING_DESCENDANTS   Removal mode for the snapshot. It defaults to 'ONLY_ME', if not specified.    state  str   True     present absent   State of the snapshot.    gateway_host  str   True     IP or FQDN of the PowerFlex gateway host.    username  str   True     The username of the PowerFlex gateway host.    password  str   True     The password of the PowerFlex gateway host.    verifycert  bool    True    True False   Boolean variable to specify whether or not to validate SSL certificate. True - Indicates that the SSL certificate should be verified. False - Indicates that the SSL certificate should not be verified.    port  int    443    Port number through which communication happens with PowerFlex gateway host.    Notes  The check_mode is not supported.  Examples - name: Create snapshot dellemc.powerflex.dellemc_powerflex_snapshot: gateway_host: \u0026quot;{{gateway_host}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; snapshot_name: \u0026quot;ansible_snapshot\u0026quot; vol_name: \u0026quot;ansible_volume\u0026quot; read_only: False desired_retention: 2 state: \u0026quot;present\u0026quot; - name: Get snapshot details using snapshot id dellemc.powerflex.dellemc_powerflex_snapshot: gateway_host: \u0026quot;{{gateway_host}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; snapshot_id: \u0026quot;fe6cb28200000007\u0026quot; state: \u0026quot;present\u0026quot; - name: Map snapshot to SDC dellemc.powerflex.dellemc_powerflex_snapshot: gateway_host: \u0026quot;{{gateway_host}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; snapshot_id: \u0026quot;fe6cb28200000007\u0026quot; sdc: - sdc_ip: \u0026quot;198.10.xxx.xxx\u0026quot; - sdc_id: \u0026quot;663ac0d200000001\u0026quot; allow_multiple_mappings: True sdc_state: \u0026quot;mapped\u0026quot; state: \u0026quot;present\u0026quot; - name: Modify the attributes of SDC mapped to snapshot dellemc.powerflex.dellemc_powerflex_snapshot: gateway_host: \u0026quot;{{gateway_host}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; snapshot_id: \u0026quot;fe6cb28200000007\u0026quot; sdc: - sdc_ip: \u0026quot;198.10.xxx.xxx\u0026quot; iops_limit: 11 bandwidth_limit: 4096 - sdc_id: \u0026quot;663ac0d200000001\u0026quot; iops_limit: 20 bandwidth_limit: 2048 allow_multiple_mappings: True sdc_state: \u0026quot;mapped\u0026quot; state: \u0026quot;present\u0026quot; - name: Extend the size of snapshot dellemc.powerflex.dellemc_powerflex_snapshot: gateway_host: \u0026quot;{{gateway_host}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; snapshot_id: \u0026quot;fe6cb28200000007\u0026quot; size: 16 state: \u0026quot;present\u0026quot; - name: Unmap SDCs from snapshot dellemc.powerflex.dellemc_powerflex_snapshot: gateway_host: \u0026quot;{{gateway_host}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; snapshot_id: \u0026quot;fe6cb28200000007\u0026quot; sdc: - sdc_ip: \u0026quot;198.10.xxx.xxx\u0026quot; - sdc_id: \u0026quot;663ac0d200000001\u0026quot; sdc_state: \u0026quot;unmapped\u0026quot; state: \u0026quot;present\u0026quot; - name: Rename snapshot dellemc.powerflex.dellemc_powerflex_snapshot: gateway_host: \u0026quot;{{gateway_host}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; snapshot_id: \u0026quot;fe6cb28200000007\u0026quot; snapshot_new_name: \u0026quot;ansible_renamed_snapshot_10\u0026quot; state: \u0026quot;present\u0026quot; - name: Delete snapshot dellemc.powerflex.dellemc_powerflex_snapshot: gateway_host: \u0026quot;{{gateway_host}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; snapshot_id: \u0026quot;fe6cb28200000007\u0026quot; remove_mode: \u0026quot;ONLY_ME\u0026quot; state: \u0026quot;absent\u0026quot; Return Values   Key Type Returned Description   changed   bool   always   Whether or not the resource has changed.    snapshot_details   complex   When snapshot exists   Details of the snapshot.    \u0026nbsp; ancestorVolumeId   str  success  The ID of the root of the specified volume's V-Tree.    \u0026nbsp; ancestorVolumeName   str  success  The name of the root of the specified volume's V-Tree.    \u0026nbsp; creationTime   int  success  The creation time of the snapshot.    \u0026nbsp; id   str  success  The ID of the snapshot.    \u0026nbsp; mappedSdcInfo   complex  success  The details of the mapped SDC.    \u0026nbsp; \u0026nbsp; accessMode   str  success  mapping access mode for the specified snapshot.    \u0026nbsp; \u0026nbsp; limitBwInMbps   int  success  Bandwidth limit for the SDC.    \u0026nbsp; \u0026nbsp; limitIops   int  success  IOPS limit for the SDC.    \u0026nbsp; \u0026nbsp; sdcId   str  success  ID of the SDC.    \u0026nbsp; \u0026nbsp; sdcIp   str  success  IP of the SDC.    \u0026nbsp; \u0026nbsp; sdcName   str  success  Name of the SDC.    \u0026nbsp; name   str  success  Name of the snapshot.    \u0026nbsp; retentionInHours   int  success  Retention of the snapshot in hours.    \u0026nbsp; secureSnapshotExpTime   int  success  Expiry time of the snapshot.    \u0026nbsp; sizeInGb   int  success  Size of the snapshot.    \u0026nbsp; sizeInKb   int  success  Size of the snapshot.    \u0026nbsp; storagePoolId   str  success  The ID of the Storage pool in which snapshot resides.    \u0026nbsp; storagePoolName   str  success  The name of the Storage pool in which snapshot resides.    Authors  Akash Shendge (@shenda1) ansible.team@dell.com   Storage Pool Module Managing Dell EMC PowerFlex storage pool\nSynopsis Dell EMC PowerFlex storage pool module includes getting the details of storage pool, creating a new storage pool, and modifying the attribute of a storage pool.\nParameters   Parameter Type Required Default Choices Description   storage_pool_name  str      The name of the storage pool. If more than one storage pool is found with the same name then protection domain id/name is required to perform the task. Mutually exclusive with storage_pool_id.    storage_pool_id  str      The id of the storage pool. It is auto generated, hence should not be provided during creation of a storage pool. Mutually exclusive with storage_pool_name.    protection_domain_name  str      The name of the protection domain. During creation of a pool, either protection domain name or id must be mentioned. Mutually exclusive with protection_domain_id.    protection_domain_id  str      The id of the protection domain. During creation of a pool, either protection domain name or id must be mentioned. Mutually exclusive with protection_domain_name.    media_type  str      HDD SSD TRANSITIONAL   Type of devices in the storage pool.    storage_pool_new_name  str      New name for the storage pool can be provided. This parameter is used for renaming the storage pool.    use_rfcache  bool      Enable/Disable RFcache on a specific storage pool.    use_rmcache  bool      Enable/Disable RMcache on a specific storage pool.    state  str   True     present absent   State of the storage pool.    gateway_host  str   True     IP or FQDN of the PowerFlex gateway host.    username  str   True     The username of the PowerFlex gateway host.    password  str   True     The password of the PowerFlex gateway host.    verifycert  bool    True    True False   Boolean variable to specify whether or not to validate SSL certificate. True - Indicates that the SSL certificate should be verified. False - Indicates that the SSL certificate should not be verified.    port  int    443    Port number through which communication happens with PowerFlex gateway host.    Notes  TRANSITIONAL media type is supported only during modification. The check_mode is not supported.  Examples - name: Get the details of storage pool by name dellemc.powerflex.dellemc_powerflex_storagepool: gateway_host: \u0026quot;{{gateway_host}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; storage_pool_name: \u0026quot;sample_pool_name\u0026quot; protection_domain_name: \u0026quot;sample_protection_domain\u0026quot; state: \u0026quot;present\u0026quot; - name: Get the details of storage pool by id dellemc.powerflex.dellemc_powerflex_storagepool: gateway_host: \u0026quot;{{gateway_host}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; storage_pool_id: \u0026quot;abcd1234ab12r\u0026quot; state: \u0026quot;present\u0026quot; - name: Create a new storage pool by name dellemc.powerflex.dellemc_powerflex_storagepool: gateway_host: \u0026quot;{{gateway_host}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; storage_pool_name: \u0026quot;ansible_test_pool\u0026quot; protection_domain_id: \u0026quot;1c957da800000000\u0026quot; media_type: \u0026quot;HDD\u0026quot; state: \u0026quot;present\u0026quot; - name: Modify a storage pool by name dellemc.powerflex.dellemc_powerflex_storagepool: gateway_host: \u0026quot;{{gateway_host}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; storage_pool_name: \u0026quot;ansible_test_pool\u0026quot; protection_domain_id: \u0026quot;1c957da800000000\u0026quot; use_rmcache: True use_rfcache: True state: \u0026quot;present\u0026quot; - name: Rename storage pool by id dellemc.powerflex.dellemc_powerflex_storagepool: gateway_host: \u0026quot;{{gateway_host}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; storage_pool_id: \u0026quot;abcd1234ab12r\u0026quot; storage_pool_new_name: \u0026quot;new_ansible_pool\u0026quot; state: \u0026quot;present\u0026quot; Return Values   Key Type Returned Description   changed   bool   always   Whether or not the resource has changed.    storage_pool_details   complex   When storage pool exists   Details of the storage pool.    \u0026nbsp; id   str  success  ID of the storage pool under protection domain.    \u0026nbsp; mediaType   str  success  Type of devices in the storage pool.    \u0026nbsp; name   str  success  Name of the storage pool under protection domain.    \u0026nbsp; protectionDomainId   str  success  ID of the protection domain in which pool resides.    \u0026nbsp; protectionDomainName   str  success  Name of the protection domain in which pool resides.    \u0026nbsp; useRfcache   bool  success  Enable/Disable RFcache on a specific storage pool.    \u0026nbsp; useRmcache   bool  success  Enable/Disable RMcache on a specific storage pool.    Authors  Arindam Datta (@dattaarindam) ansible.team@dell.com P Srinivas Rao (@srinivas-rao5) ansible.team@dell.com   ","excerpt":"Ansible Modules for Dell EMC PowerFlex Product Guide 1.1.0 © 2021 Dell Inc. or its subsidiaries. All …","ref":"/ansible-docs/docs/storage/platforms/powerflex/product-guide/","title":"Product Guide"},{"body":"Ansible Modules for Dell EMC PowerMax Product Guide 1.5.0  © 2021 Dell Inc. or its subsidiaries. All rights reserved. Dell EMC, and other trademarks are trademarks of Dell Inc. or its subsidiaries. Other trademarks may be trademarks of their respective owners.\n Contents  Common Parameters Gatherfacts Module  Synopsis Parameters Notes Examples Return Values Authors   Host Module  Synopsis Parameters Notes Examples Return Values Authors   Host Group Module  Synopsis Parameters Notes Examples Return Values Authors   Job Module  Synopsis Parameters Examples Return Values Authors   Masking View Module  Synopsis Parameters Examples Return Values Authors   Metro DR Module  Synopsis Parameters Examples Return Values Authors   Port Module  Synopsis Parameters Examples Return Values Authors   Port Group Module  Synopsis Parameters Examples Return Values Authors   RDF Group Module  Synopsis Parameters Examples Return Values Authors   Snapshot Module  Synopsis Parameters Notes Examples Return Values Authors   Snapshot Policy Module  Synopsis Parameters Notes Examples Return Values Authors   SRDF Module  Synopsis Parameters Examples Return Values Authors   Storage Group Module  Synopsis Parameters Examples Return Values Authors   Storage Pool Module  Synopsis Parameters Examples Return Values Authors   Volume Module  Synopsis Parameters Notes Examples Return Values Authors   Process Storage Pool Dict Module  Synopsis Parameters Examples Return Values Authors    Common Parameters These parameters are applicable to all modules, along with module-specific parameters.\nNOTE: If the parameter is mandatory, then required=true else it is an optional parameter. This is applicable to all the module specific parameters also.\n Parameter Choices/Defaults Comments    password  type=string, required=true      The password of the Unisphere host.     serial_no  type=string, required=true      The serial number of the PowerMax/VMAX array. It is a required parameter for all array-specific operations except for getting a list of arrays in the Gatherfacts module.     unispherehost  type=string, required=true      IP or FQDN of the Unisphere host     universion  type=integer    Choices: 91 92    Unisphere version, currently \u0026#x27;91\u0026#x27; and \u0026#x27;92\u0026#x27; versions are supported.     user  type=string, required=true      The username of the Unisphere host.     verifycert  type=boolean, required=true    Choices: no yes    Boolean variable to specify whether to validate SSL certificate or not. True - indicates that the SSL certificate should be verified. False - indicates that the SSL certificate should not be verified.    Gatherfacts Module Synopsis Gathers the list of specified PowerMax/VMAX storage system entities, such as the list of registered arrays, storage groups, hosts, host groups, storage groups, storage resource pools, port groups, masking views, array health status, alerts and metro DR environments, so on.\nParameters  Parameter Choices/Defaults Comments    filters  type=list elements=dictionary      List of filters to support filtered output for storage entities. Each filter is a tuple of {filter_key, filter_operator, filter_value}. Supports passing of multiple filters. The storage entities, \u0026#x27;rdf\u0026#x27;, \u0026#x27;health\u0026#x27;, \u0026#x27;snapshot_policies\u0026#x27; and \u0026#x27;metro_dr_env\u0026#x27;, does not support filters. Filters will be ignored if passed.      filter_key  type=string required=true      Name identifier of the filter.      filter_operator  type=string required=true    Choices: equal greater lesser like    Operation to be performed on filter key.      filter_value  type=string required=true      Value of the filter key.     gather_subset  type=list elements=string    Choices: alert health vol srp sg pg host hg port mv rdf metro_dr_env snapshot_policies    List of string variables to specify the PowerMax/VMAX entities for which information is required. Required only if the serial_no is present List of all PowerMax/VMAX entities supported by the module alert - gets alert summary information health - health status of a specific PowerMax array vol - volumes srp - storage resource pools sg - storage groups pg - port groups host - hosts hg - host groups port - ports mv - masking views rdf - rdf groups metro_dr_env - metro DR environments snapshot_policies - snapshot policies     serial_no  type=string      The serial number of the PowerMax/VMAX array. It is not required for getting the list of arrays.     tdev_volumes  type=boolean    Choices: no yes\u0026nbsp;\u0026larr;    Boolean variable to filter the volume list. This will have a small performance impact. By default it is set to true, only TDEV volumes will be returned. True - Will return only the TDEV volumes. False - Will return all the volumes.    Notes  Filter functionality will be supported only for the following \u0026lsquo;filter_key\u0026rsquo; against specific \u0026lsquo;gather_subset\u0026rsquo;.  vol - allocated_percent, associated, available_thin_volumes, bound_tdev, cap_cyl, cap_gb, cap_mb, cap_tb, cu_image_num, cu_image_ssid, data_volume, dld, drv, effective_wwn, emulation, encapsulated, encapsulated_wwn, gatekeeper, has_effective_wwn, mapped, mobility_id_enabled, num_of_front_end_paths, num_of_masking_views, num_of_storage_groups, oracle_instance_name, physical_name, pinned, private_volumes, rdf_group_number, reserved, split_name, status, storageGroupId, symmlun, tdev, thin_bcv, type, vdev, virtual_volumes, volume_identifier, wwn. srp - compression_state, description, effective_used_capacity_percent, emulation, num_of_disk_groups, num_of_srp_sg_demands, num_of_srp_slo_demands, rdfa_dse, reserved_cap_percent, total_allocated_cap_gb, total_srdf_dse_allocated_cap_gb, total_subscribed_cap_gb, total_usable_cap_gb. sg - base_slo_name, cap_gb, child, child_sg_name, ckd, compression, compression_ratio_to_one, fba, num_of_child_sgs, num_of_masking_views, num_of_parent_sgs, num_of_snapshots, num_of_vols, parent, parent_sg_name, slo_compliance, slo_name, srp_name, storageGroupId, tag, volumeId. pg - dir_port, fibre, iscsi, num_of_masking_views, num_of_ports host - host_group_name, num_of_host_groups, num_of_initiators, num_of_masking_views, num_of_powerpath_hosts, powerPathHostId. hg - host_name, num_of_hosts, num_of_masking_views. port - aclx, avoid_reset_broadcast, common_serial_number, director_status, disable_q_reset_on_ua, enable_auto_negotive, environ_set, hp_3000_mode, identifier, init_point_to_point, ip_list, ipv4_address, ipv6_address, iscsi_target, max_speed, negotiated_speed, neqotiate_reset, no_participating, node_wwn, num_of_cores, num_of_hypers, num_of_mapped_vols, num_of_masking_views, num_of_port_groups, port_interface, port_status, rdf_hardware_compression, rdf_hardware_compression_supported, rdf_software_compression, rdf_software_compression_supported, scsi_3, scsi_support1, siemens, soft_reset, spc2_protocol_version, sunapee, type, unique_wwn, vcm_state, vnx_attached, volume_set_addressing, wwn_node. mv - host_or_host_group_name, port_group_name, protocol_endpoint_masking_view, storage_group_name. alert - acknowledged, array, created_date, created_date_milliseconds, description, object, object_type, severity, state, type.    Examples - name: Get list of volumes with filter -- all TDEV volumes of size equal to 5GB dellemc_powermax_gatherfacts: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; gather_subset: - vol filters: - filter_key: \u0026quot;tdev\u0026quot; filter_operator: \u0026quot;equal\u0026quot; filter_value: \u0026quot;True\u0026quot; - filter_key: \u0026quot;cap_gb\u0026quot; filter_operator: \u0026quot;equal\u0026quot; filter_value: \u0026quot;5\u0026quot; - name: Get list of volumes and storage groups with filter dellemc_powermax_gatherfacts: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; gather_subset: - vol - sg filters: - filter_key: \u0026quot;tdev\u0026quot; filter_operator: \u0026quot;equal\u0026quot; filter_value: \u0026quot;True\u0026quot; - filter_key: \u0026quot;cap_gb\u0026quot; filter_operator: \u0026quot;equal\u0026quot; filter_value: \u0026quot;5\u0026quot; - name: Get list of storage groups with capacity between 2GB to 10GB dellemc_powermax_gatherfacts: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; gather_subset: - sg filters: - filter_key: \u0026quot;cap_gb\u0026quot; filter_operator: \u0026quot;greater\u0026quot; filter_value: \u0026quot;2\u0026quot; - filter_key: \u0026quot;cap_gb\u0026quot; filter_operator: \u0026quot;lesser\u0026quot; filter_value: \u0026quot;10\u0026quot; - name: Get the list of arrays for a given Unisphere host dellemc_powermax_gatherfacts: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; register: array_list - debug: var: array_list - name: Get list of tdev-volumes dellemc_powermax_gatherfacts: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; tdev_volumes: True gather_subset: - vol - name: Get the list of arrays for a given Unisphere host dellemc_powermax_gatherfacts: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; - name: Get array health status dellemc_powermax_gatherfacts: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; gather_subset: - health - name: Get array alerts summary dellemc_powermax_gatherfacts: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; gather_subset: - alert - name: Get the list of metro DR environments for a given Unisphere host dellemc_powermax_gatherfacts: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; gather_subset: - metro_dr_env - name: Get list of Storage groups dellemc_powermax_gatherfacts: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; gather_subset: - sg - name: Get list of Storage Resource Pools dellemc_powermax_gatherfacts: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; gather_subset: - srp - name: Get list of Ports dellemc_powermax_gatherfacts: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; gather_subset: - port - name: Get list of Port Groups dellemc_powermax_gatherfacts: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; gather_subset: - pg - name: Get list of Hosts dellemc_powermax_gatherfacts: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; gather_subset: - host - name: Get list of Host Groups dellemc_powermax_gatherfacts: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; gather_subset: - hg - name: Get list of Masking Views dellemc_powermax_gatherfacts: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; gather_subset: - mv - name: Get list of RDF Groups dellemc_powermax_gatherfacts: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; gather_subset: - rdf - name: Get list of snapshot policies dellemc_powermax_gatherfacts: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; gather_subset: - snapshot_policies Return Values The following are the fields unique to this module:\n Key Returned Description    Alerts  type=list elements=string   When the alert exists.  Alert summary of the array.     \u0026nbsp;  acknowledged  type=string   success  Whether or not this alert is acknowledged.     \u0026nbsp;  alertId  type=string   success  Unique ID of alert.     \u0026nbsp;  array  type=string   success  Array serial no.     \u0026nbsp;  created_date  type=string   success  Creation Date.     \u0026nbsp;  created_date_milliseconds  type=string   success  Creation Date in milliseconds.     \u0026nbsp;  description  type=string   success  Description about the alert     \u0026nbsp;  object  type=string   success  Object description     \u0026nbsp;  object_type  type=string   success  Resource class     \u0026nbsp;  severity  type=string   success  Severity of the alert     \u0026nbsp;  state  type=string   success  State of the alert     \u0026nbsp;  type  type=string   success  Type of the alert      Arrays  type=list elements=string   When the Unisphere exist.  List of arrays in the Unisphere.      Health  complex   When the array exist.  Health status of the array.     \u0026nbsp;  health_score_metric  type=list elements=string   success  Overall health score for the specified Symmetrix.     \u0026nbsp; \u0026nbsp;  cached_date  type=integer   success  Date Time stamp in epoch format when it was cached.     \u0026nbsp; \u0026nbsp;  data_date  type=integer   success  Date Time stamp in epoch format when it was collected.     \u0026nbsp; \u0026nbsp;  expired  type=boolean   success  Flag to indicate the expiry of the score.     \u0026nbsp; \u0026nbsp;  health_score  type=integer   success  Overall health score in numbers.     \u0026nbsp; \u0026nbsp;  instance_metrics  type=list elements=string   success  Metrics about a specific instance.     \u0026nbsp; \u0026nbsp; \u0026nbsp;  health_score_instance_metric  type=integer   success  Health score of a specific instance.     \u0026nbsp; \u0026nbsp;  metric  type=string   success  Information about which sub system , such as SYSTEM_UTILIZATION, CONFIGURATION,CAPACITY, and so on.     \u0026nbsp;  num_failed_disks  type=integer   success  Numbers of the disk failure in this system.      HostGroups  type=list elements=string   When the hostgroups exist.  List of host groups present on the array.      Hosts  type=list elements=string   When the hosts exist.  List of hosts present on the array.      MaskingViews  type=list elements=string   When the masking views exist.  List of masking views present on the array.      MetroDREnvironments  type=list elements=string   When environment exists.  List of metro DR environments on the array.      PortGroups  type=list elements=string   When the port groups exist.  List of port groups on the array.      Ports  complex   When the ports exist.  List of ports on the array.     \u0026nbsp;  directorId  type=string   success  Director ID of the port.     \u0026nbsp;  portId  type=string   success  Port number of the port.      RDFGroups  complex   When the RDF groups exist.  List of RDF groups on the array.     \u0026nbsp;  label  type=string   success  Name of the RDF group.     \u0026nbsp;  rdfgNumber  type=integer   success  Unique identifier of the RDF group.      SnapshotPolicies  type=list elements=string   When snapshot policy exists.  List of snapshot policies on the array.      StorageGroups  type=list elements=string   When the storage groups exist.  List of storage groups on the array.      StorageResourcePools  complex   When the storage pools exist.  List of storage pools on the array.     \u0026nbsp;  diskGroupId  type=list elements=string   success  ID of the disk group.     \u0026nbsp;  emulation  type=string   success  Type of volume emulation.     \u0026nbsp;  num_of_disk_groups  type=integer   success  Number of disk groups.     \u0026nbsp;  rdfa_dse  type=boolean   success  Flag for RDFA Delta Set Extension.     \u0026nbsp;  reserved_cap_percent  type=integer   success  Reserved capacity percentage.     \u0026nbsp;  srp_capacity  type=dictionary   success  Different entities to measure SRP capacity.     \u0026nbsp; \u0026nbsp;  effective_used_capacity_percent  type=integer   success  Percentage of effectively used capacity.     \u0026nbsp; \u0026nbsp;  snapshot_modified_tb  type=integer   success  Snapshot modified in TB.     \u0026nbsp; \u0026nbsp;  snapshot_total_tb  type=integer   success  Total snapshot size in TB.     \u0026nbsp; \u0026nbsp;  subscribed_allocated_tb  type=integer   success  Subscribed allocated size in TB.     \u0026nbsp; \u0026nbsp;  subscribed_total_tb  type=integer   success  Subscribed total size in TB.     \u0026nbsp; \u0026nbsp;  usable_total_tb  type=integer   success  Usable total size in TB.     \u0026nbsp; \u0026nbsp;  usable_used_tb  type=integer   success  Usable used size in TB.     \u0026nbsp;  srp_efficiency  type=dictionary   success  Different entities to measure SRP efficiency.     \u0026nbsp; \u0026nbsp;  compression_state  type=string   success  Depicts the compression state of the SRP.     \u0026nbsp; \u0026nbsp;  data_reduction_enabled_percent  type=integer   success  Percentage of data reduction enabled in the SRP.     \u0026nbsp; \u0026nbsp;  data_reduction_ratio_to_one  type=integer   success  Data reduction ratio of SRP.     \u0026nbsp; \u0026nbsp;  overall_efficiency_ratio_to_one  type=integer   success  Overall effectively ratio of SRP.     \u0026nbsp; \u0026nbsp;  snapshot_savings_ratio_to_one  type=integer   success  Snapshot savings ratio of SRP.     \u0026nbsp; \u0026nbsp;  virtual_provisioning_savings_ratio_to_one  type=integer   success  Virtual provisioning savings ratio of SRP.     \u0026nbsp;  srpId  type=string   success  Unique Identifier for SRP.     \u0026nbsp;  total_srdf_dse_allocated_cap_gb  type=integer   success  Total srdf dse allocated capacity in GB.      Volumes  type=list elements=string   When the volumes exist.  List of volumes on the array.     Authors  Arindam Datta (@dattaarindam) \u0026lt;ansible.team@dell.com\u0026gt; Rajshree Khare (@khareRajshree) \u0026lt;ansible.team@dell.com\u0026gt;  Host Module Synopsis Managing hosts on a PowerMax storage system includes creating a host with a set of initiators and host flags, adding and removing initiators to or from a host, modifying host flag values, renaming a host, and deleting a host.\nParameters  Parameter Choices/Defaults Comments    host_flags  type=dictionary      Input as a yaml dictionary List of all host_flags- 1. volume_set_addressing 2. disable_q_reset_on_ua 3. environ_set 4. avoid_reset_broadcast 5. openvms 6. scsi_3 7. spc2_protocol_version 8. scsi_support1 9. consistent_lun Possible values are true, false, unset (default state)     host_name  type=string required=true      The name of the host. No Special Character support except for _. Case sensitive for REST Calls. Creation of an empty host is allowed     host_type  type=string    Choices: default hpux    Describing the OS type (default or hpux)     initiator_state  type=string    Choices: present-in-host absent-in-host    Define whether the initiators should be present or absent on the host. present-in-host - indicates that the initiators should exist on the host absent-in-host - indicates that the initiators should not exist on the host Required when creating a host with initiators or adding and removing initiators to or from an existing host     initiators  type=list elements=string      List of Initiator WWN or IQN to be added to the host or removed from the host.     new_name  type=string      The new name of the host for the renaming function. No Special Character support except for _. Case sensitive for REST Calls     state  type=string required=true    Choices: absent present    Define whether the host should exist or not. present - indicates that the host should exist in the system absent - indicates that the host should not exist in the system    Notes  host_flags and host_type are mutually exclusive parameters.  Examples - name: Create host with host_type 'default' dellemc_powermax_host: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; host_name: \u0026quot;ansible_test_1\u0026quot; host_type: \u0026quot;default\u0026quot; state: 'present' - name: Create host with host_type 'hpux' dellemc_powermax_host: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; host_name: \u0026quot;ansible_test_2\u0026quot; host_type: \u0026quot;hpux\u0026quot; state: 'present' - name: Create host with host_flags dellemc_powermax_host: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; host_name: \u0026quot;ansible_test_3\u0026quot; initiators: - 10000090fa7b4e85 host_flags: spc2_protocol_version: true consistent_lun: true volume_set_addressing: 'unset' disable_q_reset_on_ua: false openvms: 'unset' state: 'present' initiator_state: 'present-in-host' - name: Get host details dellemc_powermax_host: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; host_name: \u0026quot;ansible_test_1\u0026quot; state: 'present' - name: Adding initiator to host dellemc_powermax_host: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; host_name: \u0026quot;ansible_test_1\u0026quot; initiators: - 10000090fa3d303e initiator_state: 'present-in-host' state: 'present' - name: Removing initiator from host dellemc_powermax_host: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; host_name: \u0026quot;ansible_test_1\u0026quot; initiators: - 10000090fa3d303e initiator_state: 'absent-in-host' state: 'present' - name: Modify host using host_type dellemc_powermax_host: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; host_name: \u0026quot;ansible_test_1\u0026quot; host_type: \u0026quot;hpux\u0026quot; state: 'present' - name: Modify host using host_flags dellemc_powermax_host: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; host_name: \u0026quot;ansible_test_1\u0026quot; host_flags: spc2_protocol_version: unset consistent_lun: unset volume_set_addressing: true disable_q_reset_on_ua: false openvms: false avoid_reset_broadcast: true state: 'present' - name: Rename host dellemc_powermax_host: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; host_name: \u0026quot;ansible_test_1\u0026quot; new_name: \u0026quot;ansible_test_1_host\u0026quot; state: 'present' - name: Delete host dellemc_powermax_host: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; host_name: \u0026quot;ansible_test_1_host\u0026quot; state: 'absent' Return Values The following are the fields unique to this module:\n Key Returned Description    changed  type=boolean   always  Whether or not the resource has changed.      host_details  complex   When host exist.  Details of the host.     \u0026nbsp;  bw_limit  type=integer   success  Bandwidth limit of the host.     \u0026nbsp;  consistent_lun  type=boolean   success  Flag for consistent LUN in host.     \u0026nbsp;  disabled_flags  type=list elements=string   success  List of any disabled port flags overridden by the initiator.     \u0026nbsp;  enabled_flags  type=list elements=string   success  List of any enabled port flags overridden by the initiator.     \u0026nbsp;  hostgroup  type=list elements=string   success  List of host groups that the host is associated with.     \u0026nbsp;  hostId  type=string   success  Host ID.     \u0026nbsp;  initiator  type=list elements=string   success  List of initiators present in the host.     \u0026nbsp;  maskingview  type=list elements=string   success  List of masking view in which the host group is present.     \u0026nbsp;  num_of_hostgroups  type=integer   success  Number of host groups associated with the host.     \u0026nbsp;  num_of_initiators  type=integer   success  Number of initiators present in the host.     \u0026nbsp;  num_of_masking_views  type=integer   success  Number of masking views associated with the host.     \u0026nbsp;  num_of_powerpath_hosts  type=integer   success  Number of PowerPath hosts associated with the host.     \u0026nbsp;  port_flags_override  type=boolean   success  Whether any of the initiator port flags are overridden.     \u0026nbsp;  type  type=string   success  Type of initiator.     Authors  Vasudevu Lakhinana (@unknown) \u0026lt;ansible.team@dell.com\u0026gt; Manisha Agrawal (@agrawm3) \u0026lt;ansible.team@dell.com\u0026gt;  Host Group Module Synopsis Managing a host group on a PowerMax storage system includes creating a host group with a set of hosts, adding or removing hosts to or from a host group, renaming a host group, modifying host flags of a host group, and deleting a host group.\nParameters  Parameter Choices/Defaults Comments    host_flags  type=dictionary      input as an yaml dictionary List of all host_flags - 1. volume_set_addressing 2. disable_q_reset_on_ua 3. environ_set 4. avoid_reset_broadcast 5. openvms 6. scsi_3 7. spc2_protocol_version 8. scsi_support1 9. consistent_lun Possible values are true, false, unset(default state)     host_state  type=string    Choices: present-in-group absent-in-group    Define whether the host should be present or absent in the host group. present-in-group - indicates that the hosts should exist in the host group absent-in-group - indicates that the hosts should not exist in the host group     host_type  type=string    Choices: default hpux    Describing the OS type (default or hpux)     hostgroup_name  type=string required=true      The name of the host group. No Special Character support except for _. Case sensitive for REST Calls.     hosts  type=list elements=string      List of host names to be added to the host group or removed from the host group. Creation of an empty host group is allowed.     new_name  type=string      The new name for the host group for the renaming function. No Special Character support except for _. Case sensitive for REST Calls     state  type=string required=true    Choices: absent present    Define whether the host group should be present or absent on the system. present - indicates that the host group should be present on the system absent - indicates that the host group should be absent on the system    Notes  In the gather facts module, empty host groups will be listed as hosts. host_flags and host_type are mutually exclusive parameters. Hostgroups with \u0026lsquo;default\u0026rsquo; host_type will have \u0026lsquo;default\u0026rsquo; hosts. Hostgroups with \u0026lsquo;hpux\u0026rsquo; host_type will have \u0026lsquo;hpux\u0026rsquo; hosts.  Examples - name: Create host group with 'default' host_type dellemc_powermax_hostgroup: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; hostgroup_name: \u0026quot;ansible_test_HG_1\u0026quot; host_type: \u0026quot;default\u0026quot; hosts: - ansible_test_1 host_state: 'present-in-group' state: 'present' - name: Create host group with 'hpux' host_type dellemc_powermax_hostgroup: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; hostgroup_name: \u0026quot;ansible_test_HG_2\u0026quot; host_type: \u0026quot;hpux\u0026quot; hosts: - ansible_test_2 host_state: 'present-in-group' state: 'present' - name: Create host group with host_flags dellemc_powermax_hostgroup: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; hostgroup_name: \u0026quot;ansible_test_HG_3\u0026quot; hosts: - ansible_test_3 state: 'present' host_state: 'present-in-group' host_flags: spc2_protocol_version: true consistent_lun: true volume_set_addressing: 'unset' disable_q_reset_on_ua: false openvms: 'unset' - name: Get host group details dellemc_powermax_hostgroup: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; hostgroup_name: \u0026quot;ansible_test_HG_1\u0026quot; state: 'present' - name: Adding host to host group dellemc_powermax_hostgroup: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; hostgroup_name: \u0026quot;ansible_test_HG_1\u0026quot; hosts: - Ansible_Testing_host2 state: 'present' host_state: 'present-in-group' - name: Removing host from host group dellemc_powermax_hostgroup: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; hostgroup_name: \u0026quot;ansible_test_HG_1\u0026quot; hosts: - Ansible_Testing_host2 state: 'present' host_state: 'absent-in-group' - name: Modify host group using host_type dellemc_powermax_hostgroup: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; hostgroup_name: \u0026quot;ansible_test_HG_1\u0026quot; host_type: \u0026quot;hpux\u0026quot; state: 'present' - name: Modify host group using host_flags dellemc_powermax_hostgroup: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; hostgroup_name: \u0026quot;ansible_test_HG_1\u0026quot; host_flags: spc2_protocol_version: unset disable_q_reset_on_ua: false openvms: false avoid_reset_broadcast: true state: 'present' - name: Rename host group dellemc_powermax_hostgroup: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; hostgroup_name: \u0026quot;ansible_test_HG_1\u0026quot; new_name: \u0026quot;ansible_test_hostgroup_1\u0026quot; state: 'present' - name: Delete host group dellemc_powermax_hostgroup: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; hostgroup_name: \u0026quot;ansible_test_hostgroup_1\u0026quot; state: 'absent' Return Values The following are the fields unique to this module:\n Key Returned Description    changed  type=boolean   always  Whether or not the resource has changed.      hostgroup_details  complex   When host group exist.  Details of the host group.     \u0026nbsp;  consistent_lun  type=boolean   success  Flag for consistent LUN in the host group.     \u0026nbsp;  disabled_flags  type=list elements=string   success  List of any disabled port flags overridden by the initiator.     \u0026nbsp;  enabled_flags  type=list elements=string   success  List of any enabled port flags overridden by the initiator.     \u0026nbsp;  host  type=list elements=string   success  List of hosts present in the host group.     \u0026nbsp; \u0026nbsp;  hostId  type=string   success  Unique identifier for the host.     \u0026nbsp; \u0026nbsp;  initiator  type=list elements=string   success  List of initiators present in the host.     \u0026nbsp;  hostGroupId  type=string   success  Host group ID.     \u0026nbsp;  maskingview  type=list elements=string   success  Masking view in which host group is present.     \u0026nbsp;  num_of_hosts  type=integer   success  Number of hosts in the host group.     \u0026nbsp;  num_of_initiators  type=integer   success  Number of initiators in the host group.     \u0026nbsp;  num_of_masking_views  type=integer   success  Number of masking views associated with the host group.     \u0026nbsp;  port_flags_override  type=boolean   success  Whether any of the initiator\u0026#x27;s port flags are overridden.     \u0026nbsp;  type  type=string   success  Type of initiator of the hosts of the host group.     Authors  Vasudevu Lakhinana (@unknown) \u0026lt;ansible.team@dell.com\u0026gt; Manisha Agrawal (@agrawm3) \u0026lt;ansible.team@dell.com\u0026gt;  Job Module Synopsis  Gets the details of a Job from a specified PowerMax/VMAX storage system. The details listed are of an asynchronous task.  Parameters  Parameter Choices/Defaults Comments    job_id  type=string required=true      Job ID of an asynchronous task, used for getting details of a job.    Examples - name: Get the details of a Job. dellemc_powermax_job: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; job_id: \u0026quot;1570622921504\u0026quot; Return Values The following are the fields unique to this module:\n Key Returned Description    changed  type=boolean   always  Whether or not the resource has changed.      Job_details  type=dictionary   When job exist.  Details of the job.     \u0026nbsp;  completed_date_milliseconds  type=integer   success  Date of job completion in milliseconds.     \u0026nbsp;  jobId  type=string   success  Unique identifier of the job.     \u0026nbsp;  last_modified_date  type=string   success  Last modified date of job.     \u0026nbsp;  last_modified_date_milliseconds  type=integer   success  Last modified date of job in milliseconds.     \u0026nbsp;  name  type=string   success  Name of the job.     \u0026nbsp;  resourceLink  type=string   success  Resource link w.r.t Unisphere.     \u0026nbsp;  result  type=string   success  Job description     \u0026nbsp;  status  type=string   success  Status of the job.     \u0026nbsp;  task  type=list elements=string   success  Details about the job.     \u0026nbsp;  username  type=string   success  Unisphere username.     Authors  Rajshree Khare (@khareRajshree) \u0026lt;ansible.team@dell.com\u0026gt;  Masking View Module Synopsis   Managing masking views on PowerMax storage system includes, creating masking view with port group, storage group and host or host group, renaming masking view and deleting masking view.\n  For creating a masking view -\n  portgroup_name,\n  sg_name and\n  any one of host_name or hostgroup_name is required.\n    All three entities must be present on the array.\n  For renaming a masking view, the \u0026lsquo;new_mv_name\u0026rsquo; is required. After a masking view is created, only its name can be changed. No underlying entity (portgroup, storagegroup, host or hostgroup) can be changed on the masking view.\n  Parameters  Parameter Choices/Defaults Comments    host_name  type=string      The name of the existing host. This parameter is to create an exclusive or host export     hostgroup_name  type=string      The name of the existing host group. This parameter is used to create cluster export     mv_name  type=string required=true      The name of the masking view. No Special Character support except for _. Case sensitive for REST Calls.     new_mv_name  type=string      The new name for the renaming function. No Special Character support except for _. Case sensitive for REST Calls.     portgroup_name  type=string      The name of the existing port group.     sg_name  type=string      The name of the existing storage group.     state  type=string required=true    Choices: absent present    Defines whether the masking view should exist or not.    Examples - name: Create MV with hostgroup dellemc_powermax_maskingview: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; mv_name: \u0026quot;Ansible_Testing_MaskingView_HostGroup\u0026quot; portgroup_name: \u0026quot;Ansible_Testing_portgroup\u0026quot; hostgroup_name: \u0026quot;Ansible_Testing_hostgroup\u0026quot; sg_name: \u0026quot;Ansible_Testing_SG\u0026quot; state: \u0026quot;present\u0026quot; - name: Create MV with host dellemc_powermax_maskingview: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; mv_name: \u0026quot;Ansible_Testing_MaskingView_Host\u0026quot; portgroup_name: \u0026quot;Ansible_Testing_portgroup\u0026quot; host_name: \u0026quot;Ansible_Testing_host\u0026quot; sg_name: \u0026quot;Ansible_Testing_SG\u0026quot; state: \u0026quot;present\u0026quot; - name: Rename host masking view dellemc_powermax_maskingview: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; mv_name: \u0026quot;Ansible_Testing_MaskingView_Host\u0026quot; new_mv_name: \u0026quot;Ansible_Testing_mv_renamed\u0026quot; state: \u0026quot;present\u0026quot; - name: Delete host masking view dellemc_powermax_maskingview: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; mv_name: \u0026quot;Ansible_Testing_mv_renamed\u0026quot; state: \u0026quot;absent\u0026quot; Return Values The following are the fields unique to this module:\n Key Returned Description    changed  type=boolean   always  Whether or not the resource has changed.      create_mv  type=boolean   When masking view is created.  Flag sets to true when a new masking view is created.      delete_mv  type=boolean   When masking view is deleted.  Flag sets to true when a masking view is deleted.      modify_mv  type=boolean   When masking view is modified.  Flag sets to true when a masking view is modified.      mv_details  type=list elements=string   When masking view exist.  Details of masking view.     \u0026nbsp;  hostId  type=string   success  Host group present in the masking view.     \u0026nbsp;  maskingViewId  type=string   success  Masking view ID.     \u0026nbsp;  portGroupId  type=string   success  Port group present in the masking view.     \u0026nbsp;  storageGroupId  type=string   success  Storage group present in the masking view.     Authors  Vasudevu Lakhinana (@unknown) \u0026lt;ansible.team@dell.com\u0026gt; Prashant Rakheja (@prashant-dell) \u0026lt;ansible.team@dell.com\u0026gt;  Metro DR Module Synopsis Managing a metro DR environment on a PowerMax storage system includes getting details of any specific metro DR environment, creating a metro DR environment, converting an existing SG into a metro DR environment, modifying metro DR environment attributes and deleting a metro DR environment.\nParameters  Parameter Choices/Defaults Comments    dr_serial_no  type=string      Serial number of the DR array. It is required in create and convert operations.     env_name  type=string required=true      Name of the metro DR environment. Metro DR environment name will be unique across PowerMax.     metro_serial_no  type=string      Serial number of the remote metro array. It is required only in create and convert operations.     new_rdf_group_r1  type=boolean    Choices: no yes\u0026nbsp;\u0026larr;    The flag indicates whether or not to create a new RDFG for a Metro R1 array to a DR array, or to autoselect from an existing one. Used in only create operation.     new_rdf_group_r2  type=boolean    Choices: no yes\u0026nbsp;\u0026larr;    The flag indicates whether or not to create a new RDFG for a Metro R2 array to a DR array, or to autoselect from an existing one. It is used only in create operation.     remove_r1_dr_rdfg  type=boolean    Choices: no\u0026nbsp;\u0026larr; yes    The flag indicates whether or not to override default behavior and delete R11-R2 RDFG from the metro R1 side. It is used only in delete operations.     replication_mode  type=string    Choices: Asynchronous Adaptive Copy    Replication mode whose value will indicate how the data will be replicated. It is required in create and modify operations. It is a mandatory parameter in a create operation but optional in a modify operation.     serial_no  type=string required=true      Serial number of the primary metro array.     sg_name  type=string      Name of the storage group. Storage group will be present on the primary metro array and a storage group with the same name will be created on remote and DR arrays in a create operation. Storage group name is required in \u0026#x27;create metro DR environment\u0026#x27; and \u0026#x27;convert SG into metro DR environment\u0026#x27; operations.     srdf_param  type=dictionary      It contains parameters related to SRDF links. It is used only in modify operations.      dr  type=boolean    Choices: no\u0026nbsp;\u0026larr; yes    The flag indicates whether or not to direct srdf_state change towards device pairs on the disaster recovery leg of the metro DR environment.      keep_r2  type=boolean    Choices: no\u0026nbsp;\u0026larr; yes    The flag indicates whether or not in the case of srdf state suspend to make R2 data on metro available to the host.      metro  type=boolean    Choices: no\u0026nbsp;\u0026larr; yes    The flag indicates whether or not to direct srdf_state change towards the R1--R2 Metro Device leg of the metro DR environment.      srdf_state  type=string required=true    Choices: Split Restore SetMode Failback Failover Establish Suspend UpdateR1 Recover    State of the SRDF link. It is a mandatory parameter for modify operations.     state  type=string required=true    Choices: absent present    State variable to determine whether metro DR environment will exist or not.     wait_for_completion  type=boolean    Choices: no\u0026nbsp;\u0026larr; yes    The flag indicates if the operation should be run synchronously or asynchronously. True signifies synchronous execution. By default, create and convert are asynchronous operations, whereas modify is a synchronous operation.    Examples - name: Get metro environment details dellemc_powermax_metrodr: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; env_name: \u0026quot;ansible_metrodr_env\u0026quot; state: \u0026quot;present\u0026quot; - name: Convert SG to metro DR environment dellemc_powermax_metrodr: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; sg_name: \u0026quot;ansible_sg\u0026quot; env_name: \u0026quot;ansible_metrodr_env\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; metro_serial_no: \u0026quot;{{metro_serial_no}}\u0026quot; dr_serial_no: \u0026quot;{{dr_serial_no}}\u0026quot; replication_mode: \u0026quot;Asynchronous\u0026quot; wait_for_completion: False state: \u0026quot;present\u0026quot; - name: Create metro DR environment dellemc_powermax_metrodr: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; sg_name: \u0026quot;ansible_sg\u0026quot; env_name: \u0026quot;ansible_metrodr_env\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; metro_serial_no: \u0026quot;{{metro_serial_no}}\u0026quot; dr_serial_no: \u0026quot;{{dr_serial_no}}\u0026quot; replication_mode: \u0026quot;Asynchronous\u0026quot; new_rdf_group_r1: True new_rdf_group_r2: True wait_for_completion: False state: \u0026quot;present\u0026quot; - name: Modify metro DR environment dellemc_powermax_metrodr: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; env_name: \u0026quot;ansible_metrodr_env\u0026quot; srdf_param: srdf_state: \u0026quot;Suspend\u0026quot; metro: True dr: True keep_r2: True wait_for_completion: True state: \u0026quot;present\u0026quot; - name: Delete metro DR environment dellemc_powermax_metrodr: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; env_name: \u0026quot;ansible_metrodr_env\u0026quot; remove_r1_dr_rdfg: True state: 'absent' Return Values The following are the fields unique to this module:\n Key Returned Description    changed  type=boolean   always  Whether or not the resource has changed.      Job_details  type=dictionary   When job exist.  Details of the job.     \u0026nbsp;  completed_date_milliseconds  type=integer   success  Date of job completion in milliseconds.     \u0026nbsp;  jobId  type=string   success  Unique identifier of the job.     \u0026nbsp;  last_modified_date  type=string   success  Last modified date of job.     \u0026nbsp;  last_modified_date_milliseconds  type=integer   success  Last modified date of job in milliseconds.     \u0026nbsp;  name  type=string   success  Name of the job.     \u0026nbsp;  resourceLink  type=string   success  Resource link w.r.t Unisphere.     \u0026nbsp;  result  type=string   success  Job description     \u0026nbsp;  status  type=string   success  Status of the job.     \u0026nbsp;  task  type=list elements=string   success  Details about the job.     \u0026nbsp;  username  type=string   success  Unisphere username.      metrodr_env_details  type=dictionary   When environment exists.  Details of the metro DR environment link.     \u0026nbsp;  capacity_gb  type=float   success  Size of volume in GB.     \u0026nbsp;  dr_exempt  type=boolean   success  Flag to indication that if there are exempt devices (volumes) in the DR site or not.     \u0026nbsp;  dr_link_state  type=string   success  Status of DR site.     \u0026nbsp;  dr_percent_complete  type=integer   success  Percentage synchronized in DR session.     \u0026nbsp;  dr_rdf_mode  type=string   success  Replication mode with DR site.     \u0026nbsp;  dr_remain_capacity_to_copy_mb  type=integer   success  Remaining capacity to copy at DR site.     \u0026nbsp;  dr_service_state  type=string   success  The HA state of the DR session.     \u0026nbsp;  dr_state  type=string   success  The pair states of the DR session.     \u0026nbsp;  environment_exempt  type=boolean   success  Flag to indication that if there are exempt devices (volumes) in the environment or not.     \u0026nbsp;  environment_state  type=string   success  The state of the smart DR environment.     \u0026nbsp;  metro_exempt  type=boolean   success  Flag to indication that if there are exempt devices (volumes) in the DR site or not.     \u0026nbsp;  metro_link_state  type=string   success  Status of metro site.     \u0026nbsp;  metro_r1_array_health  type=string   success  Health status of metro R1 array.     \u0026nbsp;  metro_r2_array_health  type=string   success  Health status of metro R1 array.     \u0026nbsp;  metro_service_state  type=string   success  The HA state of the metro session.     \u0026nbsp;  metro_state  type=string   success  The pair states of the metro session.     \u0026nbsp;  metro_witness_state  type=string   success  The witness state of the metro session.     \u0026nbsp;  name  type=string   success  The smart DR environment name.     \u0026nbsp;  valid  type=boolean   success  Flag to indicate whether valid environment or not.     Authors  Vivek Soni (@v-soni11) \u0026lt;ansible.team@dell.com\u0026gt; Rajshree Khare (@khareRajshree) \u0026lt;ansible.team@dell.com\u0026gt;  Port Module Synopsis Managing ports on PowerMax storage system includes getting details of a port.\nParameters  Parameter Choices/Defaults Comments    ports  type=list elements=dictionary required=true      List of port director and port id    Examples - name: Get details of single/multiple ports dellemc_powermax_port: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{array_id}}\u0026quot; ports: - director_id: \u0026quot;FA-1D\u0026quot; port_id: \u0026quot;5\u0026quot; - director_id: \u0026quot;SE-1F\u0026quot; port_id: \u0026quot;29\u0026quot; Return Values The following are the fields unique to this module:\n Key Returned Description    changed  type=boolean   always  Whether or not the resource has changed.      port_details  type=list elements=string   When the port exist.  Details of the port.     \u0026nbsp;  symmetrixPort  type=list elements=string   success  Type of volume.     \u0026nbsp; \u0026nbsp;  aclx  type=boolean   success  Indicates whether access control logic is enabled or disabled.     \u0026nbsp; \u0026nbsp;  avoid_reset_broadcast  type=boolean   success  Indicates whether the Avoid Reset Broadcasting feature is enabled or disabled.     \u0026nbsp; \u0026nbsp;  common_serial_number  type=boolean   success  Indicates whether the Common Serial Number feature is enabled or disabled.     \u0026nbsp; \u0026nbsp;  director_status  type=string   success  Director status.     \u0026nbsp; \u0026nbsp;  disable_q_reset_on_ua  type=boolean   success  Indicates whether the Disable Q Reset on UA (Unit Attention) is enabled or disabled.     \u0026nbsp; \u0026nbsp;  enable_auto_negotiate  type=boolean   success  Indicates whether the Enable Auto Negotiate feature is enabled or disabled.     \u0026nbsp; \u0026nbsp;  environ_set  type=boolean   success  Indicates whether the environmental error reporting feature is enabled or disabled.     \u0026nbsp; \u0026nbsp;  hp_3000_mode  type=boolean   success  Indicates whether HP 3000 Mode is enabled or disabled.     \u0026nbsp; \u0026nbsp;  identifier  type=string   success  Unique identifier for port.     \u0026nbsp; \u0026nbsp;  init_point_to_point  type=boolean   success  Indicates whether Init Point to Point is enabled or disabled.     \u0026nbsp; \u0026nbsp;  iscsi_target  type=boolean   success  Indicates whether ISCSI target is enabled or disabled.     \u0026nbsp; \u0026nbsp;  maskingview  type=list elements=string   success  List of Masking views that the port is a part of.     \u0026nbsp; \u0026nbsp;  max_speed  type=string   success  Maximum port speed in GB/Second.     \u0026nbsp; \u0026nbsp;  negotiate_reset  type=boolean   success  Indicates whether the Negotiate Reset feature is enabled or disabled.     \u0026nbsp; \u0026nbsp;  negotiated_speed  type=string   success  Negotiated speed in GB/Second.     \u0026nbsp; \u0026nbsp;  no_participating  type=boolean   success  Indicates whether the No Participate feature is enabled or disabled.     \u0026nbsp; \u0026nbsp;  num_of_cores  type=integer   success  Number of cores for the director.     \u0026nbsp; \u0026nbsp;  num_of_mapped_vols  type=integer   success  Number of volumes mapped with the port.     \u0026nbsp; \u0026nbsp;  num_of_masking_views  type=integer   success  Number of masking views associated with the port.     \u0026nbsp; \u0026nbsp;  num_of_port_groups  type=integer   success  Number of port groups associated with the port.     \u0026nbsp; \u0026nbsp;  port_status  type=string   success  Port status, ON/OFF.     \u0026nbsp; \u0026nbsp;  portgroup  type=list elements=string   success  List of masking views associated with the port.     \u0026nbsp; \u0026nbsp;  scsi_3  type=boolean   success  Indicates whether the SCSI-3 protocol is enabled or disabled.     \u0026nbsp; \u0026nbsp;  scsi_support1  type=boolean   success  Indicates whether the SCSI Support1 is enabled or disabled.     \u0026nbsp; \u0026nbsp;  siemens  type=boolean   success  Indicates whether the Siemens feature is enabled or disabled.     \u0026nbsp; \u0026nbsp;  soft_reset  type=boolean   success  Indicates whether the Soft Reset feature is enabled or disabled.     \u0026nbsp; \u0026nbsp;  spc2_protocol_version  type=boolean   success  Indicates whether the SPC2 Protocol Version feature is enabled or disabled.     \u0026nbsp; \u0026nbsp;  sunapee  type=boolean   success  Indicates whether the Sunapee feature is enabled or disabled.     \u0026nbsp; \u0026nbsp;  symmetrixPortKey  type=list elements=string   success  Symmetrix system director and port in the port group.     \u0026nbsp; \u0026nbsp; \u0026nbsp;  drectorId  type=string   success  Director ID of the port.     \u0026nbsp; \u0026nbsp; \u0026nbsp;  portId  type=string   success  Port number of the port.     \u0026nbsp; \u0026nbsp;  type  type=string   success  Type of port.     \u0026nbsp; \u0026nbsp;  unique_wwn  type=boolean   success  Indicates whether the Unique WWN feature is enabled or disabled.     \u0026nbsp; \u0026nbsp;  vnx_attached  type=boolean   success  Indicates whether the VNX attached feature is enabled or disabled.     \u0026nbsp; \u0026nbsp;  volume_set_addressing  type=boolean   success  Indicates whether Volume Vet Addressing is enabled or disabled.     \u0026nbsp; \u0026nbsp;  wwn_node  type=string   success  WWN node of port.     Authors  Ashish Verma (@vermaa31) \u0026lt;ansible.team@dell.com\u0026gt;  Port Group Module Synopsis Managing port groups on a PowerMax storage system includes creating a port group with a set of ports, adding or removing single or multiple ports to or from the port group, renaming the port group and deleting the port group.\nParameters  Parameter Choices/Defaults Comments    new_name  type=string      New name of the port group while renaming. No Special Character support except for _. Case sensitive for REST Calls.     port_state  type=string    Choices: present-in-group absent-in-group    Define whether the port should be present or absent in the port group. present-in-group - indicates that the ports should be present on a port group object absent-in-group - indicates that the ports should not be present on a port group object     portgroup_name  type=string required=true      The name of the port group. No Special Character support except for _. Case sensitive for REST Calls.     ports  type=list elements=dictionary      List of directors and ports to be added or removed to or from the port group     state  type=string required=true    Choices: absent present    Define whether the port group should exist or not. present - indicates that the port group should be present on the system absent - indicates that the port group should not be present on the system    Examples - name: Create port group without ports dellemc_powermax_portgroup: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{array_id}}\u0026quot; portgroup_name: \u0026quot;{{portgroup_name}}\u0026quot; state: \u0026quot;present\u0026quot; - name: Create port group with ports dellemc_powermax_portgroup: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{array_id}}\u0026quot; portgroup_name: \u0026quot;{{portgroup_name}}\u0026quot; state: \u0026quot;present\u0026quot; ports: - director_id: \u0026quot;FA-1D\u0026quot; port_id: \u0026quot;5\u0026quot; - director_id: \u0026quot;FA-2D\u0026quot; port_id: \u0026quot;5\u0026quot; port_state: \u0026quot;present-in-group\u0026quot; - name: Add ports to port group dellemc_powermax_portgroup: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{array_id}}\u0026quot; portgroup_name: \u0026quot;{{portgroup_name}}\u0026quot; state: \u0026quot;present\u0026quot; ports: - director_id: \u0026quot;FA-2D\u0026quot; port_id: \u0026quot;8\u0026quot; - director_id: \u0026quot;FA-2D\u0026quot; port_id: \u0026quot;9\u0026quot; port_state: \u0026quot;present-in-group\u0026quot; - name: Remove ports from port group dellemc_powermax_portgroup: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{array_id}}\u0026quot; portgroup_name: \u0026quot;{{portgroup_name}}\u0026quot; state: \u0026quot;present\u0026quot; ports: - director_id: \u0026quot;FA-2D\u0026quot; port_id: \u0026quot;8\u0026quot; - director_id: \u0026quot;FA-2D\u0026quot; port_id: \u0026quot;9\u0026quot; port_state: \u0026quot;absent-in-group\u0026quot; - name: Modify port group dellemc_powermax_portgroup: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{array_id}}\u0026quot; portgroup_name: \u0026quot;{{portgroup_name}}\u0026quot; state: \u0026quot;present\u0026quot; new_name: \u0026quot;{{new_name}}\u0026quot; - name: Delete port group dellemc_powermax_portgroup: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{array_id}}\u0026quot; portgroup_name: \u0026quot;{{portgroup_name}}\u0026quot; state: \u0026quot;absent\u0026quot; Return Values The following are the fields unique to this module:\n Key Returned Description    changed  type=boolean   always  Whether or not the resource has changed.      portgroup_details  type=list elements=string   When the port group exist.  Details of the port group.     \u0026nbsp;  num_of_masking_views  type=integer   success  Number of masking views in where port group is associated.     \u0026nbsp;  num_of_ports  type=integer   success  Number of ports in the port group.     \u0026nbsp;  portGroupId  type=string   success  Port group ID.     \u0026nbsp;  symmetrixPortKey  type=list elements=string   success  Symmetrix system director and port in the port group.     \u0026nbsp; \u0026nbsp;  directorId  type=string   success  Director ID of the port.     \u0026nbsp; \u0026nbsp;  portId  type=string   success  Port number of the port.     \u0026nbsp;  type  type=string   success  Type of ports in port group.     Authors  Vasudevu Lakhinana (@unknown) \u0026lt;ansible.team@dell.com\u0026gt; Ashish Verma (@vermaa31) \u0026lt;ansible.team@dell.com\u0026gt; Rajshree Khare (@khareRajshree) \u0026lt;ansible.team@dell.com\u0026gt;  RDF Group Module Synopsis  Gets the details of an RDF Group from a specified PowerMax/VMAX storage system. Lists the volumes of an RDF Group from a specified PowerMax/VMAX storage system  Parameters  Parameter Choices/Defaults Comments    rdfgroup_number  type=string required=true      Identifier of an RDF Group of type string    Examples - name: Get the details of rdf group and volumes dellemc_powermax_rdfgroup: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; rdfgroup_number: \u0026quot;{{rdfgroup_id}}\u0026quot; Return Values The following are the fields unique to this module:\n Key Returned Description    changed  type=boolean   always  Whether or not the resource has changed.      RDFGroupDetails  type=list elements=string   When the RDF group exist.  Details of the RDF group.     \u0026nbsp;  async  type=boolean   success  Flag sets to true when an SRDF pair is in async mode.     \u0026nbsp;  biasConfigured  type=boolean   success  Flag for configured bias.     \u0026nbsp;  biasEffective  type=boolean   success  Flag for effective bias.     \u0026nbsp;  device_polarity  type=string   success  Type of device polarity.     \u0026nbsp;  hardware_compression  type=boolean   success  Flag for hardware compression.     \u0026nbsp;  label  type=string   success  RDF group label.     \u0026nbsp;  link_limbo  type=integer   success  The amount of time that the array\u0026#x27;s operating environment waits after the SRDF link goes down before updating the link\u0026#x27;s status. The link limbo value can be set from 0 to 120 seconds. The default value is 10 seconds.     \u0026nbsp;  localOnlinePorts  type=list elements=string   success  List of local online ports.     \u0026nbsp;  localPorts  type=list elements=string   success  List of local ports.     \u0026nbsp;  metro  type=list elements=string   success  Flag for metro configuration.     \u0026nbsp;  modes  type=string   success  Mode of the SRDF link.     \u0026nbsp;  numDevices  type=integer   success  Number of devices involved in the pairing.     \u0026nbsp;  offline  type=boolean   success  Offline flag.     \u0026nbsp;  rdfa_properties  type=list elements=string   success  Properties associated with the RDF group.     \u0026nbsp; \u0026nbsp;  average_cycle_time  type=integer   success  Average cycle time (seconds) configured for this session in seconds.     \u0026nbsp; \u0026nbsp;  consistency_exempt_volumes  type=boolean   success  Flag that indicates if consistency is exempt.     \u0026nbsp; \u0026nbsp;  cycle_number  type=integer   success  Number of cycles in seconds.     \u0026nbsp; \u0026nbsp;  dse_active  type=boolean   success  Flag for active Delta Set Extension.     \u0026nbsp; \u0026nbsp;  dse_autostart  type=string   success  Indicates DSE autostart state.     \u0026nbsp; \u0026nbsp;  dse_threshold  type=integer   success  Flag for DSE threshold.     \u0026nbsp; \u0026nbsp;  duration_of_last_cycle  type=integer   success  The cycle time (in secs) of the most recently completed cycle.     \u0026nbsp; \u0026nbsp;  duration_of_last_transmit_cycle  type=integer   success  Duration of last transmitted cycle in seconds.     \u0026nbsp; \u0026nbsp;  r1_to_r2_lag_time  type=integer   success  Time that R2 is behind R1 in seconds.     \u0026nbsp; \u0026nbsp;  session_priority  type=integer   success  Priority used to determine which RDFA sessions to drop if cache becomes full. Values range from 1 to 64, with 1 being the highest priority (last to be dropped).     \u0026nbsp; \u0026nbsp;  session_uncommitted_tracks  type=integer   success  Number of uncommitted session tracks.     \u0026nbsp; \u0026nbsp;  transmit_idle_state  type=string   success  Indicates RDFA transmit idle state.     \u0026nbsp; \u0026nbsp;  transmit_idle_time  type=integer   success  Time the transmit cycle has been idle.     \u0026nbsp; \u0026nbsp;  transmit_queue_depth  type=integer   success  The transmitted queue depth of disks.     \u0026nbsp;  rdfgNumber  type=integer   success  RDF group number on primary device.     \u0026nbsp;  RDFGroupVolumes  type=list elements=string   success  List of various properties of RDF group volume(s).     \u0026nbsp; \u0026nbsp;  largerRdfSide  type=string   success  Larger RDF side among the devices.     \u0026nbsp; \u0026nbsp;  local_wwn_external  type=integer   success  External WWN of volume at primary device.     \u0026nbsp; \u0026nbsp;  localRdfGroupNumber  type=integer   success  RDF group number at primary device.     \u0026nbsp; \u0026nbsp;  localSymmetrixId  type=integer   success  Primary device ID.     \u0026nbsp; \u0026nbsp;  localVolumeName  type=string   success  Volume name at primary device.     \u0026nbsp; \u0026nbsp;  localVolumeState  type=string   success  Volume state at primary device     \u0026nbsp; \u0026nbsp;  rdfMode  type=string   success  SRDF mode of pairing.     \u0026nbsp; \u0026nbsp;  rdfpairState  type=string   success  SRDF state of pairing.     \u0026nbsp; \u0026nbsp;  remote_wwn_external  type=integer   success  External WWN of volume at remote device.     \u0026nbsp; \u0026nbsp;  remoteRdfGroupNumber  type=integer   success  RDF group number at remote device.     \u0026nbsp; \u0026nbsp;  remoteSymmetrixId  type=integer   success  Remote device ID.     \u0026nbsp; \u0026nbsp;  remoteVolumeName  type=string   success  Volume name at remote device.     \u0026nbsp; \u0026nbsp;  remoteVolumeState  type=string   success  Volume state at remote device.     \u0026nbsp; \u0026nbsp;  volumeConfig  type=string   success  Type of volume.     \u0026nbsp;  remoteOnlinePorts  type=list elements=string   success  List of remote online ports.     \u0026nbsp;  remotePorts  type=list elements=string   success  List of remote ports.     \u0026nbsp;  remoteRdfgNumber  type=integer   success  RDF group number at remote device.     \u0026nbsp;  remoteSymmetrix  type=integer   success  Remote device ID.     \u0026nbsp;  software_compression  type=boolean   success  Flag for software compression.     \u0026nbsp;  totalDeviceCapacity  type=integer   success  Total capacity of RDF group in GB.     \u0026nbsp;  type  type=string   success  Type of RDF group.     \u0026nbsp;  vasa_group  type=boolean   success  Flag for VASA group member.     \u0026nbsp;  witness  type=boolean   success  Flag for witness.     \u0026nbsp;  witnessConfigured  type=boolean   success  Flag for configured witness.     \u0026nbsp;  witnessDegraded  type=boolean   success  Flag for degraded witness.     \u0026nbsp;  witnessEffective  type=boolean   success  Flag for effective witness.     \u0026nbsp;  witnessProtectedPhysical  type=boolean   success  Flag for physically protected witness.     \u0026nbsp;  witnessProtectedVirtual  type=boolean   success  Flag for virtually protected witness.     Authors  Arindam Datta (@dattaarindam) \u0026lt;ansible.team@dell.com\u0026gt;  Snapshot Module Synopsis Managing snapshots on a PowerMax storage system includes creating a new storage group (SG) snapshot, getting details of the SG snapshot, renaming the SG snapshot, changing the snapshot link status, and deleting an existing SG snapshot.\nParameters  Parameter Choices/Defaults Comments    generation  type=integer      The generation number of the snapshot. Generation is required for link, unlink, rename and delete operations. Optional for Get snapshot details. Create snapshot will always create a new snapshot with a generation number 0. Rename is supported only for generation number 0.     link_status  type=string    Choices: linked unlinked    Describes the link status of the snapshot.     new_snapshot_name  type=string      The new name of the snapshot.     sg_name  type=string required=true      The name of the storage group.     snapshot_id  type=integer      Unique ID of the snapshot. snapshot_id is required for link, unlink, rename and delete operations. Optional for Get snapshot details.     snapshot_name  type=string required=true      The name of the snapshot.     state  type=string required=true    Choices: absent present    Define whether the snapshot should exist or not.     target_sg_name  type=string      The target storage group.     ttl  type=string      The Time To Live (TTL) value for the snapshot. If the TTL is not specified, the storage group snap details are returned. However, to create a SG snap - TTL must be given. If the SG snap should not have any TTL - specify TTL as \u0026quot;None\u0026quot;     ttl_unit  type=string    Choices: hours days\u0026nbsp;\u0026larr;    The unit for the ttl. If no ttl_unit is specified, \u0026#x27;days\u0026#x27; is taken as default ttl_unit.    Notes  Paramters \u0026lsquo;generation\u0026rsquo; and \u0026lsquo;snapshot_id\u0026rsquo; are mutually exclusive. If \u0026lsquo;generation\u0026rsquo; or \u0026lsquo;snapshot_id\u0026rsquo; is not provided then a list of generation versus snapshot_id is returned. Use of \u0026lsquo;snapshot_id\u0026rsquo; over \u0026lsquo;generation\u0026rsquo; is preferably recommended for PowerMax microcode version 5978.669.669 and onwards.  Examples - name: Create a Snapshot for a Storage Group dellemc_powermax_snapshot: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; sg_name: \u0026quot;ansible_sg\u0026quot; snapshot_name: \u0026quot;ansible_sg_snap\u0026quot; ttl: \u0026quot;2\u0026quot; ttl_unit: \u0026quot;days\u0026quot; state: \u0026quot;present\u0026quot; - name: Get Storage Group Snapshot details dellemc_powermax_snapshot: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; sg_name: \u0026quot;ansible_sg\u0026quot; snapshot_name: \u0026quot;ansible_sg_snap\u0026quot; state: \u0026quot;present\u0026quot; - name: Get Storage Group Snapshot details using generation dellemc_powermax_snapshot: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; sg_name: \u0026quot;ansible_sg\u0026quot; snapshot_name: \u0026quot;ansible_sg_snap\u0026quot; generation: 1 state: \u0026quot;present\u0026quot; - name: Get Storage Group Snapshot details using snapshot_id dellemc_powermax_snapshot: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; sg_name: \u0026quot;ansible_sg\u0026quot; snapshot_name: \u0026quot;ansible_sg_snap\u0026quot; snapshot_id: 135023964929 state: \u0026quot;present\u0026quot; - name: Rename Storage Group Snapshot using generation dellemc_powermax_snapshot: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; sg_name: \u0026quot;ansible_sg\u0026quot; snapshot_name: \u0026quot;ansible_sg_snap\u0026quot; new_snapshot_name: \u0026quot;ansible_snap_new\u0026quot; generation: 0 state: \u0026quot;present\u0026quot; - name: Rename Storage Group Snapshot using snapshot_id dellemc_powermax_snapshot: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; sg_name: \u0026quot;ansible_sg\u0026quot; snapshot_name: \u0026quot;ansible_sg_snap\u0026quot; new_snapshot_name: \u0026quot;ansible_snap_new\u0026quot; snapshot_id: 135023964929 state: \u0026quot;present\u0026quot; - name: Change Snapshot Link Status to Linked using generation dellemc_powermax_snapshot: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; sg_name: \u0026quot;ansible_sg\u0026quot; snapshot_name: \u0026quot;ansible_snap_new\u0026quot; generation: 1 target_sg_name: \u0026quot;ansible_sg_target\u0026quot; link_status: \u0026quot;linked\u0026quot; state: \u0026quot;present\u0026quot; - name: Change Snapshot Link Status to UnLinked using generation dellemc_powermax_snapshot: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; sg_name: \u0026quot;ansible_sg\u0026quot; snapshot_name: \u0026quot;ansible_snap_new\u0026quot; generation: 1 target_sg_name: \u0026quot;ansible_sg_target\u0026quot; link_status: \u0026quot;unlinked\u0026quot; state: \u0026quot;present\u0026quot; - name: Change Snapshot Link Status to Linked using snapshot_id dellemc_powermax_snapshot: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; sg_name: \u0026quot;ansible_sg\u0026quot; snapshot_name: \u0026quot;ansible_snap_new\u0026quot; snapshot_id: 135023964515 target_sg_name: \u0026quot;ansible_sg_target\u0026quot; link_status: \u0026quot;linked\u0026quot; state: \u0026quot;present\u0026quot; - name: Change Snapshot Link Status to UnLinked using snapshot_id dellemc_powermax_snapshot: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; sg_name: \u0026quot;ansible_sg\u0026quot; snapshot_name: \u0026quot;ansible_snap_new\u0026quot; snapshot_id: 135023964515 target_sg_name: \u0026quot;ansible_sg_target\u0026quot; link_status: \u0026quot;unlinked\u0026quot; state: \u0026quot;present\u0026quot; - name: Delete Storage Group Snapshot using generation dellemc_powermax_snapshot: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; sg_name: \u0026quot;ansible_sg\u0026quot; snapshot_name: \u0026quot;ansible_sg_snap\u0026quot; generation: 1 state: \u0026quot;absent\u0026quot; - name: Delete Storage Group Snapshot using snapshot_id dellemc_powermax_snapshot: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; sg_name: \u0026quot;ansible_sg\u0026quot; snapshot_name: \u0026quot;ansible_sg_snap\u0026quot; snapshot_id: 135023964929 state: \u0026quot;absent\u0026quot; Return Values The following are the fields unique to this module:\n Key Returned Description    changed  type=boolean   always  Whether or not the resource has changed.      create_sg_snap  type=boolean   When snapshot is created.  Flag sets to true when the snapshot is created.      delete_sg_snap  type=boolean   When snapshot is deleted.  Flag sets to true when the snapshot is deleted.      rename_sg_snap  type=boolean   When snapshot is renamed.  Flag sets to true when the snapshot is renamed.      sg_snap_details  complex   When snapshot exists.  Details of the snapshot.     \u0026nbsp;  expired  type=boolean   success  Indicates whether the snapshot is expired or not.     \u0026nbsp;  generation/snapid  type=integer   success  The generation/snapshot ID of the snapshot.     \u0026nbsp;  linked  type=boolean   success  Indicates whether the snapshot is linked or not.     \u0026nbsp;  name  type=string   success  Name of the snapshot.     \u0026nbsp;  non_shared_tracks  type=integer   success  Number of non-shared tracks.     \u0026nbsp;  num_source_volumes  type=integer   success  Number of source volumes.     \u0026nbsp;  num_storage_group_volumes  type=integer   success  Number of storage group volumes.     \u0026nbsp;  restored  type=boolean   success  Indicates whether the snapshot is restored or not.     \u0026nbsp;  source_volume  type=list elements=string   success  Source volume details.     \u0026nbsp; \u0026nbsp;  capacity  type=integer   success  Volume capacity.     \u0026nbsp; \u0026nbsp;  capacity_gb  type=integer   success  Volume capacity in GB.     \u0026nbsp; \u0026nbsp;  name  type=string   success  Volume ID.     \u0026nbsp;  state  type=string   success  State of the snapshot.     \u0026nbsp;  time_to_live_expiry_date  type=string   success  Time to live expiry date.     \u0026nbsp;  timestamp  type=string   success  Snapshot time stamp.     \u0026nbsp;  timestamp_utc  type=integer   success  Snapshot time stamp specified in UTC.     \u0026nbsp;  tracks  type=integer   success  Number of tracks.     Authors  Prashant Rakheja (@prashant-dell) \u0026lt;ansible.team@dell.com\u0026gt; Rajshree Khare (@khareRajshree) \u0026lt;ansible.team@dell.com\u0026gt;  Snapshot Policy Module Synopsis Managing a snapshot policy on a PowerMax storage system includes getting details of any specific snapshot policy, creating a snapshot policy, modifying snapshot policy attributes, modifying snapshot policy state, associating or disassociating storage groups to or from snapshot policy and deleting a snapshot policy.\nParameters  Parameter Choices/Defaults Comments    compliance_count_critical  type=integer      If the number of valid snapshots falls below this number, the compliance changes to critical (red).     compliance_count_warning  type=integer      If the number of valid snapshots falls below this number, the compliance changes to warning (yellow).     interval  type=string    Choices: 10 Minutes 12 Minutes 15 Minutes 20 Minutes 30 Minutes 1 Hour 2 Hours 3 Hours 4 Hours 6 Hours 8 Hours 12 Hours 1 Day 7 Days    The value of the interval counter for snapshot policy execution.     new_snapshot_policy_name  type=string      New name of the snapshot policy.     offset_mins  type=integer      Defines when, within the interval the snapshots will be taken for a specified snapshot policy. The offset must be less than the interval of the snapshot policy. The format must be in minutes. If not specified, default value is 0.     secure  type=boolean    Choices: no yes    Secure snapshots may only be terminated after they expire or by Dell EMC support. If not specified, default value is False.     snapshot_count  type=integer      The max snapshot count of the policy. Max value is 1024.     snapshot_policy_name  type=string required=true      Name of the snapshot policy.     state  type=string required=true    Choices: present absent    Shows if the snapshot policy should be present or absent.     storage_group_state  type=string    Choices: present-in-policy absent-in-policy    The state of the storage group with regard to the snapshot policy. present-in-policy indicates associate SG to SP. absent-in-policy indicates disassociate SG from SP.     storage_groups  type=list elements=string      List of storage groups.     suspend  type=boolean    Choices: no yes    Suspend the snapshot policy. True indicates snapshot policy is in suspend state. False indicates snapshot policy is in resume state.     universion  type=integer    Choices: 92    Unisphere version, currently \u0026#x27;92\u0026#x27; version is supported.    Notes  The max number of snapshot policies on an array is limited to 20. At most four snapshot policies can be associated with a storage group. The compliance_count_warning value should be less than total_snapshot_count value of the policy. The compliance_count_critical value should be less than or equal to the compliance_count_warning value of the policy.  Examples - name: Create a snapshot policy dellemc_powermax_snapshotpolicy: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; snapshot_policy_name: \u0026quot;10min_policy_1\u0026quot; interval: \u0026quot;10 Minutes\u0026quot; secure: false snapshot_count: 10 offset_mins: 2 compliance_count_warning: 6 compliance_count_critical: 4 state: \u0026quot;present\u0026quot; - name: Create a snapshot policy and associate storage groups to it dellemc_powermax_snapshotpolicy: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; snapshot_policy_name: \u0026quot;10min_policy_2\u0026quot; interval: \u0026quot;10 Minutes\u0026quot; secure: false snapshot_count: 12 offset_mins: 5 compliance_count_warning: 8 compliance_count_critical: 4 storage_groups: - \u0026quot;11_ansible_test_1\u0026quot; - \u0026quot;11_ansible_test_2\u0026quot; storage_group_state: \u0026quot;present-in-policy\u0026quot; state: \u0026quot;present\u0026quot; - name: Get snapshot policy details dellemc_powermax_snapshotpolicy: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; snapshot_policy_name: \u0026quot;10min_policy_2\u0026quot; state: \u0026quot;present\u0026quot; - name: Modify snapshot policy attributes dellemc_powermax_snapshotpolicy: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; snapshot_policy_name: \u0026quot;10min_policy_2\u0026quot; new_snapshot_policy_name: \u0026quot;10min_policy_2_new\u0026quot; interval: \u0026quot;10 Minutes\u0026quot; snapshot_count: 16 offset_mins: 8 compliance_count_warning: 9 compliance_count_critical: 7 state: \u0026quot;present\u0026quot; - name: Modify snapshot policy, associate to storage groups dellemc_powermax_snapshotpolicy: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; snapshot_policy_name: \u0026quot;10min_policy_1\u0026quot; storage_groups: - \u0026quot;11_ansible_test_1\u0026quot; - \u0026quot;11_ansible_test_2\u0026quot; storage_group_state: \u0026quot;present-in-policy\u0026quot; state: \u0026quot;present\u0026quot; - name: Modify snapshot policy, disassociate from storage groups dellemc_powermax_snapshotpolicy: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; snapshot_policy_name: \u0026quot;10min_policy_1\u0026quot; storage_groups: - \u0026quot;11_ansible_test_1\u0026quot; - \u0026quot;11_ansible_test_2\u0026quot; storage_group_state: \u0026quot;absent-in-policy\u0026quot; state: \u0026quot;present\u0026quot; - name: Modify snapshot policy state to suspend dellemc_powermax_snapshotpolicy: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; snapshot_policy_name: \u0026quot;10min_policy_1\u0026quot; suspend: true state: \u0026quot;present\u0026quot; - name: Modify snapshot policy state to resume dellemc_powermax_snapshotpolicy: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; snapshot_policy_name: \u0026quot;10min_policy_1\u0026quot; suspend: false state: \u0026quot;present\u0026quot; - name: Delete a snapshot policy dellemc_powermax_snapshotpolicy: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; snapshot_policy_name: \u0026quot;10min_policy_1\u0026quot; state: \u0026quot;absent\u0026quot; Return Values The following are the fields unique to this module:\n Key Returned Description    changed  type=boolean   always  Whether or not the resource has changed.      snapshot_policy_details  complex   When snapshot policy exists.  Details of the snapshot policy.     \u0026nbsp;  compliance_count_critical  type=integer   success  The number of valid snapshots that have critical compliance.     \u0026nbsp;  compliance_count_warning  type=integer   success  The number of valid snapshots that have warning compliance.     \u0026nbsp;  interval_minutes  type=integer   success  The interval minutes for snapshot policy execution.     \u0026nbsp;  last_time_used  type=string   success  The timestamp indicating the last time snapshot policy was used.     \u0026nbsp;  offset_minutes  type=integer   success  It is the time in minutes within the interval when the snapshots will be taken for a specified Snapshot Policy.     \u0026nbsp;  secure  type=boolean   success  True value indicates that the secure snapshots may only be terminated after they expire or by Dell EMC support.     \u0026nbsp;  snapshot_count  type=integer   success  It is the max snapshot count of the policy.     \u0026nbsp;  snapshot_policy_name  type=string   success  Name of the snapshot policy.     \u0026nbsp;  storage_group  type=list elements=string   success  The list of storage groups associated with the snapshot policy.     \u0026nbsp;  storage_group_count  type=integer   success  The number of storage groups associated with the snapshot policy.     \u0026nbsp;  storage_group_snapshotID  type=list elements=string   success  Pair of storage group and list of snapshot IDs associated with the snapshot policy.     \u0026nbsp;  suspended  type=boolean   success  The state of the snapshot policy, true indicates policy is in suspend state.     \u0026nbsp;  symmetrixID  type=string   success  The symmetrix on which snapshot policy exists.     Authors  Rajshree Khare (@khareRajshree) \u0026lt;ansible.team@dell.com\u0026gt;  SRDF Module Synopsis Managing SRDF link on a PowerMax storage system includes creating an SRDF pair for a storage group, modifying the SRDF mode, modifying the SRDF state of an existing SRDF pair, and deleting an SRDF pair. All create and modify calls are asynchronous by default.\nParameters  Parameter Choices/Defaults Comments    job_id  type=string      Job ID of an asynchronous task. Can be used to get details of a job.     new_rdf_group  type=boolean    Choices: no yes    Overrides the SRDF group selection functionality and forces the creation of a new SRDF group. PowerMax has a limited number of RDF groups. If this flag is set to True, and the RDF groups are exhausted, then SRDF link creation will fail. If not specified, default value is \u0026#x27;false\u0026#x27;.     rdfg_no  type=integer      The RDF group number. Optional parameter for each call. For a create operation, if specified, the array will reuse the RDF group, otherwise an error is returned. For modify and delete operations, if the RFD group number is not specified, and the storage group is protected by multiple RDF groups, then an error is raised.     remote_serial_no  type=string      integer 12-digit serial number of remote PowerMax or VMAX array. Required while creating an SRDF link.     serial_no  type=string required=true      The serial number will refer to the source PowerMax/VMAX array when protecting a storage group. However srdf_state operations may be issued from primary or remote array.     sg_name  type=string      Name of storage group. SRDF pairings are managed at a storage group level. Required to identify the SRDF link.     srdf_mode  type=string    Choices: Active Adaptive Copy Synchronous Asynchronous    The replication mode of the SRDF pair. Required when creating an SRDF pair. Can be modified by providing a required value.     srdf_state  type=string    Choices: Establish Resume Restore Suspend Swap Split Failback Failover Setbias    Desired state of the SRDF pairing. While creating a new SRDF pair, allowed values are \u0026#x27;Establish\u0026#x27; and \u0026#x27;Suspend\u0026#x27;. If the state is not specified, the pair will be created in a \u0026#x27;Suspended\u0026#x27; state. When modifying the state, only certain changes are allowed.     state  type=string required=true    Choices: absent present    Define whether the SRDF pairing should exist or not. present indicates that the SRDF pairing should exist in system. absent indicates that the SRDF pairing should not exist in system.     wait_for_completion  type=boolean    Choices: no\u0026nbsp;\u0026larr; yes    Flag to indicate if the operation should be run synchronously or asynchronously. True signifies synchronous execution. By default, all create and update operations will be run asynchronously.     witness  type=boolean    Choices: no yes    Flag to specify use of Witness for a Metro configuration. Setting to True signifies to use Witness, setting it to False signifies to use Bias. It is recommended to configure a witness for SRDF Metro in a production environment, this is configured via Unisphere for PowerMax UI or REST. The flag can be set only for modifying srdf_state to either Establish, Suspend, or Restore. While creating a Metro configuration, the witness flag must be set to True.    Examples - name: Create and establish storagegroup SRDF/a pairing register: Job_details_body dellemc_powermax_srdf: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; sg_name: \u0026quot;{{sg_name}}\u0026quot; remote_serial_no: \u0026quot;{{remote_serial_no}}\u0026quot; srdf_mode: 'Asynchronous' srdf_state: 'Establish' state: 'present' - name: Create storagegroup SRDF/s pair in default suspended mode as an Synchronous task dellemc_powermax_srdf: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; sg_name: \u0026quot;{{sg_name2}}\u0026quot; remote_serial_no: \u0026quot;{{remote_serial_no}}\u0026quot; state: 'present' srdf_mode: 'Synchronous' wait_for_completion: True - name: Create storagegroup Metro SRDF pair with Witness for resiliency dellemc_powermax_srdf: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; sg_name: \u0026quot;{{sg_name}}\u0026quot; remote_serial_no: \u0026quot;{{remote_serial_no}}\u0026quot; state: 'present' srdf_mode: 'Active' wait_for_completion: True srdf_state: 'Establish' - name: Suspend storagegroup Metro SRDF pair dellemc_powermax_srdf: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; sg_name: \u0026quot;{{sg_name}}\u0026quot; remote_serial_no: \u0026quot;{{remote_serial_no}}\u0026quot; state: 'present' srdf_state: 'Suspend' - name: Establish link for storagegroup Metro SRDF pair and use Bias for resiliency dellemc_powermax_srdf: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; sg_name: \u0026quot;{{sg_name}}\u0026quot; remote_serial_no: \u0026quot;{{remote_serial_no}}\u0026quot; state: 'present' wait_for_completion: False srdf_state: 'Establish' witness: False - name: Get SRDF details dellemc_powermax_srdf: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; sg_name: \u0026quot;{{sg_name}}\u0026quot; state: 'present' - name: Modify SRDF mode dellemc_powermax_srdf: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; sg_name: \u0026quot;{{sg_name}}\u0026quot; srdf_mode: 'Synchronous' state: 'present' - name: Failover SRDF link dellemc_powermax_srdf: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; sg_name: \u0026quot;{{sg_name}}\u0026quot; srdf_state: 'Failover' state: 'present' - name: Get SRDF Job status dellemc_powermax_srdf: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; job_id: \u0026quot;{{Job_details_body.Job_details.jobId}}\u0026quot; state: 'present' - name: Establish SRDF link dellemc_powermax_srdf: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; sg_name: \u0026quot;{{sg_name2}}\u0026quot; srdf_state: 'Establish' state: 'present' - name: Suspend SRDF link dellemc_powermax_srdf: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; sg_name: \u0026quot;{{sg_name2}}\u0026quot; srdf_state: 'Suspend' state: 'present' - name: Delete SRDF link dellemc_powermax_srdf: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; sg_name: \u0026quot;{{sg_name}}\u0026quot; state: 'absent' Return Values The following are the fields unique to this module:\n Key Returned Description    changed  type=boolean   always  Whether or not the resource has changed.      Job_details  type=list elements=string   When job exist.  Details of the job.     \u0026nbsp;  completed_date_milliseconds  type=integer   success  Date of job completion in milliseconds.     \u0026nbsp;  jobId  type=string   success  Unique identifier of the job.     \u0026nbsp;  last_modified_date  type=string   success  Last modified date of job.     \u0026nbsp;  last_modified_date_milliseconds  type=integer   success  Last modified date of job in milliseconds.     \u0026nbsp;  name  type=string   success  Name of the job.     \u0026nbsp;  resourceLink  type=string   success  Resource link w.r.t Unisphere.     \u0026nbsp;  result  type=string   success  Job description     \u0026nbsp;  status  type=string   success  Status of the job.     \u0026nbsp;  task  type=list elements=string   success  Details about the job.     \u0026nbsp;  username  type=string   success  Unisphere username.      SRDF_link_details  complex   When SRDF link exists.  Details of the SRDF link.     \u0026nbsp;  hop2Modes  type=string   success  SRDF hop2 mode.     \u0026nbsp;  hop2Rdfgs  type=string   success  Hop2 RDF group number.     \u0026nbsp;  hop2States  type=string   success  SRDF hop2 state.     \u0026nbsp;  largerRdfSides  type=string   success  Larger volume side of the link.     \u0026nbsp;  localR1InvalidTracksHop1  type=integer   success  Number of invalid R1 tracks on local volume.     \u0026nbsp;  localR2InvalidTracksHop1  type=integer   success  Number of invalid R2 tracks on local volume.     \u0026nbsp;  modes  type=string   success  Mode of the SRDF pair.     \u0026nbsp;  rdfGroupNumber  type=integer   success  RDF group number of the pair.     \u0026nbsp;  remoteR1InvalidTracksHop1  type=integer   success  Number of invalid R1 tracks on remote volume.     \u0026nbsp;  remoteR2InvalidTracksHop1  type=integer   success  Number of invalid R2 tracks on remote volume.     \u0026nbsp;  remoteSymmetrix  type=string   success  Remote symmetrix ID.     \u0026nbsp;  states  type=string   success  State of the SRDF pair.     \u0026nbsp;  storageGroupName  type=string   success  Name of storage group that is SRDF protected.     \u0026nbsp;  symmetrixId  type=string   success  Primary symmetrix ID.     \u0026nbsp;  totalTracks  type=integer   success  Total number of tracks in the volume.     \u0026nbsp;  volumeRdfTypes  type=string   success  RDF type of volume.     Authors  Manisha Agrawal (@agrawm3) \u0026lt;ansible.team@dell.com\u0026gt; Rajshree Khare (@khareRajshree) \u0026lt;ansible.team@dell.com\u0026gt;  Storage Group Module Synopsis Managing storage groups on a PowerMax storage system includes listing the volumes of a storage group, creating a new storage group, deleting an existing storage group, adding existing volumes to an existing storage group, removing existing volumes from an existing storage group, creating new volumes in an existing storage group, modifying existing storage group attributes, adding child storage groups inside an existing storage group (parent), and removing a child storage group from an existing parent storage group.\nParameters  Parameter Choices/Defaults Comments    child_sg_state  type=string    Choices: present-in-group absent-in-group    Describes the state of CSG inside parent SG     child_storage_groups  type=list elements=string      This is a list of child storage groups     compression  type=boolean    Choices: no yes    compression on storage group. Compression parameter is ignored if service_level is not specified. Default is true.     new_sg_name  type=string      The new name of the storage group.     service_level  type=string      The Name of SLO.     sg_name  type=string required=true      The name of the storage group.     snapshot_policies  type=list elements=string      List of snapshot policy(s).     snapshot_policy_state  type=string    Choices: present-in-group absent-in-group    Describes the state of snapshot policy for an SG     srp  type=string      Name of the storage resource pool. This parameter is ignored if service_level is not specified. Default is to use whichever is the default SRP on the array.     state  type=string required=true    Choices: absent present    Define whether the storage group should exist or not.     vol_state  type=string    Choices: present-in-group absent-in-group    Describes the state of volumes inside the SG.     volumes  type=list elements=dictionary      This is a list of volumes. Each volume has four attributes- vol_name size cap_unit vol_id. Either the volume ID must be provided for existing volumes, or the name and size must be provided to add new volumes to SG. The unit is optional. vol_name - Represents the name of the volume size - Represents the volume size cap_unit - The unit in which size is represented. Default unit is GB. Choices are MB, GB, TB. vol_id - This is the volume ID    Examples - name: Get storage group details including volumes dellemc_powermax_storagegroup: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; sg_name: \u0026quot;ansible_sg\u0026quot; state: \u0026quot;present\u0026quot; - name: Create empty storage group dellemc_powermax_storagegroup: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; sg_name: \u0026quot;foo\u0026quot; service_level: \u0026quot;Diamond\u0026quot; srp: \u0026quot;SRP_1\u0026quot; compression: True state: \u0026quot;present\u0026quot; - name: Delete the storage Group dellemc_powermax_storagegroup: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; sg_name: \u0026quot;foo\u0026quot; state: \u0026quot;absent\u0026quot; - name: Adding existing volume(s) to existing SG dellemc_powermax_storagegroup: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; sg_name: \u0026quot;foo\u0026quot; state: \u0026quot;present\u0026quot; volumes: - vol_id: \u0026quot;00028\u0026quot; - vol_id: \u0026quot;00018\u0026quot; - vol_id: \u0026quot;00025\u0026quot; vol_state: \u0026quot;present-in-group\u0026quot; - name: Create new volumes for existing SG dellemc_powermax_storagegroup: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; sg_name: \u0026quot;foo\u0026quot; state: \u0026quot;present\u0026quot; volumes: - vol_name: \u0026quot;foo\u0026quot; size: 1 cap_unit: \u0026quot;GB\u0026quot; - vol_name: \u0026quot;bar\u0026quot; size: 1 cap_unit: \u0026quot;GB\u0026quot; vol_state: \u0026quot;present-in-group\u0026quot; - name: Remove volume(s) from existing SG dellemc_powermax_storagegroup: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; sg_name: \u0026quot;foo\u0026quot; state: \u0026quot;present\u0026quot; volumes: - vol_id: \u0026quot;00028\u0026quot; - vol_id: \u0026quot;00018\u0026quot; - vol_name: \u0026quot;ansible-vol\u0026quot; vol_state: \u0026quot;absent-in-group\u0026quot; - name: Adding child SG to parent SG dellemc_powermax_storagegroup: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; sg_name: \u0026quot;parent_sg\u0026quot; state: \u0026quot;present\u0026quot; child_storage_groups: - \u0026quot;pie\u0026quot; - \u0026quot;bar\u0026quot; child_sg_state: \u0026quot;present-in-group\u0026quot; - name: Removing child SG from parent SG dellemc_powermax_storagegroup: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; sg_name: \u0026quot;parent_sg\u0026quot; state: \u0026quot;present\u0026quot; child_storage_groups: - \u0026quot;pie\u0026quot; - \u0026quot;bar\u0026quot; child_sg_state: \u0026quot;absent-in-group\u0026quot; - name: Rename Storage Group dellemc_powermax_storagegroup: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; sg_name: \u0026quot;ansible_sg\u0026quot; new_sg_name: \u0026quot;ansible_sg_renamed\u0026quot; state: \u0026quot;present\u0026quot; - name: Create a storage group with snapshot policies dellemc_powermax_storagegroup: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; sg_name: \u0026quot;ansible_test_sg\u0026quot; service_level: \u0026quot;Diamond\u0026quot; srp: \u0026quot;SRP_1\u0026quot; compression: True snapshot_policies: - \u0026quot;10min_policy\u0026quot; - \u0026quot;30min_policy\u0026quot; snapshot_policy_state: \u0026quot;present-in-group\u0026quot; state: \u0026quot;present\u0026quot; - name: Add snapshot policy to a storage group dellemc_powermax_storagegroup: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; sg_name: \u0026quot;ansible_test_sg\u0026quot; snapshot_policies: - \u0026quot;15min_policy\u0026quot; snapshot_policy_state: \u0026quot;present-in-group\u0026quot; state: \u0026quot;present\u0026quot; - name: Remove snapshot policy from a storage group dellemc_powermax_storagegroup: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; sg_name: \u0026quot;ansible_test_sg\u0026quot; snapshot_policies: - \u0026quot;15min_policy\u0026quot; snapshot_policy_state: \u0026quot;absent-in-group\u0026quot; state: \u0026quot;present\u0026quot; Return Values The following are the fields unique to this module:\n Key Returned Description    add_child_sg  type=boolean   When value exists.  Sets to true when a child SG is added.      add_new_vols_to_sg  type=boolean   When value exists.  Sets to true when new volumes are added to the SG.      add_snapshot_policy_to_sg  type=boolean   When value exists.  Sets to true when snapshot policy(s) is added to SG.      add_vols_to_sg  type=boolean   When value exists.  Sets to true when existing volumes are added to the SG.      added_vols_details  type=list elements=string   When value exists.  Volume IDs of the volumes added.      changed  type=boolean   always  Whether or not the resource has changed.      create_sg  type=boolean   When value exists.  Sets to true when a new SG is created.      delete_sg  type=boolean   When value exists.  Sets to true when an SG is deleted.      modify_sg  type=boolean   When value exists.  Sets to true when an SG is modified.      remove_child_sg  type=boolean   When value exists.  Sets to true when a child SG is removed.      remove_snapshot_policy_to_sg  type=boolean   When value exists.  Sets to false when snapshot policy(s) is removed from SG.      remove_vols_from_sg  type=boolean   When value exists.  Sets to true when volumes are removed.      removed_vols_details  type=list elements=string   When value exists.  Volume IDs of the volumes removed.      rename_sg  type=boolean   When value exists.  Sets to true when an SG is renamed.      snapshot_policy_compliance_details  complex   When snapshot policy associated..  The compliance status of this storage group.     \u0026nbsp;  compliance  type=string   success  Compliance status     \u0026nbsp;  sl_compliance  complex   success  Compliance details     \u0026nbsp; \u0026nbsp;  compliance  type=string   success  Compliance status     \u0026nbsp; \u0026nbsp;  sl_name  type=string   success  Name of the snapshot policy     \u0026nbsp;  sl_count  type=integer   success  Number of snapshot policies associated with storage group     \u0026nbsp;  storage_group_name  type=string   success  Name of the storage group      storage_group_details  complex   When storage group exists.  Details of the storage group.     \u0026nbsp;  base_slo_name  type=string   success  Base Service Level Objective (SLO) of a storage group.     \u0026nbsp;  cap_gb  type=integer   success  Storage group capacity in GB.     \u0026nbsp;  compression  type=boolean   success  Compression flag.     \u0026nbsp;  device_emulation  type=string   success  Device emulation type.     \u0026nbsp;  num_of_child_sgs  type=integer   success  Number of child storage groups.     \u0026nbsp;  num_of_masking_views  type=integer   success  Number of masking views associated with the storage group.     \u0026nbsp;  num_of_parent_sgs  type=integer   success  Number of parent storage groups.     \u0026nbsp;  num_of_snapshots  type=integer   success  Number of snapshots for the storage group.     \u0026nbsp;  num_of_vols  type=integer   success  Number of volumes in the storage group.     \u0026nbsp;  service_level  type=string   success  Type of service level.     \u0026nbsp;  slo  type=string   success  Service level objective (SLO) type.     \u0026nbsp;  slo_compliance  type=string   success  Type of SLO compliance.     \u0026nbsp;  srp  type=string   success  Storage resource pool.     \u0026nbsp;  storageGroupId  type=string   success  Id for the storage group.     \u0026nbsp;  type  type=string   success  type of storage group.     \u0026nbsp;  unprotected  type=boolean   success  Flag for storage group protection.     \u0026nbsp;  vp_saved_percent  type=integer   success  Percentage saved for virtual pools.      storage_group_volumes  type=list elements=string   When value exists.  Volume IDs of storage group volumes.      storage_group_volumes_details  complex   When storage group volumes exists.  Details of the storage group volumes.     \u0026nbsp;  effective_wwn  type=string   success  Effective WWN of the volume.     \u0026nbsp;  type  type=string   success  Type of the volume.     \u0026nbsp;  volume_identifier  type=string   success  Name associated with the volume.     \u0026nbsp;  volumeId  type=string   success  Unique ID of the volume.     \u0026nbsp;  wwn  type=string   success  WWN of the volume.     Authors  Vasudevu Lakhinana (@unknown) \u0026lt;ansible.team@dell.com\u0026gt; Prashant Rakheja (@prashant-dell) \u0026lt;ansible.team@dell.com\u0026gt; Ambuj Dubey (@AmbujDube) \u0026lt;ansible.team@dell.com\u0026gt;  Storage Pool Module Synopsis Managing storage pools on PowerMax storage system includes getting details of storage pools.\nParameters  Parameter Choices/Defaults Comments    pool  type=string required=true      The name of the storage pool.     state  type=string required=true    Choices: absent present    State variable to determine whether storage pool will exist or not.    Examples - name: Get specific storage pool details dellemc_powermax_storagepool: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; pool: \u0026quot;SRP_1\u0026quot; state: \u0026quot;present\u0026quot; Return Values The following are the fields unique to this module:\n Key Returned Description    changed  type=boolean   always  Whether or not the resource has changed.      pool_details  complex   When storage pool exist.  Details of the storage pool.     \u0026nbsp;  serial_no  type=string   success  The PowerMax array on which storage pool resides     \u0026nbsp;  service_levels  type=list elements=string   success  The service levels supported by storage pool     \u0026nbsp;  srp_capacity  complex   success  SRP capacity details     \u0026nbsp; \u0026nbsp;  effective_used_capacity_percent  type=integer   success  The effective used capacity, expressed as a percentage     \u0026nbsp; \u0026nbsp;  usable_total_tb  type=float   success  Usable capacity of the storage pool in TB     \u0026nbsp; \u0026nbsp;  usable_used_tb  type=float   success  Used capacity of the storage pool in TB     \u0026nbsp;  srp_efficiency  complex   success  SRP efficiency details     \u0026nbsp; \u0026nbsp;  compression_state  type=string   success  Indicates whether compression is enabled or disabled for this storage resource pool.     \u0026nbsp;  srpId  type=string   success  The ID of the storage pool     \u0026nbsp;  total_free_tb  type=string   success  Free capacity of the storage pool in TB     Authors  Akash Shendge (@shenda1) \u0026lt;ansible.team@dell.com\u0026gt;  Volume Module Synopsis Managing volumes on PowerMax storage system includes creating a volume, renaming a volume, expanding a volume, and deleting a volume.\nParameters  Parameter Choices/Defaults Comments    cap_unit  type=string    Choices: MB GB TB    volume capacity units If not specified, default value is GB.     new_name  type=string      The new volume identifier for the volume.     new_sg_name  type=string      The name of the target storage group.     sg_name  type=string      The name of the storage group.     size  type=float      The new size of existing volume. Required for create and expand volume operations.     state  type=string required=true    Choices: absent present    Defines whether the volume should exist or not.     vol_id  type=string      The native id of the volume. Required for rename and delete volume operations.     vol_name  type=string      The name of the volume.     vol_wwn  type=string      The WWN of the volume.    Notes  To expand a volume, either provide vol_id or vol_name or vol_wwn and sg_name. size is required to create/expand a volume. vol_id is required to rename/delete a volume. vol_name, sg_name and new_sg_name is required to move volumes between storage groups. Deletion of volume will fail if the storage group is part of a masking view.  Examples - name: Create volume dellemc_powermax_volume: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; vol_name: \u0026quot;{{vol_name}}\u0026quot; sg_name: \u0026quot;{{sg_name}}\u0026quot; size: 1 cap_unit: \u0026quot;{{cap_unit}}\u0026quot; state: 'present' - name: Expanding volume size dellemc_powermax_volume: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; size: 3 cap_unit: \u0026quot;{{cap_unit}}\u0026quot; vol_id: \u0026quot;0059B\u0026quot; state: 'present' - name: Renaming volume dellemc_powermax_volume: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; new_name: \u0026quot;Test_GOLD_vol_Renamed\u0026quot; vol_id: \u0026quot;0059B\u0026quot; state: 'present' - name: Delete volume using volume ID dellemc_powermax_volume: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; vol_id: \u0026quot;0059B\u0026quot; state: 'absent' - name: Delete volume using volume WWN dellemc_powermax_volume: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; vol_wwn: \u0026quot;60000970000197900237533030303246\u0026quot; state: 'absent' - name: Move volume between storage group dellemc_powermax_volume: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; universion: \u0026quot;{{universion}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; serial_no: \u0026quot;{{serial_no}}\u0026quot; vol_name: \u0026quot;{{vol_name}}\u0026quot; sg_name: \u0026quot;{{sg_name}}\u0026quot; new_sg_name: \u0026quot;{{new_sg_name}}\u0026quot; state: 'present' Return Values The following are the fields unique to this module:\n Key Returned Description    changed  type=boolean   always  Whether or not the resource has changed.      volume_details  complex   When volume exists.  Details of the volume.     \u0026nbsp;  allocated_percent  type=integer   success  Allocated percentage the volume.     \u0026nbsp;  cap_cyl  type=integer   success  Number of cylinders.     \u0026nbsp;  cap_gb  type=integer   success  Volume capacity in GB.     \u0026nbsp;  cap_mb  type=integer   success  Volume capacity in MB.     \u0026nbsp;  effective_wwn  type=string   success  Effective WWN of the volume.     \u0026nbsp;  emulation  type=string   success  Volume emulation type.     \u0026nbsp;  encapsulated  type=boolean   success  Flag for encapsulation.     \u0026nbsp;  has_effective_wwn  type=string   success  Flag for effective WWN presence.     \u0026nbsp;  mobility_id_enabled  type=boolean   success  Flag for enabling mobility.     \u0026nbsp;  num_of_front_end_paths  type=integer   success  Number of front end paths in the volume.     \u0026nbsp;  num_of_storage_groups  type=integer   success  Number of storage groups in which volume is present.     \u0026nbsp;  pinned  type=boolean   success  Pinned flag.     \u0026nbsp;  rdfGroupId  type=integer   success  RDFG number for volume.     \u0026nbsp;  reserved  type=boolean   success  Reserved flag.     \u0026nbsp;  snapvx_source  type=boolean   success  Source SnapVX flag.     \u0026nbsp;  snapvx_target  type=boolean   success  Target SnapVX flag.     \u0026nbsp;  ssid  type=string   success  SSID of the volume.     \u0026nbsp;  status  type=string   success  Volume status.     \u0026nbsp;  storage_groups  type=list elements=string   success  List of storage groups for the volume.     \u0026nbsp;  storageGroupId  type=string   success  Storage group ID of the volume.     \u0026nbsp;  type  type=string   success  Type of the volume.     \u0026nbsp;  volume_identifier  type=string   success  Name identifier for the volume.     \u0026nbsp;  volumeId  type=string   success  Unique ID of the volume.     \u0026nbsp;  wwn  type=string   success  WWN of the volume.     Authors  Vasudevu Lakhinana (@unknown) \u0026lt;ansible.team@dell.com\u0026gt; Akash Shendge (@shenda1) \u0026lt;ansible.team@dell.com\u0026gt; Ambuj Dubey (@AmbujDube) \u0026lt;ansible.team@dell.com\u0026gt;  Process Storage Pool Dict Module Synopsis Process storage pools on PowerMax/VMAX storage system to find out the storage pool with maximum free storage\nParameters  Parameter Choices/Defaults Comments    pool_data  type=list elements=dictionary required=true      Storage pool details including service levels, usable total space, usable free space, total free space.     service_level  type=string      Service level of the storage group     sg_name  type=string      Name of the storage group     size  type=float required=true      Size of the storage group in GB    Examples - name: Get best suitable Pool using our python sorting module register: assigned_pool process_storage_pool_dict: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; pool_data: \u0026quot;{{ pools_list }}\u0026quot; size: 40 service_level: \u0026quot;Diamond\u0026quot; sg_name: \u0026quot;intellgent_provisioning\u0026quot; Return Values The following are the fields unique to this module:\n Key Returned Description    all_pools  type=list elements=string   when pool exists  List of all pools on unisphere     \u0026nbsp;  serial_no  type=string   when array satisfies the given criteria  The PowerMax array on which storage pool resides     \u0026nbsp;  storage_pool  type=string   when storage pool exists satisfying the given criteria  The ID of the storage pool      changed  type=boolean   always  Whether or not the resource has changed.      serial_no  type=string   when array satisfies the given criteria  The PowerMax array on which storage pool resides      storage_group  type=string   when storage group exists satisfying the given criteria  Name of the storage group      storage_pool  type=string   when storage pool exists satisfying the given criteria  The ID of the storage pool     Authors  Akash Shendge (@shenda1) \u0026lt;ansible.team@dell.com\u0026gt;  ","excerpt":"Ansible Modules for Dell EMC PowerMax Product Guide 1.5.0  © 2021 Dell Inc. or its subsidiaries. All …","ref":"/ansible-docs/docs/storage/platforms/powermax/product-guide/","title":"Product Guide"},{"body":"Ansible Modules for Dell EMC PowerScale Product Guide 1.2.0 © 2021 Dell Inc. or its subsidiaries. All rights reserved. Dell, EMC, and other trademarks are trademarks of Dell Inc. or its subsidiaries. Other trademarks may be trademarks of their respective owners.\n Contents  LDAP Module  Synopsis Parameters Notes Examples Return Values Authors   Smart Quota Module  Synopsis Parameters Notes Examples Return Values Authors   Active Directory Module  Synopsis Parameters Examples Return Values Authors   Snapshot Schedule Module  Synopsis Parameters Examples Return Values Authors   Users Module  Synopsis Parameters Examples Return Values Authors   SMB Module  Synopsis Parameters Examples Return Values Authors   Snapshot Module  Synopsis Parameters Examples Return Values Authors   Access Zone Module  Synopsis Parameters Notes Examples Return Values Authors   NFS Module  Synopsis Parameters Examples Return Values Authors   Groups Module  Synopsis Parameters Examples Return Values Authors   File System Module  Synopsis Parameters Examples Return Values Authors     LDAP Module Manage LDAP authentication provider on PowerScale\nSynopsis Managing LDAP authentication provider on PowerScale storage system includes creating, modifying, deleting and retrieving details of LDAP provider.\nParameters   Parameter Type Required Default Choices Description   ldap_name  str   True     Specifies the name of the LDAP provider.    server_uris  list elements: str      Specifies the server URIs. This parameter is mandatory during create. Server_uris should begin with ldap:// or ldaps:// if not validation error will be displayed.    server_uri_state  str      present-in-ldap absent-in-ldap   Specifies if the server_uris need to be added or removed from the provider. This parameter is mandatory if server_uris is specified. While creating LDAP provider, this parameter value should be specified as 'present-in-ldap'.    base_dn  str      Specifies the root of the tree in which to search identities. This parameter is mandatory during create.    ldap_parameters  dict      Specify additional parameters to configure LDAP domain.    \u0026nbsp; groupnet   str      Groupnet identifier. This is an optional parameter and defaults to groupnet0.    \u0026nbsp; bind_dn   str      Specifies the distinguished name for binding to the LDAP server.    \u0026nbsp; bind_password   str      Specifies the password for the distinguished name for binding to the LDAP server.    state  str   True     absent present   The state of the LDAP provider after the task is performed. present - indicates that the LDAP provider should exist on the system. absent - indicates that the LDAP provider should not exist on the system.    onefs_host  str   True     IP address or FQDN of the PowerScale cluster.    port_no  str    8080    Port number of the PowerScale cluster.It defaults to 8080 if not specified.    verify_ssl  bool   True     True False   boolean variable to specify whether to validate SSL certificate or not. True - indicates that the SSL certificate should be verified. False - indicates that the SSL certificate should not be verified.    api_user  str   True     username of the PowerScale cluster.    api_password  str   True     the password of the PowerScale cluster.    Notes  This module does not support modification of bind_password of LDAP provider. The value specified for bind_password will be ignored during modify.  Examples - name: Add an LDAP provider dellemc_powerscale_ldap: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; ldap_name: \u0026quot;ldap_test\u0026quot; server_uris: - \u0026quot;{{server_uri_1}}\u0026quot; - \u0026quot;{{server_uri_2}}\u0026quot; server_uri_state: 'present-in-ldap' base_dn: \u0026quot;DC=ansildap,DC=com\u0026quot; ldap_parameters: groupnet: \u0026quot;groupnet_ansildap\u0026quot; bind_dn: \u0026quot;cn=admin,dc=example,dc=com\u0026quot; bind_password: \u0026quot;{{bind_password}}\u0026quot; state: \u0026quot;present\u0026quot; - name: Add server_uris to an LDAP provider dellemc_powerscale_ldap: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; ldap_name: \u0026quot;ldap_test\u0026quot; server_uris: - \u0026quot;{{server_uri_1}}\u0026quot; server_uri_state: \u0026quot;present-in-ldap\u0026quot; state: \u0026quot;present\u0026quot; - name: Remove server_uris from an LDAP provider dellemc_powerscale_ldap: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; ldap_name: \u0026quot;ldap_test\u0026quot; server_uris: - \u0026quot;{{server_uri_1}}\u0026quot; server_uri_state: \u0026quot;absent-in-ldap\u0026quot; state: \u0026quot;present\u0026quot; - name: Modify LDAP provider dellemc_powerscale_ldap: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; ldap_name: \u0026quot;ldap_test\u0026quot; base_dn: \u0026quot;DC=ansi_ldap,DC=com\u0026quot; ldap_parameters: bind_dn: \u0026quot;cn=admin,dc=test,dc=com\u0026quot; state: \u0026quot;present\u0026quot; - name: Get LDAP provider details dellemc_powerscale_ldap: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; ldap_name: \u0026quot;ldap_test\u0026quot; state: \u0026quot;present\u0026quot; - name: Delete a LDAP provider dellemc_powerscale_ldap: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; ldap_name: \u0026quot;ldap_test\u0026quot; state: \u0026quot;absent\u0026quot; Return Values   Key Type Returned Description   changed   bool   always   Whether or not the resource has changed    ldap_provider_details   complex   When LDAP provider exists   The LDAP provider details    \u0026nbsp; base_dn   str  success  Specifies the root of the tree in which to search identities.    \u0026nbsp; bind_dn   str  success  Specifies the distinguished name for binding to the LDAP server.    \u0026nbsp; groupnet   str  success  Groupnet identifier.    \u0026nbsp; linked_access_zones   list  success  List of access zones linked to the authentication provider.    \u0026nbsp; name   str  success  Specifies the name of the LDAP provider.    \u0026nbsp; server_uris   str  success  Specifies the server URIs.    \u0026nbsp; status   str  success  Specifies the status of the provider.    Authors  Jennifer John (@johnj9) ansible.team@dell.com   Smart Quota Module Manage Smart Quotas on PowerScale\nSynopsis Manages Smart Quotas on a PowerScale storage system. This includes getting details, modifying, creating and deleting Smart Quotas.\nParameters   Parameter Type Required Default Choices Description   path  str   True     The path on which the quota will be imposed. For system access zone, the path is absolute. For all other access zones, the path is a relative path from the base of the access zone.    quota_type  str   True     user group directory default-user default-group   The type of quota which will be imposed on the path.    user_name  str      The name of the user account for which quota operations will be performed.    group_name  str      The name of the group for which quota operations will be performed.    access_zone  str    system    This option mentions the zone in which the user/group exists. For a non-system access zone, the path relative to the non-system Access Zone's base directory has to be given. For a system access zone, the absolute path has to be given.    provider_type  str    local    local file ldap ads   This option defines the type which is used to authenticate the user/group. If the provider_type is 'ads' then the domain name of the Active Directory Server has to be mentioned in the user_name. The format for the user_name should be 'DOMAIN_NAME\\user_name' or \"DOMAIN_NAME\\\\user_name\". This option acts as a filter for all operations except creation.    quota  dict   True     Specifies Smart Quota parameters.    \u0026nbsp; include_snapshots   bool    False    Whether to include the snapshots in the quota or not.    \u0026nbsp; include_overheads   bool      Whether to include the data protection overheads in the quota or not. If not passed during quota creation then quota will be created excluding the overheads. This parameter is supported for SDK 8.1.1    \u0026nbsp; thresholds_on   str      app_logical_size fs_logical_size physical_size   For SDK 9.0.0 the parameter include_overheads is deprecated and thresholds_on is used.    \u0026nbsp; advisory_limit_size   int      The threshold value after which the advisory notification will be sent.    \u0026nbsp; soft_limit_size   int      Threshold value after which the soft limit exceeded notification will be sent and the soft_grace period will start. Write access will be restricted after the grace period expires. Both soft_grace_period and soft_limit_size are required to modify soft threshold for the quota.    \u0026nbsp; soft_grace_period   int      Grace Period after the soft limit for quota is exceeded. After the grace period, the write access to the quota will be restricted. Both soft_grace_period and soft_limit_size are required to modify soft threshold for the quota.    \u0026nbsp; period_unit   str      days weeks months   Unit of the time period for soft_grace_period. For months the number of days is assumed to be 30 days. This parameter is required only if the soft_grace_period, is specified.    \u0026nbsp; hard_limit_size   int      Threshold value after which a hard limit exceeded notification will be sent. Write access will be restricted after the hard limit is exceeded.    \u0026nbsp; cap_unit   str      GB TB   Unit of storage for the hard, soft and advisory limits. This parameter is required if any of the hard, soft or advisory limits is specified.    state  str   True     absent present   Define whether the Smart Quota should exist or not. present - indicates that the Smart Quota should exist on the system. absent - indicates that the Smart Quota should not exist on the system.    onefs_host  str   True     IP address or FQDN of the PowerScale cluster.    port_no  str    8080    Port number of the PowerScale cluster.It defaults to 8080 if not specified.    verify_ssl  bool   True     True False   boolean variable to specify whether to validate SSL certificate or not. True - indicates that the SSL certificate should be verified. False - indicates that the SSL certificate should not be verified.    api_user  str   True     username of the PowerScale cluster.    api_password  str   True     the password of the PowerScale cluster.    Notes  To perform any operation, path, quota_type and state are mandatory parameters. There can be two quotas for each type per directory, one with snapshots included and one without snapshots included. Once the limits are assigned, then the quota can\u0026rsquo;t be converted to accounting. Only modification to the threshold limits is permitted.  Examples  - name: Create a Quota for a User excluding snapshot. dellemc_powerscale_smartquota: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; path: \u0026quot;/sample_az/sample_fs\u0026quot; quota_type: \u0026quot;user\u0026quot; user_name: \u0026quot;{{user_name}}\u0026quot; access_zone: \u0026quot;sample-zone\u0026quot; provider_type: \u0026quot;local\u0026quot; quota: include_overheads: False advisory_limit_size: \u0026quot;{{advisory_limit_size}}\u0026quot; soft_limit_size: \u0026quot;{{soft_limit_size}}\u0026quot; soft_grace_period: \u0026quot;{{soft_grace_period}}\u0026quot; period_unit: \u0026quot;{{period_unit}}\u0026quot; hard_limit_size: \u0026quot;{{hard_limit_size}}\u0026quot; cap_unit: \u0026quot;{{cap_unit}}\u0026quot; state: \u0026quot;present\u0026quot; - name: Create a Quota for a Directory for accounting includes snapshots and data protection overheads. dellemc_powerscale_smartquota: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; path: \u0026quot;/sample_az/sample_fs\u0026quot; quota_type: \u0026quot;directory\u0026quot; quota: include_snapshots: \u0026quot;True\u0026quot; include_overheads: True state: \u0026quot;present\u0026quot; - name: Create default-user Quota for a Directory with snaps and overheads dellemc_powerscale_smartquota: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; path: \u0026quot;/sample_az/sample_fs\u0026quot; quota_type: \u0026quot;default-user\u0026quot; quota: include_snapshots: \u0026quot;True\u0026quot; include_overheads: True state: \u0026quot;present\u0026quot; - name: Get a Quota Details for a Group dellemc_powerscale_smartquota: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; path: \u0026quot;/sample_az/sample_fs\u0026quot; quota_type: \u0026quot;group\u0026quot; group_name: \u0026quot;{{user_name}}\u0026quot; access_zone: \u0026quot;sample-zone\u0026quot; provider_type: \u0026quot;local\u0026quot; quota: include_snapshots: \u0026quot;True\u0026quot; state: \u0026quot;present\u0026quot; - name: Update Quota for a User dellemc_powerscale_smartquota: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; path: \u0026quot;/sample_az/sample_fs\u0026quot; quota_type: \u0026quot;user\u0026quot; user_name: \u0026quot;{{user_name}}\u0026quot; access_zone: \u0026quot;sample-zone\u0026quot; provider_type: \u0026quot;local\u0026quot; quota: include_snapshots: \u0026quot;True\u0026quot; include_overheads: True advisory_limit_size: \u0026quot;{{new_advisory_limit_size}}\u0026quot; hard_limit_size: \u0026quot;{{new_hard_limit_size}}\u0026quot; cap_unit: \u0026quot;{{cap_unit}}\u0026quot; state: \u0026quot;present\u0026quot; - name: Modify Soft Limit and Grace period of default-user Quota dellemc_powerscale_smartquota: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; path: \u0026quot;/sample_az/sample_fs\u0026quot; quota_type: \u0026quot;default-user\u0026quot; access_zone: \u0026quot;sample-zone\u0026quot; quota: include_snapshots: \u0026quot;True\u0026quot; include_overheads: True soft_limit_size: \u0026quot;{{soft_limit_size}}\u0026quot; cap_unit: \u0026quot;{{cap_unit}}\u0026quot; soft_grace_period: \u0026quot;{{soft_grace_period}}\u0026quot; period_unit: \u0026quot;{{period_unit}}\u0026quot; state: \u0026quot;present\u0026quot; - name: Delete a Quota for a Directory dellemc_powerscale_smartquota: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; path: \u0026quot;/sample_az/sample_fs\u0026quot; quota_type: \u0026quot;directory\u0026quot; quota: include_snapshots: \u0026quot;True\u0026quot; state: \u0026quot;absent\u0026quot; - name: Delete Quota for a default-group dellemc_powerscale_smartquota: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; path: \u0026quot;/sample_az/sample_fs\u0026quot; quota_type: \u0026quot;default-group\u0026quot; quota: include_snapshots: \u0026quot;True\u0026quot; state: \u0026quot;absent\u0026quot; Return Values   Key Type Returned Description   changed   bool   always   Whether or not the resource has changed    quota_details   complex   When Quota exists.   The quota details.    \u0026nbsp; enforced   bool  success  Whether the limits are enforced on Quota or not.    \u0026nbsp; id   str  success  The ID of the Quota.    \u0026nbsp; thresholds   dict  success  Includes information about all the limits imposed on quota. The limits are mentioned in bytes and soft_grace is in seconds.    \u0026nbsp; type   str  success  The type of Quota.    \u0026nbsp; usage   dict  success  The Quota usage.    Authors  P Srinivas Rao (@srinivas-rao5) ansible.team@dell.com   Active Directory Module Manages the ADS authentication provider on PowerScale\nSynopsis Manages the Active Directory authentication provider on the PowerScale storage system. This includes creating, modifying, deleting and retreiving the details of an ADS provider.\nParameters   Parameter Type Required Default Choices Description   domain_name  str      Specifies the domain name of an Active Directory provider. This parameter is mandatory during create.    instance_name  str      Specifies the instance name of Active Directory provider. This is an optional parameter during create, and defaults to the provider name if it is not specified during the create operation. get, modify and delete operations can also be performed through instance_name. It is mutually exclusive with domain_name for get, modify and delete operations.    ads_user  str      Specifies the user name that has permission to join a machine to the given domain. This parameter is mandatory during create.    ads_password  str      Specifies the password used during domain join. This parameter is mandatory during create.    ads_parameters  dict      Specify additional parameters to configure ADS domain.    \u0026nbsp; groupnet   str      Groupnet identifier. This is an optional parameter and defaults to groupnet0.    \u0026nbsp; home_directory_template   str      Specifies the path to the home directory template. This is an optional parameter and defaults to '/ifs/home/%D/%U'.    \u0026nbsp; login_shell   str      /bin/sh /bin/csh /bin/tcsh /bin/zsh /bin/bash /bin/rbash /sbin/nologin   Specifies the login shell path. This is an optional parameter and defaults to '/bin/zsh'.    state  str   True     absent present   The state of the ads provider after the task is performed. present - indicates that the ADS provider should exist on the system. absent - indicates that the ADS provider should not exist on the system.    onefs_host  str   True     IP address or FQDN of the PowerScale cluster.    port_no  str    8080    Port number of the PowerScale cluster.It defaults to 8080 if not specified.    verify_ssl  bool   True     True False   boolean variable to specify whether to validate SSL certificate or not. True - indicates that the SSL certificate should be verified. False - indicates that the SSL certificate should not be verified.    api_user  str   True     username of the PowerScale cluster.    api_password  str   True     the password of the PowerScale cluster.    Examples - name: Add an Active Directory provider dellemc_powerscale_ads: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; domain_name: \u0026quot;ansibleneo.com\u0026quot; instance_name: \u0026quot;ansibleneo.com\u0026quot; ads_user: \u0026quot;administrator\u0026quot; ads_password: \u0026quot;Password123!\u0026quot; ads_parameters: groupnet: \u0026quot;groupnet5\u0026quot; home_directory_template: \u0026quot;/ifs/home/%D/%U\u0026quot; login_shell: \u0026quot;/bin/zsh\u0026quot; state: \u0026quot;present\u0026quot; - name: Modify an Active Directory provider with domain name dellemc_powerscale_ads: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; domain_name: \u0026quot;ansibleneo.com\u0026quot; ads_parameters: home_directory_template: \u0026quot;/ifs/usr_home/%D/%U\u0026quot; login_shell: \u0026quot;/bin/rbash\u0026quot; state: \u0026quot;present\u0026quot; - name: Modify an Active Directory provider with instance name dellemc_powerscale_ads: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; instance_name: \u0026quot;ansibleneo.com\u0026quot; ads_parameters: home_directory_template: \u0026quot;/ifs/usr_home/%D/%U\u0026quot; login_shell: \u0026quot;/bin/rbash\u0026quot; state: \u0026quot;present\u0026quot; - name: Get Active Directory provider details with domain name dellemc_powerscale_ads: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; domain_name: \u0026quot;ansibleneo.com\u0026quot; state: \u0026quot;present\u0026quot; - name: Get Active Directory provider details with instance name dellemc_powerscale_ads: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; instance_name: \u0026quot;ansibleneo.com\u0026quot; state: \u0026quot;present\u0026quot; - name: Delete an Active Directory provider with domain name dellemc_powerscale_ads: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; domain_name: \u0026quot;ansibleneo.com\u0026quot; state: \u0026quot;absent\u0026quot; - name: Delete an Active Directory provider with instance name dellemc_powerscale_ads: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; instance_name: \u0026quot;ansibleneo.com\u0026quot; state: \u0026quot;absent\u0026quot; Return Values   Key Type Returned Description   ads_provider_details   complex   When Active Directory provider exists   The Active Directory provider details    \u0026nbsp; groupnet   str  success  Groupnet identifier.    \u0026nbsp; home_directory_template   str  success  Specifies the path to the home directory template.    \u0026nbsp; id   str  success  Specifies the ID of the Active Directory provider instance.    \u0026nbsp; linked_access_zones   list  success  List of access zones linked to the authentication provider.    \u0026nbsp; login_shell   str  success  Specifies the login shell path.    \u0026nbsp; name   str  success  Specifies the Active Directory provider name.    changed   bool   always   Whether or not the resource has changed    Authors  Jennifer John (@johnj9) ansible.team@dell.com   Snapshot Schedule Module Manage snapshot schedules on Dell EMC PowerScale.\nSynopsis You can perform the following operations Managing snapshot schedules on PowerScale. Create snapshot schedule. Modify snapshot schedule. Get details of snapshot schedule. Delete snapshot schedule.\nParameters   Parameter Type Required Default Choices Description   name  str   True     The name of the snapshot schedule.    path  str      The path on which the snapshot will be taken. This path is relative to the base path of the Access Zone. For 'System' access zone, the path is absolute. This parameter is required at the time of creation. Modification of the path is not allowed through the Ansible module.    access_zone  str    System    The effective path where the snapshot is created will be determined by the base path of the Access Zone and the path provided by the user in the playbook.    new_name  str      The new name of the snapshot schedule.    desired_retention  int      The number of hours/days for which snapshots created by this snapshot schedule should be retained. If retention is not specified at the time of creation, then the snapshots created by the snapshot schedule will be retained forever. Minimum retention duration is 2 hours. For large durations (beyond days/weeks), PowerScale may round off the retention to a somewhat larger value to match a whole number of days/weeks.    retention_unit  str    hours    hours days   The retention unit for the snapshot created by this schedule.    alias  str      The alias will point to the latest snapshot created by the snapshot schedule.    pattern  str      Pattern expanded with strftime to create snapshot names. This parameter is required at the time of creation.    schedule  str      The isidate compatible natural language description of the schedule. It specifies the frequency of the schedule. This parameter is required at the time of creation.    state  str   True     absent present   Defines whether the snapshot schedule should exist or not.    onefs_host  str   True     IP address or FQDN of the PowerScale cluster.    port_no  str    8080    Port number of the PowerScale cluster.It defaults to 8080 if not specified.    verify_ssl  bool   True     True False   boolean variable to specify whether to validate SSL certificate or not. True - indicates that the SSL certificate should be verified. False - indicates that the SSL certificate should not be verified.    api_user  str   True     username of the PowerScale cluster.    api_password  str   True     the password of the PowerScale cluster.    Examples - name: Create snapshot schedule dellemc_powerscale_snapshotschedule: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; name: \u0026quot;{{name}}\u0026quot; access_zone: '{{access_zone}}' path: '{{path1}}' alias: \u0026quot;{{alias1}}\u0026quot; desired_retention: \u0026quot;{{desired_retention1}}\u0026quot; pattern: \u0026quot;{{pattern1}}\u0026quot; schedule: \u0026quot;{{schedule1}}\u0026quot; state: \u0026quot;{{state_present}}\u0026quot; - name: Get details of snapshot schedule dellemc_powerscale_snapshotschedule: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; name: \u0026quot;{{name}}\u0026quot; state: \u0026quot;{{state_present}}\u0026quot; - name: Rename snapshot schedule dellemc_powerscale_snapshotschedule: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; name: \u0026quot;{{name}}\u0026quot; new_name: \u0026quot;{{new_name}}\u0026quot; state: \u0026quot;{{state_present}}\u0026quot; - name: Modify alias of snapshot schedule dellemc_powerscale_snapshotschedule: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; name: \u0026quot;{{new_name}}\u0026quot; alias: \u0026quot;{{alias2}}\u0026quot; state: \u0026quot;{{state_present}}\u0026quot; - name: Modify pattern of snapshot schedule dellemc_powerscale_snapshotschedule: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; name: \u0026quot;{{new_name}}\u0026quot; pattern: \u0026quot;{{pattern2}}\u0026quot; state: \u0026quot;{{state_present}}\u0026quot; - name: Modify schedule of snapshot schedule dellemc_powerscale_snapshotschedule: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; name: \u0026quot;{{new_name}}\u0026quot; schedule: \u0026quot;{{schedule2}}\u0026quot; state: \u0026quot;{{state_present}}\u0026quot; - name: Modify retention of snapshot schedule dellemc_powerscale_snapshotschedule: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; name: \u0026quot;{{new_name}}\u0026quot; desired_retention: 2 retention_unit: \u0026quot;{{retention_unit_days}}\u0026quot; state: \u0026quot;{{state_present}}\u0026quot; - name: Delete snapshot schedule dellemc_powerscale_snapshotschedule: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; name: \u0026quot;{{new_name}}\u0026quot; state: \u0026quot;{{state_absent}}\u0026quot; - name: Delete snapshot schedule - Idempotency dellemc_powerscale_snapshotschedule: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; name: \u0026quot;{{new_name}}\u0026quot; state: \u0026quot;{{state_absent}}\u0026quot; Return Values   Key Type Returned Description   changed   bool   always   Whether or not the resource has changed    snapshot_schedule_details   complex   When snapshot schedule exists   Details of the snapshot schedule including snapshot details    \u0026nbsp; schedules   complex  success  Details of snapshot schedule    \u0026nbsp; \u0026nbsp; duration   int  success  Time in seconds added to creation time to construction expiration time    \u0026nbsp; \u0026nbsp; id   int  success  The system ID given to the schedule    \u0026nbsp; \u0026nbsp; next_run   int  success  Unix Epoch time of next snapshot to be created    \u0026nbsp; \u0026nbsp; next_snapshot   str  success  Formatted name of next snapshot to be created    \u0026nbsp; snapshot_list   complex  success  List of snapshots taken by this schedule    \u0026nbsp; \u0026nbsp; snapshots   complex  success  Details of snapshot    \u0026nbsp; \u0026nbsp; \u0026nbsp; created   int  success  The Unix Epoch time the snapshot was created    \u0026nbsp; \u0026nbsp; \u0026nbsp; expires   int  success  The Unix Epoch time the snapshot will expire and be eligible for automatic deletion.    \u0026nbsp; \u0026nbsp; \u0026nbsp; id   int  success  The system ID given to the snapshot.This is useful for tracking the status of delete pending snapshots    \u0026nbsp; \u0026nbsp; \u0026nbsp; name   str  success  The user or system supplied snapshot name. This will be null for snapshots pending delete    \u0026nbsp; \u0026nbsp; \u0026nbsp; size   int  success  The amount of storage in bytes used to store this snapshot    \u0026nbsp; \u0026nbsp; total   int  success  Total number of items available    Authors  Akash Shendge (@shenda1) ansible.team@dell.com   Users Module Manage users on the PowerScale Storage System\nSynopsis Managing Users on the PowerScale Storage System includes create user, delete user, update user, get user, add role and remove role.\nParameters   Parameter Type Required Default Choices Description   user_name  str      The name of the user account. Required at the time of user creation, for rest of the operations either user_name or user_id is required.    user_id  str      The user_id is auto generated at the time of creation. For all other operations either user_name or user_id is needed.    password  str      The password for the user account. Required only in the creation of a user account. If given in other operations then the password will be ignored.    access_zone  str    system    This option mentions the zone in which a user is created. For creation, access_zone acts as an attribute for the user. For all other operations access_zone acts as a filter.    provider_type  str    local    local file ldap ads   This option defines the type which will be used to authenticate the user. Creation, Modification and Deletion is allowed for local users. Adding and removing roles is allowed for all users of the system access zone. Getting user details is allowed for all users. If the provider_type is 'ads' then domain name of the Active Directory Server has to be mentioned in the user_name. The format for the user_name should be 'DOMAIN_NAME\\user_name' or \"DOMAIN_NAME\\\\user_name\". This option acts as a filter for all operations except creation.    enabled  bool      Enabled is a bool variable which is used to enable or disable the user account.    primary_group  str      A user can be member of multiple groups of which one group has to be assigned as primary group. This group will be used for access checks and can also be used when creating files. A user can be added to the group using Group Name.    home_directory  str      The path specified in this option acts as a home directory for the user. The directory which is given should not be already in use. For a user in a system access zone, the absolute path has to be given. For users in a non-system access zone, the path relative to the non-system Access Zone's base directory has to be given.    shell  str      This option is for choosing the type of shell for the user account.    full_name  str      The additional information about the user can be provided using full_name option.    email  str      The email id of the user can be added using email option. The email id can be set at the time of creation and modified later.    state  str   True     absent present   The state option is used to mention the existence of the user account.    role_name  str      The name of the role which a user will be assigned. User can be added to multiple roles.    role_state  str      present-for-user absent-for-user   The role_state option is used to mention the existence of the role for a particular user. It is required when a role is added or removed from user.    onefs_host  str   True     IP address or FQDN of the PowerScale cluster.    port_no  str    8080    Port number of the PowerScale cluster.It defaults to 8080 if not specified.    verify_ssl  bool   True     True False   boolean variable to specify whether to validate SSL certificate or not. True - indicates that the SSL certificate should be verified. False - indicates that the SSL certificate should not be verified.    api_user  str   True     username of the PowerScale cluster.    api_password  str   True     the password of the PowerScale cluster.    Examples  - name: Get User Details using user name dellemc_powerscale_user: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; port_no: \u0026quot;{{port_no}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; access_zone: \u0026quot;{{access_zone}}\u0026quot; provider_type: \u0026quot;{{provider_type}}\u0026quot; user_name: \u0026quot;{{account_name}}\u0026quot; state: \u0026quot;present\u0026quot; - name: Create User dellemc_powerscale_user: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; port_no: \u0026quot;{{port_no}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; access_zone: \u0026quot;{{access_zone}}\u0026quot; provider_type: \u0026quot;{{provider_type}}\u0026quot; user_name: \u0026quot;{{account_name}}\u0026quot; password: \u0026quot;{{account_password}}\u0026quot; primary_group: \u0026quot;{{primary_group}}\u0026quot; enabled: \u0026quot;{{enabled}}\u0026quot; email: \u0026quot;{{email}}\u0026quot; full_name: \u0026quot;{{full_name}}\u0026quot; home_directory: \u0026quot;{{home_directory}}\u0026quot; shell: \u0026quot;{{shell}}\u0026quot; role_name: \u0026quot;{{role_name}}\u0026quot; role_state: \u0026quot;present-for-user\u0026quot; state: \u0026quot;present\u0026quot; - name: Update User's Full Name and email using user name dellemc_powerscale_user: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; port_no: \u0026quot;{{port_no}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; access_zone: \u0026quot;{{access_zone}}\u0026quot; provider_type: \u0026quot;{{provider_type}}\u0026quot; user_name: \u0026quot;{{account_name}}\u0026quot; email: \u0026quot;{{new_email}}\u0026quot; full_name: \u0026quot;{{full_name}}\u0026quot; state: \u0026quot;present\u0026quot; - name: Disable User Account using User Id dellemc_powerscale_user: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; port_no: \u0026quot;{{port_no}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; access_zone: \u0026quot;{{access_zone}}\u0026quot; provider_type: \u0026quot;{{provider_type}}\u0026quot; user_id: \u0026quot;{{id}}\u0026quot; enabled: \u0026quot;False\u0026quot; state: \u0026quot;present\u0026quot; - name: Add user to a role using Username dellemc_powerscale_user: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; port_no: \u0026quot;{{port_no}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; user_name: \u0026quot;{{account_name}}\u0026quot; provider_type: \u0026quot;{{provider_type}}\u0026quot; role_name: \u0026quot;{{role_name}}\u0026quot; role_state: \u0026quot;present-for-user\u0026quot; state: \u0026quot;present\u0026quot; - name: Remove user from a role using User id dellemc_powerscale_user: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; port_no: \u0026quot;{{port_no}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; user_id: \u0026quot;{{id}}\u0026quot; role_name: \u0026quot;{{role_name}}\u0026quot; role_state: \u0026quot;absent-for-user\u0026quot; state: \u0026quot;present\u0026quot; - name: Delete User using user name dellemc_powerscale_user: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; port_no: \u0026quot;{{port_no}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; access_zone: \u0026quot;{{access_zone}}\u0026quot; provider_type: \u0026quot;{{provider_type}}\u0026quot; user_name: \u0026quot;{{account_name}}\u0026quot; state: \u0026quot;absent\u0026quot; Return Values   Key Type Returned Description   changed   bool   always   Whether or not the resource has changed    user_details   complex   When user exists   Details of the user.    \u0026nbsp; email   str  success  The email of the user.    \u0026nbsp; enabled   bool  success  Enabled is a bool variable which is used to enable or disable the user account.    \u0026nbsp; gecos   str  success  The full description of the user.    \u0026nbsp; gid   complex  success  The details of the primary group for the user.    \u0026nbsp; \u0026nbsp; id   str  success  The id of the primary group.    \u0026nbsp; \u0026nbsp; name   str  success  The name of the primary group.    \u0026nbsp; \u0026nbsp; type   str  success  The resource's type is mentioned.    \u0026nbsp; home_directory   str  success  The directory path acts as the home directory for the user's account.    \u0026nbsp; name   str  success  The name of the user.    \u0026nbsp; provider   str  success  The provider contains the provider type and access zone.    \u0026nbsp; roles   list  success  The list of all the roles of which user is a member.    \u0026nbsp; shell   str  success  The type of shell for the user account.    \u0026nbsp; uid   complex  success  Details about the id and name of the user.    \u0026nbsp; \u0026nbsp; id   str  success  The id of the user.    \u0026nbsp; \u0026nbsp; name   str  success  The name of the user.    \u0026nbsp; \u0026nbsp; type   str  success  The resource's type is mentioned.    Authors  P Srinivas Rao (@srinivas-rao5) ansible.team@dell.com   SMB Module Manage SMB shares on Dell EMC PowerScale. You can perform the following operations\nSynopsis Managing SMB share on PowerScale. Create a new SMB share. Modify an existing SMB share. Get details of an existing SMB share. Delete an existing SMB share.\nParameters   Parameter Type Required Default Choices Description   share_name  str   True     The name of the SMB share.    path  str      The path of the SMB share. This parameter will be mandatory only for the create operation. This is the absolute path for System Access Zone and the relative path for non-System Access Zone.    access_zone  str    System    Access zone which contains this share. If not specified it will be considered as a System Access Zone. For a non-System Access Zone the effective path where the SMB is created will be determined by the base path of the Access Zone and the path provided by the user in the playbook. For a System Access Zone the effective path will be the absolute path provided by the user in the playbook.    new_share_name  str      The new name of the SMB share.    description  str      Description about the SMB share.    permissions  list elements: dict      Specifies permission for specific user, group, or trustee. Valid options read, write, and full. This is a list of dictionaries. Each dictionry entry has 3 mandatory values- a)'user_name'/'group_name'/'wellknown' can have actual name of the trustee like 'user'/'group'/'wellknown' b)'permission' can be 'read'/''write'/'full' c)'permission_type' can be 'allow'/'deny' The fourth entry 'provider_type' is optional (default is 'local') d)'provider_type' can be 'local'/'file'/'ads'/'ldap'    access_based_enumeration  bool      Only enumerates files and folders for the requesting user has access to.    access_based_enumeration_root_only  bool      Access-based enumeration on only the root directory of the share.    browsable  bool      Share is visible in net view and the browse list.    ntfs_acl_support  bool      Support NTFS ACLs on files and directories.    directory_create_mask  str      Directory creates mask bits. Octal value for owner, group, and others vs read, write, and execute    directory_create_mode  str      Directory creates mode bits. Octal value for owner, group, and others vs read, write, and execute    file_create_mask  str      File creates mask bits. Octal value for owner, group, and others vs read, write, and execute    file_create_mode  str      File creates mode bits. Octal value for owner, group, and others vs read, write, and execute    state  str   True     absent present   Defines whether the SMB share should exist or not.    onefs_host  str   True     IP address or FQDN of the PowerScale cluster.    port_no  str    8080    Port number of the PowerScale cluster.It defaults to 8080 if not specified.    verify_ssl  bool   True     True False   boolean variable to specify whether to validate SSL certificate or not. True - indicates that the SSL certificate should be verified. False - indicates that the SSL certificate should not be verified.    api_user  str   True     username of the PowerScale cluster.    api_password  str   True     the password of the PowerScale cluster.    Examples  - name: Create SMB share for non system access zone dellemc_powerscale_smb: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; share_name: \u0026quot;{{name}}\u0026quot; path: \u0026quot;{{path}}\u0026quot; access_zone: \u0026quot;{{non_system_access_zone}}\u0026quot; state: \u0026quot;{{state_present}}\u0026quot; - name: Create SMB share for system access zone dellemc_powerscale_smb: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; share_name: \u0026quot;{{name}}\u0026quot; path: \u0026quot;{{system_az_path}}\u0026quot; description: \u0026quot;{{description}}\u0026quot; permissions: - user_name: \u0026quot;{{system_az_user}}\u0026quot; permission: \u0026quot;full\u0026quot; permission_type: \u0026quot;allow\u0026quot; - group_name: \u0026quot;{{system_az_group}}\u0026quot; permission: \u0026quot;read\u0026quot; permission_type: \u0026quot;allow\u0026quot; - wellknown: \u0026quot;everyone\u0026quot; permission: \u0026quot;read\u0026quot; permission_type: \u0026quot;allow\u0026quot; state: \u0026quot;{{state_present}}\u0026quot; - name: Modify user permission for SMB share dellemc_powerscale_smb: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; share_name: \u0026quot;{{name}}\u0026quot; path: \u0026quot;{{system_az_path}}\u0026quot; description: \u0026quot;{{description}}\u0026quot; permissions: - user_name: \u0026quot;{{system_az_user}}\u0026quot; permission: \u0026quot;full\u0026quot; permission_type: \u0026quot;allow\u0026quot; - group_name: \u0026quot;{{system_az_group}}\u0026quot; permission: \u0026quot;write\u0026quot; permission_type: \u0026quot;allow\u0026quot; - wellknown: \u0026quot;everyone\u0026quot; permission: \u0026quot;write\u0026quot; permission_type: \u0026quot;deny\u0026quot; state: \u0026quot;{{state_present}}\u0026quot; - name: Delete system access zone SMB share dellemc_powerscale_smb: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; share_name: \u0026quot;{{name}}\u0026quot; state: \u0026quot;{{state_absent}}\u0026quot; - name: Get SMB share details dellemc_powerscale_smb: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; share_name: \u0026quot;{{name}}\u0026quot; state: \u0026quot;{{state_present}}\u0026quot; - name: Create SMB share for non system access zone dellemc_powerscale_smb: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; share_name: \u0026quot;{{name}}\u0026quot; path: \u0026quot;{{non_system_az_path}}\u0026quot; access_zone: \u0026quot;{{non_system_access_zone}}\u0026quot; description: \u0026quot;{{description}}\u0026quot; permissions: - user_name: \u0026quot;{{non_system_az_user}}\u0026quot; permission: \u0026quot;full\u0026quot; permission_type: \u0026quot;allow\u0026quot; - group_name: \u0026quot;{{non_system_az_group}}\u0026quot; permission: \u0026quot;read\u0026quot; permission_type: \u0026quot;allow\u0026quot; - wellknown: \u0026quot;everyone\u0026quot; permission: \u0026quot;read\u0026quot; permission_type: \u0026quot;allow\u0026quot; state: \u0026quot;{{state_present}}\u0026quot; - name: Modify description for an non system access zone SMB share dellemc_powerscale_smb: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; share_name: \u0026quot;{{name}}\u0026quot; access_zone: \u0026quot;{{non_system_access_zone}}\u0026quot; description: \u0026quot;new description\u0026quot; state: \u0026quot;{{state_present}}\u0026quot; - name: Modify name for an existing non system access zone SMB share dellemc_powerscale_smb: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; share_name: \u0026quot;{{name}}\u0026quot; new_share_name: \u0026quot;{{new_name}}\u0026quot; access_zone: \u0026quot;{{non_system_access_zone}}\u0026quot; description: \u0026quot;new description\u0026quot; state: \u0026quot;{{state_present}}\u0026quot; Return Values   Key Type Returned Description   changed   bool   always   A boolean indicating if the task had to make changes.    smb_details   complex   always   Details of the SMB Share.    \u0026nbsp; browsable   bool  success  Share is visible in net view and the browse list    \u0026nbsp; description   str  success  Description of the SMB Share    \u0026nbsp; directory_create_mask   int  success  Directory create mask bit for SMB Share    \u0026nbsp; directory_create_mask(octal)   str  success  Directory create mask bit for SMB Share in octal format    \u0026nbsp; directory_create_mode   int  success  Directory create mode bit for SMB Share    \u0026nbsp; directory_create_mode(octal)   str  success  Directory create mode bit for SMB Share in octal format    \u0026nbsp; file_create_mask   int  success  File create mask bit for SMB Share    \u0026nbsp; file_create_mask(octal)   str  success  File create mask bit for SMB Share in octal format    \u0026nbsp; file_create_mode   int  success  File create mode bit for SMB Share    \u0026nbsp; file_create_mode(octal)   str  success  File create mode bit for SMB Share in octal format    \u0026nbsp; id   str  success  Id of the SMB Share    \u0026nbsp; name   str  success  Name of the SMB Share    \u0026nbsp; path   str  success  Path of the SMB Share    \u0026nbsp; permission   list  success  permission on the of the SMB Share for user/group/wellknown    Authors  Arindam Datta (@dattaarindam) ansible.team@dell.com   Snapshot Module Manage snapshots on Dell EMC PowerScale.\nSynopsis You can perform the following operations Managing snapshots on PowerScale. Create a filesystem snapshot. Modify a filesystem snapshot. Get details of a filesystem snapshot. Delete a filesystem snapshot.\nParameters   Parameter Type Required Default Choices Description   snapshot_name  str   True     The name of the snapshot.    path  str      Specifies the filesystem path. It is the absolute path for System access zone and it is relative if using non-System access zone. For example, if your access zone is 'Ansible' and it has a base path '/ifs/ansible' and the path specified is '/user1', then the effective path would be '/ifs/ansible/user1'. If your access zone is System, and you have 'directory1' in the access zone, the path provided should be '/ifs/directory1'.    access_zone  str    System    The effective path where the Snapshot is created will be determined by the base path of the Access Zone and the path provided by the user in the playbook.    new_snapshot_name  str      The new name of the snapshot.    expiration_timestamp  str      The timestamp on which the snapshot will expire (UTC format). Either this or desired retention can be specified, but not both.    desired_retention  str      The number of days for which the snapshot can be retained. Either this or expiration timestamp can be specified, but not both.    retention_unit  str      hours days   The retention unit for the snapshot. The default value is hours.    alias  str      The alias for the snapshot.    state  str   True     absent present   Defines whether the snapshot should exist or not.    onefs_host  str   True     IP address or FQDN of the PowerScale cluster.    port_no  str    8080    Port number of the PowerScale cluster.It defaults to 8080 if not specified.    verify_ssl  bool   True     True False   boolean variable to specify whether to validate SSL certificate or not. True - indicates that the SSL certificate should be verified. False - indicates that the SSL certificate should not be verified.    api_user  str   True     username of the PowerScale cluster.    api_password  str   True     the password of the PowerScale cluster.    Examples  - name: Create a filesystem snapshot on PowerScale dellemc_powerscale_snapshot: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; path: \u0026quot;{{ansible_path}}\u0026quot; access_zone: \u0026quot;{{access_zone}}\u0026quot; snapshot_name: \u0026quot;{{snapshot_name}}\u0026quot; desired_retention: \u0026quot;{{desired_retention}}\u0026quot; retention_unit: \u0026quot;{{retention_unit_days}}\u0026quot; alias: \u0026quot;{{ansible_snap_alias}}\u0026quot; state: \u0026quot;{{present}}\u0026quot; - name: Get details of a filesystem snapshot dellemc_powerscale_snapshot: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; snapshot_name: \u0026quot;{{snapshot_name}}\u0026quot; state: \u0026quot;{{present}}\u0026quot; - name: Modify filesystem snapshot desired retention dellemc_powerscale_snapshot: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; snapshot_name: \u0026quot;{{snapshot_name}}\u0026quot; desired_retention: \u0026quot;{{desired_retention_new}}\u0026quot; retention_unit: \u0026quot;{{retention_unit_days}}\u0026quot; state: \u0026quot;{{present}}\u0026quot; - name: Modify filesystem snapshot expiration timestamp dellemc_powerscale_snapshot: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; snapshot_name: \u0026quot;{{snapshot_name}}\u0026quot; expiration_timestamp: \u0026quot;{{expiration_timestamp_new}}\u0026quot; state: \u0026quot;{{present}}\u0026quot; - name: Modify filesystem snapshot alias dellemc_powerscale_snapshot: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; snapshot_name: \u0026quot;{{snapshot_name}}\u0026quot; alias: \u0026quot;{{ansible_snap_alias_new}}\u0026quot; state: \u0026quot;{{present}}\u0026quot; - name: Delete snapshot alias dellemc_powerscale_snapshot: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; snapshot_name: \u0026quot;{{snapshot_name}}\u0026quot; alias: \u0026quot;\u0026quot; state: \u0026quot;{{present}}\u0026quot; - name: Rename filesystem snapshot dellemc_powerscale_snapshot: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; snapshot_name: \u0026quot;{{snapshot_name}}\u0026quot; new_snapshot_name: \u0026quot;{{new_snapshot_name}}\u0026quot; state: \u0026quot;{{present}}\u0026quot; - name: Delete filesystem snapshot dellemc_powerscale_snapshot: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; snapshot_name: \u0026quot;{{new_snapshot_name}}\u0026quot; state: \u0026quot;{{absent}}\u0026quot; Return Values   Key Type Returned Description   changed   bool   always   Whether or not the resource has changed    snapshot_details   complex   When snapshot exists.   The snapshot details.    \u0026nbsp; alias   str  success  Snapshot alias.    \u0026nbsp; created   int  success  The creation timestamp.    \u0026nbsp; expires   int  success  The expiration timestamp.    \u0026nbsp; has_locks   bool  success  Whether the snapshot has locks.    \u0026nbsp; id   int  success  The snapshot ID.    \u0026nbsp; name   str  success  The name of the snapshot.    \u0026nbsp; path   str  success  The directory path whose snapshot has been taken.    \u0026nbsp; pct_filesystem   float  success  The percentage of filesystem used.    \u0026nbsp; pct_reserve   float  success  The percentage of filesystem reserved.    \u0026nbsp; size   int  success  The snapshot size.    \u0026nbsp; state   str  success  The state of the snapshot.    \u0026nbsp; target_id   int  success  target ID of snapshot whose alias it is.    \u0026nbsp; target_name   str  success  target name of snapshot whose alias it is.    Authors  Prashant Rakheja (@prashant-dell) ansible.team@dell.com   Access Zone Module Manages access zones on PowerScale\nSynopsis Managing access zones on the PowerScale storage system includes getting details of the access zone and modifying the smb and nfs settings.\nParameters   Parameter Type Required Default Choices Description   az_name  str   True     The name of the access zone.    smb  dict      Specifies the default SMB setting parameters of access zone.    \u0026nbsp; create_permissions   str    default acl    default acl Inherit mode bits Use create mask and mode   Sets the default source permissions to apply when a file or directory is created.    \u0026nbsp; directory_create_mask   str      Specifies the UNIX mask bits(octal) that are removed when a directory is created, restricting permissions. Mask bits are applied before mode bits are applied.    \u0026nbsp; directory_create_mode   str      Specifies the UNIX mode bits(octal) that are added when a directory is created, enabling permissions.    \u0026nbsp; file_create_mask   str      Specifies the UNIX mask bits(octal) that are removed when a file is created, restricting permissions.    \u0026nbsp; file_create_mode   str      Specifies the UNIX mode bits(octal) that are added when a file is created, enabling permissions.    \u0026nbsp; access_based_enumeration   bool      Allows access based enumeration only on the files and folders that the requesting user can access.    \u0026nbsp; access_based_enumeration_root_only   bool      Access-based enumeration on only the root directory of the share.    \u0026nbsp; ntfs_acl_support   bool      Allows ACLs to be stored and edited from SMB clients.    \u0026nbsp; oplocks   bool      An oplock allows clients to provide performance improvements by using locally-cached information.    nfs  dict      Specifies the default NFS setting parameters of access zone.    \u0026nbsp; commit_asynchronous   bool      Set to True if NFS commit requests execute asynchronously.    \u0026nbsp; nfsv4_domain   str      Specifies the domain or realm through which users and groups are associated.    \u0026nbsp; nfsv4_allow_numeric_ids   bool      If true, sends owners and groups as UIDs and GIDs when look up fails or if the 'nfsv4_no_name' property is set to 1.    \u0026nbsp; nfsv4_no_domain   bool      If true, sends owners and groups without a domain name.    \u0026nbsp; nfsv4_no_domain_uids   bool      If true, sends UIDs and GIDs without a domain name.    \u0026nbsp; nfsv4_no_names   bool      If true, sends owners and groups as UIDs and GIDs.    provider_state  str      add remove   Defines whether the auth providers should be added or removed from access zone. If auth_providers are given, then provider_state should also be specified. add - indicates that the auth providers should be added to the access zone. remove - indicates that auth providers should be removed from the access zone.    auth_providers  list elements: dict      Specifies the auth providers which needs to be added or removed from access zone. If auth_providers are given, then provider_state should also be specified.    \u0026nbsp; provider_name   str   True     Specifies the auth provider name which needs to be added or removed from access zone.    \u0026nbsp; provider_type   str   True     local file ldap ads   Specifies the auth provider type which needs to be added or removed from access zone.    state  str   True     present absent   Defines whether the access zone should exist or not. present - indicates that the access zone should exist on the system. absent - indicates that the access zone should not exist on the system.    onefs_host  str   True     IP address or FQDN of the PowerScale cluster.    port_no  str    8080    Port number of the PowerScale cluster.It defaults to 8080 if not specified.    verify_ssl  bool   True     True False   boolean variable to specify whether to validate SSL certificate or not. True - indicates that the SSL certificate should be verified. False - indicates that the SSL certificate should not be verified.    api_user  str   True     username of the PowerScale cluster.    api_password  str   True     the password of the PowerScale cluster.    Notes  Creation/Deletion of access zone is not allowed through the Ansible module.  Examples - name: Get details of access zone including smb and nfs settings dellemc_powerscale_accesszone: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; az_name: \u0026quot;{{access zone}}\u0026quot; state: \u0026quot;present\u0026quot; - name: Modify smb settings of access zone dellemc_powerscale_accesszone: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; az_name: \u0026quot;{{access zone}}\u0026quot; state: \u0026quot;present\u0026quot; smb: create_permissions: 'default acl' directory_create_mask: '777' directory_create_mode: '700' file_create_mask: '700' file_create_mode: '100' access_based_enumeration: true access_based_enumeration_root_only: false ntfs_acl_support: true oplocks: true - name: Modify nfs settings of access zone dellemc_powerscale_accesszone: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; az_name: \u0026quot;{{access zone}}\u0026quot; state: \u0026quot;present\u0026quot; nfs: commit_asynchronous: false nfsv4_allow_numeric_ids: false nfsv4_domain: 'localhost' nfsv4_no_domain: false nfsv4_no_domain_uids: false nfsv4_no_names: false - name: Modify smb and nfs settings of access zone dellemc_powerscale_accesszone: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; az_name: \u0026quot;{{access zone}}\u0026quot; state: \u0026quot;present\u0026quot; smb: create_permissions: 'default acl' directory_create_mask: '777' directory_create_mode: '700' file_create_mask: '700' file_create_mode: '100' access_based_enumeration: true access_based_enumeration_root_only: false ntfs_acl_support: true oplocks: true nfs: commit_asynchronous: false nfsv4_allow_numeric_ids: false nfsv4_domain: 'localhost' nfsv4_no_domain: false nfsv4_no_domain_uids: false nfsv4_no_names: false - name: Add Auth Providers to the access zone dellemc_powerscale_accesszone: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; az_name: \u0026quot;{{access zone}}\u0026quot; provider_state: \u0026quot;add\u0026quot; auth_providers: - provider_name: \u0026quot;System\u0026quot; provider_type: \u0026quot;file\u0026quot; - provider_name: \u0026quot;ldap-prashant\u0026quot; provider_type: \u0026quot;ldap\u0026quot; state: \u0026quot;present\u0026quot; - name: Remove Auth Providers from the access zone dellemc_powerscale_accesszone: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; az_name: \u0026quot;{{access zone}}\u0026quot; provider_state: \u0026quot;remove\u0026quot; auth_providers: - provider_name: \u0026quot;System\u0026quot; provider_type: \u0026quot;file\u0026quot; state: \u0026quot;present\u0026quot; Return Values   Key Type Returned Description   access_zone_details   complex   When access zone exists   The access zone details    \u0026nbsp; nfs_settings   complex  success  NFS settings of access zone    \u0026nbsp; \u0026nbsp; export_settings   complex  success  Default values for NFS exports    \u0026nbsp; \u0026nbsp; \u0026nbsp; commit_asynchronous   bool  success  Set to True if NFS commit requests execute asynchronously    \u0026nbsp; \u0026nbsp; zone_settings   complex  success  NFS server settings for this zone    \u0026nbsp; \u0026nbsp; \u0026nbsp; nfsv4_allow_numeric_ids   bool  success  If true, sends owners and groups as UIDs and GIDs when look up fails or if the 'nfsv4_no_name' property is set to 1    \u0026nbsp; \u0026nbsp; \u0026nbsp; nfsv4_domain   str  success  Specifies the domain or realm through which users and groups are associated    \u0026nbsp; \u0026nbsp; \u0026nbsp; nfsv4_no_domain   bool  success  If true, sends owners and groups without a domain name    \u0026nbsp; \u0026nbsp; \u0026nbsp; nfsv4_no_domain_uids   bool  success  If true, sends UIDs and GIDs without a domain name    \u0026nbsp; \u0026nbsp; \u0026nbsp; nfsv4_no_names   bool  success  If true, sends owners and groups as UIDs and GIDs    \u0026nbsp; smb_settings   complex  success  SMB settings of access zone    \u0026nbsp; \u0026nbsp; directory_create_mask(octal)   str  success  UNIX mask bits for directory in octal format    \u0026nbsp; \u0026nbsp; directory_create_mode(octal)   str  success  UNIX mode bits for directory in octal format    \u0026nbsp; \u0026nbsp; file_create_mask(octal)   str  success  UNIX mask bits for file in octal format    \u0026nbsp; \u0026nbsp; file_create_mode(octal)   str  success  UNIX mode bits for file in octal format    access_zone_modify_flag   bool   on success   Whether auth providers linked to access zone has changed    changed   bool   always   Whether or not the resource has changed    nfs_modify_flag   bool   on success   Whether or not the default NFS settings of access zone has changed    smb_modify_flag   bool   on success   Whether or not the default SMB settings of access zone has changed    Authors  Akash Shendge (@shenda1) ansible.team@dell.com   NFS Module Manage NFS exports on a DellEMC PowerScale system\nSynopsis Managing NFS exports on an PowerScale system includes creating NFS export for a directory in an access zone, adding or removing clients, modifying different parameters of the export and deleting export.\nParameters   Parameter Type Required Default Choices Description   path  str   True     Specifies the filesystem path. It is the absolute path for System access zone and it is relative if using non-system access zone. For example, if your access zone is 'Ansible' and it has a base path '/ifs/ansible' and the path specified is '/user1', then the effective path would be '/ifs/ansible/user1'. If your access zone is System, and you have 'directory1' in the access zone, the path provided should be '/ifs/directory1'. The directory on the path must exist - the NFS module will not create the directory. Ansible module will only support exports with a unique path. If there are multiple exports present with the same path, fetching details, creation, modification or deletion of such exports will fail.    access_zone  str    System    Specifies the zone in which the export is valid. Access zone once set cannot be changed.    clients  list elements: str      Specifies the clients to the export. The type of access to clients in this list is determined by the 'read_only' parameter. This list can be changed anytime during the lifetime of the NFS export.    root_clients  list elements: str      Specifies the clients with root access to the export. This list can be changed anytime during the lifetime of the NFS export.    read_only_clients  list elements: str      Specifies the clients with read-only access to the export, even when the export is read/write. This list can be changed anytime during the lifetime of the NFS export.    read_write_clients  list elements: str      Specifies the clients with both read and write access to the export, even when the export is set to read-only. This list can be changed anytime during the lifetime of the NFS export.    read_only  bool      Specifies whether the export is read-only or read-write. This parameter only has effect on the 'clients' list and not the other three types of clients. This setting can be modified any time. If it is not set at the time of creation, the export will be of type read/write.    sub_directories_mountable  bool      True if all directories under the specified paths are mountable. If not set, sub-directories will not be mountable. This setting can be modified any time.    description  str      Optional description field for the NFS export. Can be modified by passing a new value.    state  str   True     absent present   Defines whether the NFS export should exist or not. present indicates that the NFS export should exist in system. absent indicates that the NFS export should not exist in system.    client_state  str      present-in-export absent-in-export   Defines whether the clients can access the NFS export. present-in-export indicates that the clients can access the NFS export. absent-in-export indicates that the client cannot access the NFS export. Required when adding or removing access of clients from the export. While removing clients, only the specified clients will be removed from the export, others will remain as is.    onefs_host  str   True     IP address or FQDN of the PowerScale cluster.    port_no  str    8080    Port number of the PowerScale cluster.It defaults to 8080 if not specified.    verify_ssl  bool   True     True False   boolean variable to specify whether to validate SSL certificate or not. True - indicates that the SSL certificate should be verified. False - indicates that the SSL certificate should not be verified.    api_user  str   True     username of the PowerScale cluster.    api_password  str   True     the password of the PowerScale cluster.    Examples  - name: Create NFS Export dellemc_powerscale_nfs: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; path: \u0026quot;{{path}}\u0026quot; access_zone: \u0026quot;{{access_zone}}\u0026quot; read_only_clients: - \u0026quot;{{client1}}\u0026quot; - \u0026quot;{{client2}}\u0026quot; read_only: True clients: [\u0026quot;{{client3}}\u0026quot;] client_state: 'present-in-export' state: 'present' - name: Get NFS Export dellemc_powerscale_nfs: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; path: \u0026quot;{{path}}\u0026quot; access_zone: \u0026quot;{{access_zone}}\u0026quot; state: 'present' - name: Add a root client dellemc_powerscale_nfs: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; path: \u0026quot;{{path}}\u0026quot; access_zone: \u0026quot;{{access_zone}}\u0026quot; root_clients: - \u0026quot;{{client4}}\u0026quot; client_state: 'present-in-export' state: 'present' - name: Set sub_directories_mountable flag to True dellemc_powerscale_nfs: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; path: \u0026quot;{{path}}\u0026quot; access_zone: \u0026quot;{{access_zone}}\u0026quot; sub_directories_mountable: True state: 'present' - name: Remove a root client dellemc_powerscale_nfs: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; path: \u0026quot;{{path}}\u0026quot; access_zone: \u0026quot;{{access_zone}}\u0026quot; root_clients: - \u0026quot;{{client4}}\u0026quot; client_state: 'absent-in-export' state: 'present' - name: Modify description dellemc_powerscale_nfs: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; path: \u0026quot;{{path}}\u0026quot; access_zone: \u0026quot;{{access_zone}}\u0026quot; description: \u0026quot;new description\u0026quot; state: 'present' - name: Set read_only flag to False dellemc_powerscale_nfs: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; path: \u0026quot;{{path}}\u0026quot; access_zone: \u0026quot;{{access_zone}}\u0026quot; read_only: False state: 'present' - name: Delete NFS Export dellemc_powerscale_nfs: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; path: \u0026quot;{{path}}\u0026quot; access_zone: \u0026quot;{{access_zone}}\u0026quot; state: 'absent' Return Values   Key Type Returned Description   NFS_export_details   complex   always   The updated NFS Export details.    \u0026nbsp; all_dirs   bool  success  sub_directories_mountable flag value.    \u0026nbsp; clients   list  success  The list of clients for the NFS Export.    \u0026nbsp; description   str  success  Description for the export.    \u0026nbsp; id   int  success  The ID of the NFS Export, generated by the array.    \u0026nbsp; paths   list  success  The filesystem path.    \u0026nbsp; read_only   bool  success  Specifies whether the export is read-only or read-write.    \u0026nbsp; read_only_clients   list  success  The list of read only clients for the NFS Export.    \u0026nbsp; read_write_clients   list  success  The list of read write clients for the NFS Export.    \u0026nbsp; root_clients   list  success  The list of root clients for the NFS Export.    \u0026nbsp; zone   str  success  Specifies the zone in which the export is valid.    changed   bool   always   A boolean indicating if the task had to make changes.    Authors  Manisha Agrawal(@agrawm3) ansible.team@dell.com   Groups Module Manage Groups on the PowerScale Storage System\nSynopsis Managing Groups on the PowerScale Storage System includes create group, delete group, get group, add users and remove users.\nParameters   Parameter Type Required Default Choices Description   group_name  str      The name of the group. Required at the time of group creation, for the rest of the operations either group_name or group_id is required.    group_id  str      The group_id is auto generated at the time of creation. For all other operations either group_name or group_id is needed.    access_zone  str    system    This option mentions the zone in which a group is created. For creation, access_zone acts as an attribute for the group. For all other operations access_zone acts as a filter.    provider_type  str    local    local file ldap ads   This option defines the type which will be used to authenticate the group members. Creation, Deletion and Modification is allowed only for local group. Details of groups of all provider types can be fetched. If the provider_type is 'ads' then the domain name of the Active Directory Server has to be mentioned in the group_name. The format for the group_name should be 'DOMAIN_NAME\\group_name' or \"DOMAIN_NAME\\\\group_name\". This option acts as a filter for all operations except creation.    state  str   True     absent present   The state option is used to determine whether the group will exist or not.    users  list elements: dict      Either user_name or user_id is needed to add or remove the user from the group. users can be part of multiple groups.    user_state  str      present-in-group absent-in-group   The user_state option is used to determine whether the users will exist for a particular group or not. It is required when users are added or removed from a group.    onefs_host  str   True     IP address or FQDN of the PowerScale cluster.    port_no  str    8080    Port number of the PowerScale cluster.It defaults to 8080 if not specified.    verify_ssl  bool   True     True False   boolean variable to specify whether to validate SSL certificate or not. True - indicates that the SSL certificate should be verified. False - indicates that the SSL certificate should not be verified.    api_user  str   True     username of the PowerScale cluster.    api_password  str   True     the password of the PowerScale cluster.    Examples  - name: Create a Group dellemc_powerscale_group: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; access_zone: \u0026quot;{{access_zone}}\u0026quot; provider_type: \u0026quot;{{provider_type}}\u0026quot; group_name: \u0026quot;{{group_name}}\u0026quot; state: \u0026quot;present\u0026quot; - name: Create Group with Users dellemc_powerscale_group: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; provider_type: \u0026quot;{{provider_type}}\u0026quot; access_zone: \u0026quot;{{access_zone}}\u0026quot; group_name: \u0026quot;{{group_name}}\u0026quot; users: - user_name: \u0026quot;{{user_name}}\u0026quot; - user_id: \u0026quot;{{user_id}}\u0026quot; - user_name: \u0026quot;{{user_name_2}}\u0026quot; user_state: \u0026quot;present-in-group\u0026quot; state: \u0026quot;present\u0026quot; - name: Get Details of the Group using Group Id dellemc_powerscale_group: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; provider_type: \u0026quot;{{provider_type}}\u0026quot; access_zone: \u0026quot;{{access_zone}}\u0026quot; group_id: \u0026quot;{{group_id}}\u0026quot; state: \u0026quot;present\u0026quot; - name: Delete the Group using Group Name dellemc_powerscale_group: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; provider_type: \u0026quot;{{provider_type}}\u0026quot; access_zone: \u0026quot;{{access_zone}}\u0026quot; group_name: \u0026quot;{{group_name}}\u0026quot; state: \u0026quot;absent\u0026quot; - name: Add Users to a Group dellemc_powerscale_group: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; provider_type: \u0026quot;{{provider_type}}\u0026quot; access_zone: \u0026quot;{{access_zone}}\u0026quot; group_id: \u0026quot;{{group_id}}\u0026quot; users: - user_name: \u0026quot;{{user_name}}\u0026quot; - user_id: \u0026quot;{{user_id}}\u0026quot; - user_name: \u0026quot;{{user_name_2}}\u0026quot; user_state: \u0026quot;present-in-group\u0026quot; state: \u0026quot;present\u0026quot; - name: Remove Users from a Group dellemc_powerscale_group: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; provider_type: \u0026quot;{{provider_type}}\u0026quot; access_zone: \u0026quot;{{access_zone}}\u0026quot; group_id: \u0026quot;{{group_id}}\u0026quot; users: - user_name: \u0026quot;{{user_name_1}}\u0026quot; - user_id: \u0026quot;{{user_id}}\u0026quot; - user_name: \u0026quot;{{user_name_2}}\u0026quot; user_state: \u0026quot;absent-in-group\u0026quot; state: \u0026quot;present\u0026quot; Return Values   Key Type Returned Description   changed   bool   always   Whether or not the resource has changed    group_details   complex   When group exists   Details of the group    \u0026nbsp; gid   complex  success  The details of the primary group for the user.    \u0026nbsp; \u0026nbsp; id   str  success  The id of the group.    \u0026nbsp; \u0026nbsp; name   str  success  The name of the group.    \u0026nbsp; \u0026nbsp; type_of_resource   str  success  The resource's type is mentioned.    \u0026nbsp; members   complex  success  The list of sid's the members of group.    \u0026nbsp; \u0026nbsp; sid   complex  success  The details of the associated resource.    \u0026nbsp; \u0026nbsp; \u0026nbsp; id   str  success  The unique security identifier of the resource.    \u0026nbsp; \u0026nbsp; \u0026nbsp; name   str  success  The name of the resource.    \u0026nbsp; \u0026nbsp; \u0026nbsp; type_of_resource   str  success  The resource's type is mentioned.    \u0026nbsp; name   str  success  The name of the group.    \u0026nbsp; provider   str  success  The provider contains the provider type and access zone.    Authors  P Srinivas Rao (@srinivas-rao5) ansible.team@dell.com   File System Module Manage Filesystems on PowerScale\nSynopsis Managing Filesystems on PowerScale Storage System includes Create a new Filesystem, Delete a Filesystem, Get details of a filesystem, Modify a Filesystem (Quota, ACLs).\nParameters   Parameter Type Required Default Choices Description   path  str   True     This is the directory path. It is the absolute path for System access zone and is relative if using a non-System access zone. For example, if your access zone is 'Ansible' and it has a base path '/ifs/ansible' and the path specified is '/user1', then the effective path would be '/ifs/ansible/user1'. If your access zone is System, and you have 'directory1' in the access zone, the path provided should be '/ifs/directory1'.    access_zone  str    System    The access zone. If no Access Zone is specified, the 'System' access zone would be taken by default.    owner  dict      The owner of the Filesystem. This parameter is required while creating a Filesystem. The following sub-options are supported for Owner. - name(str), - provider_type(str). If you specify owner, then the corresponding name is mandatory. The provider_type is optional and it defaults to 'local'. The supported values for provider_type are 'local', 'file', 'ldap' and 'ads'.    group  dict      The group of the Filesystem. The following sub-options are supported for Group. - name(str), - provider_type(str). If you specify a group, then the corresponding name is mandatory. The provider_type is optional, it defaults to 'local'. The supported values for provider_type are 'local', 'file', 'ldap' and 'ads'.    access_control  str      The ACL value for the directory. At the time of creation, users can either provide input such as 'private_read' , 'private' , 'public_read', 'public_read_write', 'public' or in POSIX format (eg 0700). Modification of ACL is only supported from POSIX to POSIX mode.    recursive  bool    True    Creates intermediate folders recursively when set to true.    quota  dict      The Smart Quota for the filesystem. Only directory Quotas are supported. The following sub-options are supported for Quota. - include_snap_data(boolean), - include_data_protection_overhead(boolean), - thresholds_on(app_logical_size, fs_logical_size, physical_size) - advisory_limit_size(int), - soft_limit_size(int), - hard_limit_size(int), - cap_unit (MB, GB or TB), - quota_state (present or absent). The default grace period is 7 days. Modification of grace period is not supported. The default capacity unit is GB. The parameter include_data_protection_overhead is supported for SDK 8.1.1 For SDK 9.0.0 the parameter include_data_protection_overhead is deprecated and thresholds_on is used.    state  str   True     absent present   Defines whether the Filesystem should exist or not. A filesystem with NFS exports or SMB shares cannot be deleted. Any Quotas on the Filesystem need to be removed before deleting the filesystem.    list_snapshots  bool    False    If set to true, the filesystem's snapshots are returned.    onefs_host  str   True     IP address or FQDN of the PowerScale cluster.    port_no  str    8080    Port number of the PowerScale cluster.It defaults to 8080 if not specified.    verify_ssl  bool   True     True False   boolean variable to specify whether to validate SSL certificate or not. True - indicates that the SSL certificate should be verified. False - indicates that the SSL certificate should not be verified.    api_user  str   True     username of the PowerScale cluster.    api_password  str   True     the password of the PowerScale cluster.    Examples  - name: Create Filesystem with Quota in given access zone dellemc_powerscale_filesystem: onefs_host: \u0026quot;{{powerscalehost}}\u0026quot; port: \u0026quot;{{powerscaleport}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; username: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; path: \u0026quot;{{path}}\u0026quot; access_zone: \u0026quot;{{access_zone}}\u0026quot; owner: name: 'ansible_user' provider_type: 'ldap' group: name: 'ansible_group' provider_type: 'ldap' access_control: \u0026quot;{{access_control}}\u0026quot; quota: include_snap_data: False include_data_protection_overhead: False advisory_limit_size: 2 soft_limit_size: 5 hard_limit_size: 10 cap_unit: \u0026quot;GB\u0026quot; quota_state: \u0026quot;present\u0026quot; recursive: \u0026quot;{{recursive}}\u0026quot; state: \u0026quot;{{state_present}}\u0026quot; - name: Create Filesystem in default (system) access zone, without Quota dellemc_powerscale_filesystem: onefs_host: \u0026quot;{{powerscalehost}}\u0026quot; port: \u0026quot;{{powerscaleport}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; username: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; path: \u0026quot;{{path}}\u0026quot; owner: name: 'ansible_user' provider_type: 'ldap' state: \u0026quot;{{state_present}}\u0026quot; - name: Get filesystem details dellemc_powerscale_filesystem: onefs_host: \u0026quot;{{powerscalehost}}\u0026quot; port: \u0026quot;{{powerscaleport}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; username: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; access_zone: \u0026quot;{{access_zone}}\u0026quot; path: \u0026quot;{{path}}\u0026quot; state: \u0026quot;{{state_present}}\u0026quot; - name: Get filesystem details with snapshots dellemc_powerscale_filesystem: onefs_host: \u0026quot;{{powerscalehost}}\u0026quot; port: \u0026quot;{{powerscaleport}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; username: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; access_zone: \u0026quot;{{access_zone}}\u0026quot; path: \u0026quot;{{path}}\u0026quot; list_snapshots: \u0026quot;{{list_snapshots_true}}\u0026quot; state: \u0026quot;{{state_present}}\u0026quot; - name: Modify Filesystem Hard Quota dellemc_powerscale_filesystem: onefs_host: \u0026quot;{{powerscalehost}}\u0026quot; port: \u0026quot;{{powerscaleport}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; username: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; path: \u0026quot;{{path}}\u0026quot; access_zone: \u0026quot;{{access_zone}}\u0026quot; quota: hard_limit_size: 15 cap_unit: \u0026quot;GB\u0026quot; quota_state: \u0026quot;present\u0026quot; state: \u0026quot;{{state_present}}\u0026quot; - name: Modify Filesystem Owner, Group and ACL dellemc_powerscale_filesystem: onefs_host: \u0026quot;{{powerscalehost}}\u0026quot; port: \u0026quot;{{powerscaleport}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; username: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; path: \u0026quot;{{path}}\u0026quot; access_zone: \u0026quot;{{access_zone}}\u0026quot; owner: name: 'ansible_user' provider_type: 'ldap' group: name: 'ansible_group' provider_type: 'ldap' access_control: \u0026quot;{{new_access_control}}\u0026quot; state: \u0026quot;{{state_present}}\u0026quot; - name: Remove Quota from FS dellemc_powerscale_filesystem: onefs_host: \u0026quot;{{onefs_host}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; api_user: \u0026quot;{{api_user}}\u0026quot; api_password: \u0026quot;{{api_password}}\u0026quot; path: \u0026quot;{{path}}\u0026quot; access_zone: \u0026quot;{{access_zone}}\u0026quot; quota: quota_state: \u0026quot;absent\u0026quot; state: \u0026quot;{{state_present}}\u0026quot; - name: Delete filesystem dellemc_powerscale_filesystem: onefs_host: \u0026quot;{{powerscalehost}}\u0026quot; port: \u0026quot;{{powerscaleport}}\u0026quot; verify_ssl: \u0026quot;{{verify_ssl}}\u0026quot; username: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; access_zone: \u0026quot;{{access_zone}}\u0026quot; path: \u0026quot;{{path}}\u0026quot; state: \u0026quot;{{state_absent}}\u0026quot; Return Values   Key Type Returned Description   changed   bool   always   Whether or not the resource has changed    filesystem_details   complex   When Filesystem exists.   The filesystem details.    \u0026nbsp; attrs   dict  success  The attributes of the filesystem.    filesystem_snapshots   complex   When list_snapshots is True.   The filesystem snapshot details.    \u0026nbsp; created   int  success  The creation timestamp.    \u0026nbsp; expires   int  success  The expiration timestamp.    \u0026nbsp; id   int  success  The id of the snapshot.    \u0026nbsp; name   str  success  The name of the snapshot.    \u0026nbsp; path   str  success  The path of the snapshot.    quota_details   complex   When Quota exists.   The quota details.    \u0026nbsp; enforced   bool  success  Whether the Quota is enforced.    \u0026nbsp; id   str  success  The ID of the Quota.    \u0026nbsp; type   str  success  The type of Quota.    \u0026nbsp; usage   dict  success  The Quota usage.    Authors  Prashant Rakheja (@prashant-dell) ansible.team@dell.com   ","excerpt":"Ansible Modules for Dell EMC PowerScale Product Guide 1.2.0 © 2021 Dell Inc. or its subsidiaries. …","ref":"/ansible-docs/docs/storage/platforms/powerscale/product_guide/","title":"Product Guide"},{"body":"Ansible Modules for Dell EMC PowerStore Product Guide 1.3 © 2021 Dell Inc. or its subsidiaries. All rights reserved. Dell, EMC, and other trademarks are trademarks of Dell Inc. or its subsidiaries. Other trademarks may be trademarks of their respective owners.\n Contents  File System Module  Synopsis Parameters Notes Examples Return Values Authors   Local User Module  Synopsis Parameters Examples Return Values Authors   Volume Module  Synopsis Parameters Notes Examples Return Values Authors   Quota Module  Synopsis Parameters Notes Examples Return Values Authors   Cluster Module  Synopsis Parameters Notes Examples Return Values Authors   Snapshot Rule Module  Synopsis Parameters Examples Return Values Authors   Gatherfacts Module  Synopsis Parameters Notes Examples Return Values Authors   Job Module  Synopsis Parameters Examples Return Values Authors   Replication Session Module  Synopsis Parameters Notes Examples Return Values Authors   Host Group Module  Synopsis Parameters Examples Return Values Authors   NFS Module  Synopsis Parameters Examples Return Values Authors   Role Module  Synopsis Parameters Notes Examples Return Values Authors   Volume Group Module  Synopsis Parameters Notes Examples Return Values Authors   NAS Server Module  Synopsis Parameters Examples Return Values Authors   SMB Share Module  Synopsis Parameters Notes Examples Return Values Authors   Snapshot Module  Synopsis Parameters Examples Return Values Authors   Replication Rule Module  Synopsis Parameters Examples Return Values Authors   Network Module  Synopsis Parameters Notes Examples Return Values Authors   Protection Policy Module  Synopsis Parameters Notes Examples Return Values Authors   Filesystem Snapshot Module  Synopsis Parameters Examples Return Values Authors   Host Module  Synopsis Parameters Notes Examples Return Values Authors     File System Module Filesystem operations on PowerStore Storage system\nSynopsis Supports the provisioning operations on a filesystem such as create, modify, delete and get the details of a filesystem.\nParameters   Parameter Type Required Default Choices Description   filesystem_name  str      Name of the file system. Mutually exclusive with filesystem_id. Mandatory only for create operation.    filesystem_id  str      Unique id of the file system. Mutually exclusive with filesystem_name.    description  str      Description of the file system.    nas_server  str      Name or ID of the NAS Server on which the file system is created. Mandatory parameter whenever filesystem_name is provided, since filesystem names are unique only within a NAS server    size  int      Size that the file system presents to the host or end user. Mandatory only for create operation.    cap_unit  str      GB TB   capacity unit for the size. It defaults to 'GB', if not specified.    access_policy  str      NATIVE UNIX WINDOWS   File system security access policies.    locking_policy  str      ADVISORY MANDATORY   File system locking policies. ADVISORY- No lock checking for NFS and honor SMB lock range only for SMB. MANDATORY- Honor SMB and NFS lock range.    folder_rename_policy  str      ALL_ALLOWED SMB_FORBIDDEN ALL_FORBIDDEN   File system folder rename policies for the file system with multi-protocol access enabled. ALL_ALLOWED - All protocols are allowed to rename directories without any restrictions. SMB_FORBIDDEN - A directory rename from the SMB protocol will be denied if at least one file is opened in the directory or in one of its child directories. All_FORBIDDEN - Any directory rename request will be denied regardless of the protocol used, if at least one file is opened in the directory or in one of its child directories.    smb_properties  dict      Advance settings for SMB. It contains below optional candidate variables    \u0026nbsp; is_smb_sync_writes_enabled   bool   False     Indicates whether the synchronous writes option is enabled on the file system.    \u0026nbsp; is_smb_no_notify_enabled   bool   False     Indicates whether notifications of changes to directory file structure are enabled.    \u0026nbsp; is_smb_op_locks_enabled   bool   False     Indicates whether opportunistic file locking is enabled on the file system.    \u0026nbsp; is_smb_notify_on_access_enabled   bool   False     Indicates whether file access notifications are enabled on the file system.    \u0026nbsp; is_smb_notify_on_write_enabled   bool   False     Indicates whether file write notifications are enabled on the file system    \u0026nbsp; smb_notify_on_change_dir_depth   int   False     Integer variable , determines the lowest directory level to which the enabled notifications apply. minimum value is 1.    protection_policy  str      Name or ID of the protection policy applied to the file system. Specifying \"\" (empty string) removes the existing protection policy from file system.    quota_defaults  dict      Contains the default attributes for a filesystem quota.It contains below optional candidate variables.    \u0026nbsp; grace_period   int   False     Grace period of soft limit.    \u0026nbsp; grace_period_unit   str   False     days weeks months   Unit of the grace period of soft limit.    \u0026nbsp; default_hard_limit   int   False     Default hard limit of user quotas and tree quotas.    \u0026nbsp; default_soft_limit   int   False     Default soft limit of user quotas and tree quotas.    \u0026nbsp; cap_unit   str   False     GB TB   Capacity unit for default hard \u0026 soft limit.    state  str   True     absent present   Define whether the filesystem should exist or not.    array_ip  str   True     IP or FQDN of the PowerStore management system.    verifycert  bool   True     True False   Boolean variable to specify whether to validate SSL certificate or not. True - indicates that the SSL certificate should be verified. Set the environment variable REQUESTS_CA_BUNDLE to the path of the SSL certificate. False - indicates that the SSL certificate should not be verified.    user  str   True     The username of the PowerStore host.    password  str   True     The password of the PowerStore host.    Notes  It is recommended to remove the protection policy before deleting the filesystem.  Examples  - name: Create FileSystem by Name register: result_fs dellemc_powerstore_filesystem: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; filesystem_name: \u0026quot;{{filesystem_name}}\u0026quot; description: \u0026quot;{{description}}\u0026quot; nas_server: \u0026quot;{{nas_server_id}}\u0026quot; size: \u0026quot;5\u0026quot; cap_unit: \u0026quot;GB\u0026quot; access_policy: \u0026quot;UNIX\u0026quot; locking_policy: \u0026quot;MANDATORY\u0026quot; smb_properties: is_smb_no_notify_enabled: True is_smb_notify_on_access_enabled: True quota_defaults: grace_period: 1 grace_period_unit: 'days' default_hard_limit: 3 default_soft_limit: 2 protection_policy: \u0026quot;{{protection_policy_id}}\u0026quot; state: \u0026quot;present\u0026quot; - name: Modify File System by id dellemc_powerstore_filesystem: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; filesystem_id: \u0026quot;{{fs_id}}\u0026quot; folder_rename_policy: \u0026quot;ALL_ALLOWED\u0026quot; smb_properties: is_smb_op_locks_enabled: True smb_notify_on_change_dir_depth: 3 quota_defaults: grace_period: 2 grace_period_unit: 'weeks' default_hard_limit: 2 default_soft_limit: 1 state: \u0026quot;present\u0026quot; - name: Get File System details by id dellemc_powerstore_filesystem: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; filesystem_id: \u0026quot;{{result_fs.filesystem_details.id}}\u0026quot; state: \u0026quot;present\u0026quot; - name: Delete File System by id dellemc_powerstore_filesystem: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; filesystem_id: \u0026quot;{{result_fs.filesystem_details.id}}\u0026quot; state: \u0026quot;absent\u0026quot; Return Values   Key Type Returned Description   changed   bool   always   Whether or not the resource has changed    filesystem_details   complex   When filesystem exists   Details of the filesystem    \u0026nbsp; access_policy   str  success  Access policy about the filesystem.    \u0026nbsp; default_hard_limit   int  success  Default hard limit period for a filesystem quota in byte.    \u0026nbsp; default_soft_limit   int  success  Default soft limit period for a filesystem quota in byte.    \u0026nbsp; description   str  success  The description about the filesystem.    \u0026nbsp; grace_period   int  success  Default grace period for a filesystem quota in second.    \u0026nbsp; id   str  success  The system generated ID given to the filesystem.    \u0026nbsp; is_smb_no_notify_enabled   bool  success  Whether smb notify policy is enabled for a filesystem.    \u0026nbsp; is_smb_notify_on_access_enabled   bool  success  Whether smb on access notify policy is enabled.    \u0026nbsp; is_smb_op_locks_enabled   bool  success  Whether smb op lock is enabled.    \u0026nbsp; locking_policy   str  success  Locking policy about the filesystem.    \u0026nbsp; name   str  success  Name of the filesystem.    \u0026nbsp; nas_server   dict  success  Id and name of the nas server to which the filesystem belongs.    \u0026nbsp; protection_policy   dict  success  Id and name of the protection policy associated with the filesystem.    \u0026nbsp; size_total   int  success  Total size of the filesystem in bytes.    \u0026nbsp; size_used   int  success  Used size of the filesystem in bytes.    \u0026nbsp; snapshots   list  success  Id and name of the snapshots of a filesystem.    \u0026nbsp; total_size_with_unit   str  success  Total size of the filesystem with appropriate unit.    \u0026nbsp; used_size_with_unit   str  success  Used size of the filesystem with appropriate unit.    Authors  Arindam Datta (@dattaarindam) ansible.team@dell.com   Local User Module Local user operations on PowerStore Storage System\nSynopsis Supports the provisioning operations on a Local user such as create, modify, delete and get the details of a local user.\nParameters   Parameter Type Required Default Choices Description   user_name  str      Name of the local user account. Mutually exclusive with user_id. Mandatory only for create operation.    user_id  str      Unique identifier of the local user account. Mutually exclusive with user_name.    user_password  str      Password for the new local user account to be created. Mandatory only for create operation.    new_password  str      New password for the existing local user account.    role_name  str      The name of the role to which the local user account will be mapped. It is mutually exclusive with role_id.    role_id  int      The unique identifier of the role to which the local user account will be mapped. It is mutually exclusive with role_name.    is_locked  bool      Whether the user account is locked or not. Defaults to false at creation time.    state  str   True     absent present   Define whether the local user should exist or not.    array_ip  str   True     IP or FQDN of the PowerStore management system.    verifycert  bool   True     True False   Boolean variable to specify whether to validate SSL certificate or not. True - indicates that the SSL certificate should be verified. Set the environment variable REQUESTS_CA_BUNDLE to the path of the SSL certificate. False - indicates that the SSL certificate should not be verified.    user  str   True     The username of the PowerStore host.    password  str   True     The password of the PowerStore host.    Examples - name: create local user dellemc_powerstore_local_user: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; user_name: \u0026quot;ansible_user_1\u0026quot; user_password: \u0026quot;Password123#\u0026quot; role_name: \u0026quot;role_1\u0026quot; is_locked: False state: \u0026quot;present\u0026quot; - name: get the details local user with user id dellemc_powerstore_local_user: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; user_id: \u0026quot;{{user_id}}\u0026quot; state: \u0026quot;present\u0026quot; - name: get the details local user with user name dellemc_powerstore_local_user: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; user_name: \u0026quot;ansible_user_1\u0026quot; state: \u0026quot;present\u0026quot; - name: Modify attributes of local user dellemc_powerstore_local_user: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; user_name: \u0026quot;ansible_user_1\u0026quot; user_password: \u0026quot;Password123#\u0026quot; new_password: \u0026quot;Ansible123#\u0026quot; role_id: 4 is_locked: True state: \u0026quot;present\u0026quot; - name: delete local user dellemc_powerstore_local_user: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; user_name: \u0026quot;ansible_user_1\u0026quot; state: \u0026quot;absent\u0026quot; Return Values   Key Type Returned Description   changed   bool   always   Whether or not the resource has changed    local_user_details   complex   When local user exists   Details of the local user    \u0026nbsp; id   str  success  The system generated ID given to the local user.    \u0026nbsp; is_built_in   bool  success  Whether the user account is built-in or not.    \u0026nbsp; is_default_password   bool  success  Whether the user account has a default password or not. Only applies to default user accounts    \u0026nbsp; is_locked   bool  success  Whether the user account is locked or not. Defaults to false at creation time.    \u0026nbsp; name   str  success  Name of the local user.    \u0026nbsp; role_id   str  success  Unique identifier of the role local user account is mapped to.    \u0026nbsp; role_name   str  success  Name of the role to which local user account is mapped.    Authors  Arindam Datta (@dattaarindam) ansible.team@dell.com   Volume Module Manage volumes on a PowerStore storage system.\nSynopsis Managing volume on PowerStore storage system includes create volume, get details of volume, modify name, size, description, protection policy, performance policy, map or unmap volume to host/host group, and delete volume.\nParameters   Parameter Type Required Default Choices Description   vol_name  str      Unique name of the volume. This value must contain 128 or fewer printable unicode characters. Required when creating a volume. All other functionalities on a volume are supported using volume name or ID.    vg_name  str      The name of the volume group. A volume can optionally be assigned to a volume group at the time of creation. Use the Volume Group Module for modification of the assignment.    vol_id  str      The 36 character long ID of the volume, automatically generated when a volume is created. Cannot be used while creating a volume. All other functionalities on a volume are supported using volume name or ID.    size  float      Size of the volume. Minimum volume size is 1MB. Maximum volume size is 256TB. Size must be a multiple of 8192. Required in case of create and expand volume.    cap_unit  str      MB GB TB   Volume size unit. Used to signify unit of the size provided for creation and expansion of volume. It defaults to 'GB', if not specified.    new_name  str      The new volume name for the volume, used in case of rename functionality.    description  str      Description for the volume. Optional parameter when creating a volume. To modify, pass the new value in description field.    protection_policy  str      The protection_policy of the volume. To represent policy, both name or ID can be used interchangably. The module will detect both. A volume can be assigned a protection policy at the time of creation of volume or later as well. The policy can also be changed for a given volume by simply passing the new value. The policy can be removed by passing an empty string. Check examples for more clarity.    performance_policy  str      high medium low   The performance_policy for the volume. A volume can be assigned a performance policy at the time of creation of the volume, or later as well. The policy can also be changed for a given volume, by simply passing the new value. Check examples for more clarity. If not given, performance policy will be 'medium'.    host  str      Host to be mapped/unmapped to a volume. If not specified, an unmapped volume is created. Only one of the host or host group can be supplied in one call. To represent host, both name or ID can be used interchangeably. The module will detect both.    hostgroup  str      Hostgroup to be mapped/unmapped to a volume. If not specified, an unmapped volume is created. Only one of the host or host group can be mapped in one call. To represent a hostgroup, both name or ID can be used interchangeably. The module will detect both.    mapping_state  str      mapped unmapped   Define whether the volume should be mapped to a host or hostgroup. mapped - indicates that the volume should be mapped to the host or host group. unmapped - indicates that the volume should not be mapped to the host or host group. Only one of a host or host group can be supplied in one call.    hlu  int      Logical unit number for the host/host group volume access. Optional parameter when mapping a volume to host/host group. HLU modification is not supported.    state  str   True     absent present   Define whether the volume should exist or not. present - indicates that the volume should exist on the system. absent - indicates that the volume should not exist on the system.    array_ip  str   True     IP or FQDN of the PowerStore management system.    verifycert  bool   True     True False   Boolean variable to specify whether to validate SSL certificate or not. True - indicates that the SSL certificate should be verified. Set the environment variable REQUESTS_CA_BUNDLE to the path of the SSL certificate. False - indicates that the SSL certificate should not be verified.    user  str   True     The username of the PowerStore host.    password  str   True     The password of the PowerStore host.    Notes  To create a new volume, vol_name and size is required. cap_unit, description, vg_name, performance_policy, and protection_policy are optional. new_name should not be provided when creating a new volume. size is a required parameter for expand volume. Clones or Snapshots of a deleted production volume or a clone are not deleted. A volume that is attached to a host/host group, or that is part of a volume group cannot be deleted.  Examples - name: Create stand-alone volume dellemc_powerstore_volume: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; vol_name: \u0026quot;{{vol_name}}\u0026quot; size: 1 cap_unit: \u0026quot;{{cap_unit}}\u0026quot; state: 'present' - name: Create stand-alone volume with performance and protection policy dellemc_powerstore_volume: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; vol_name: \u0026quot;{{vol_name}}\u0026quot; size: 5 cap_unit: \u0026quot;{{cap_unit}}\u0026quot; state: 'present' description: 'Description' performance_policy: 'low' protection_policy: 'protection_policy_name' - name: Create volume and assign to a volume group dellemc_powerstore_volume: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; vol_name: \u0026quot;{{vol_name}}\u0026quot; vg_name: \u0026quot;{{vg_name}}\u0026quot; size: 1 cap_unit: \u0026quot;{{cap_unit}}\u0026quot; state: 'present' - name: Create volume and map it to a host dellemc_powerstore_volume: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; vol_name: \u0026quot;{{vol_name}}\u0026quot; size: 1 cap_unit: \u0026quot;{{cap_unit}}\u0026quot; mapping_state: 'mapped' host: \u0026quot;{{host_name}}\u0026quot; state: 'present' - name: Get volume details using ID dellemc_powerstore_volume: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; vol_id: \u0026quot;{{result.volume_details.id}}\u0026quot; state: \u0026quot;present\u0026quot; - name: Get volume details using name dellemc_powerstore_volume: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; vol_name: \u0026quot;{{vol_name}}\u0026quot; state: \u0026quot;present\u0026quot; - name: Modify volume size, name, description and performance policy dellemc_powerstore_volume: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; new_name: \u0026quot;{{new_name}}\u0026quot; vol_name: \u0026quot;{{vol_name}}\u0026quot; state: \u0026quot;present\u0026quot; size: 2 performance_policy: 'high' description: 'new description' - name: Remove protection policy from Volume dellemc_powerstore_volume: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; new_name: \u0026quot;{{new_name}}\u0026quot; vol_name: \u0026quot;{{vol_name}}\u0026quot; state: \u0026quot;present\u0026quot; protection_policy: \u0026quot;\u0026quot; - name: Map volume to a host with HLU dellemc_powerstore_volume: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; vol_name: \u0026quot;{{vol_name}}\u0026quot; state: 'present' mapping_state: 'mapped' host: 'host1' hlu: 12 - name: Map volume to a host without HLU dellemc_powerstore_volume: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; vol_name: \u0026quot;{{vol_name}}\u0026quot; state: 'present' mapping_state: 'mapped' host: 'host2' - name: Delete volume dellemc_powerstore_volume: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; vol_id: \u0026quot;{{result.volume_details.id}}\u0026quot; state: \u0026quot;absent\u0026quot; Return Values   Key Type Returned Description   changed   bool   always   Whether or not the resource has changed.    volume_details   complex   When volume exists   Details of the volume.    \u0026nbsp; description   str  success  description about the volume.    \u0026nbsp; hlu_details   complex  success  HLU details for mapped host/host group.    \u0026nbsp; \u0026nbsp; host_group_id   str  success  The host group ID mapped to the volume.    \u0026nbsp; \u0026nbsp; host_id   str  success  The host ID mapped to the volume.    \u0026nbsp; \u0026nbsp; id   str  success  The HLU ID.    \u0026nbsp; \u0026nbsp; logical_unit_number   int  success  Logical unit number for the host/host group volume access.    \u0026nbsp; host   complex  success  Hosts details mapped to the volume.    \u0026nbsp; \u0026nbsp; id   str  success  The host ID mapped to the volume.    \u0026nbsp; \u0026nbsp; name   str  success  Name of the Host mapped to the volume.    \u0026nbsp; host_group   complex  success  Host groups details mapped to the volume.    \u0026nbsp; \u0026nbsp; id   str  success  The host group ID mapped to the volume.    \u0026nbsp; \u0026nbsp; name   str  success  Name of the Host group mapped to the volume.    \u0026nbsp; id   str  success  The system generated ID given to the volume.    \u0026nbsp; name   str  success  Name of the volume.    \u0026nbsp; performance_policy_id   str  success  The performance policy for the volume.    \u0026nbsp; protection_policy_id   str  success  The protection policy of the volume.    \u0026nbsp; size   int  success  Size of the volume.    \u0026nbsp; volume_groups   complex  success  The volume group details of the volume.    \u0026nbsp; \u0026nbsp; id   str  success  The system generated ID given to the volume group.    \u0026nbsp; \u0026nbsp; name   str  success  Name of the volume group.    \u0026nbsp; wwn   str  success  The world wide name of the volume.    Authors  Ambuj Dubey (@AmbujDube) ansible.team@dell.com Manisha Agrawal (@agrawm3) ansible.team@dell.com   Quota Module Manage Tree Quotas and User Quotas on PowerStore.\nSynopsis Managing Quotas on Powerstore storage system includes getting details, modifying, creating and deleting Quotas.\nParameters   Parameter Type Required Default Choices Description   path  str      The path on which the quota will be imposed. Path is relative to the root of the filesystem. For user quota, if path is not specified, quota will be created at the root of the filesystem.    quota_type  str      user tree   The type of quota which will be imposed.    quota_id  str      Id of the user/tree quota. If quota_id is mentioned, then path/nas_server/file_system/quota_type is not required.    filesystem  str      The ID/Name of the filesystem for which the Tree/User Quota will be created. If filesystem name is specified, then nas_server is required to uniquely identify the filesystem.    nas_server  str      The NAS server. This could be the name or ID of the NAS server.    description  str      Additional information that can be mentioned for a Tree Quota. Description parameter can only be used when quota_type is 'tree'    unix_name  str      The name of the unix user account for which quota operations will be performed. Any one among uid/unix_name/windows_name/windows_sid is required when quota_type is 'user'.    windows_name  str      The name of the Windows User for which quota operations will be performed. The name should be mentioned along with Domain Name as 'DOMAIN_NAME\\user_name' or as \"DOMAIN_NAME\\\\user_name\". Any one among uid/unix_name/windows_name/windows_sid is required when quota_type is 'user'.    uid  int      The ID of the unix user account for which quota operations will be performed. Any one among uid/unix_name/windows_name/windows_sid is required when quota_type is 'user'.    windows_sid  str      The SID of the Windows User account for which quota operations will be performed. Any one among uid/unix_name/windows_name/windows_sid is required when quota_type is 'user'.    quota  dict      Specifies Quota parameters.    \u0026nbsp; soft_limit   int      Soft limit of the User/Tree quota. No Soft limit when set to 0.    \u0026nbsp; hard_limit   int      Hard limit of the user quota. No hard limit when set to 0.    \u0026nbsp; cap_unit   str    GB    GB TB   Unit of storage for the hard and soft limits. This parameter is required if limit is specified.    state  str   True     absent present   Define whether the Quota should exist or not. present indicates that the Quota should exist on the system. absent indicates that the Quota should not exist on the system.    array_ip  str   True     IP or FQDN of the PowerStore management system.    verifycert  bool   True     True False   Boolean variable to specify whether to validate SSL certificate or not. True - indicates that the SSL certificate should be verified. Set the environment variable REQUESTS_CA_BUNDLE to the path of the SSL certificate. False - indicates that the SSL certificate should not be verified.    user  str   True     The username of the PowerStore host.    password  str   True     The password of the PowerStore host.    Notes  Tree quota can\u0026rsquo;t be created at the root of the filesystem. When the ID of the filesystem is passed then nas_server is not required. If passed, then filesystem should exist for the nas_server, else the task will fail. If a primary directory of the current directory or a subordinate directory of the path is having a Tree Quota configured, then the quota for that path can\u0026rsquo;t be created. Hierarchical tree quotas are not allowed. When the first quota is created for a directory/user in a filesystem then the quotas will be enabled for that filesystem automatically. If a user quota is to be created on a tree quota, then the user quotas will be enabled automatically in a tree quota. Delete User Quota operation is not supported.  Examples  - name: Create a Quota for a User using unix name dellemc_powerstore_quota: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verify_cert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; quota_type: \u0026quot;user\u0026quot; unix_name: \u0026quot;{{unix_name}}\u0026quot; filesystem: \u0026quot;sample_fs\u0026quot; nas_server: \u0026quot;{{nas_server_id}}\u0026quot; quota: soft_limit: 5 hard_limit: 10 cap_unit: \u0026quot;TB\u0026quot; state: \u0026quot;present\u0026quot; - name: Create a Tree Quota dellemc_powerstore_quota: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verify_cert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; quota_type: \u0026quot;tree\u0026quot; path: \u0026quot;/home\u0026quot; filesystem: \u0026quot;sample_fs\u0026quot; nas_server: \u0026quot;sample_nas_server\u0026quot; quota: soft_limit: 5 hard_limit: 10 cap_unit: \u0026quot;TB\u0026quot; state: \u0026quot;present\u0026quot; - name: Modify attributes for Tree Quota dellemc_powerstore_quota: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verify_cert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; quota_id: \u0026quot;{{quota_id}}\u0026quot; quota: soft_limit: 10 hard_limit: 15 cap_unit: \u0026quot;TB\u0026quot; state: \u0026quot;present\u0026quot; - name: Get details of User Quota dellemc_powerstore_quota: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verify_cert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; quota_type: \u0026quot;user\u0026quot; uid: 100 path: \u0026quot;/home\u0026quot; filesystem: \u0026quot;{{filesystem_id}}\u0026quot; state: \u0026quot;present\u0026quot; - name: Get details of Tree Quota dellemc_powerstore_quota: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verify_cert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; quota_id: \u0026quot;{{quota_id}}\u0026quot; state: \u0026quot;present\u0026quot; - name: Delete a Tree Quota dellemc_powerstore_quota: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verify_cert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; quota_type: \u0026quot;tree\u0026quot; path: \u0026quot;/home\u0026quot; filesystem: \u0026quot;sample_fs\u0026quot; nas_server: \u0026quot;sample_nas_server\u0026quot; state: \u0026quot;absent\u0026quot; Return Values   Key Type Returned Description   changed   bool   always   Whether or not the resource has changed    quota_details   complex   When Quota exists.   The quota details.    \u0026nbsp; description   str  success  Additional information about the tree quota. Only applicable for Tree Quotas.    \u0026nbsp; file_system   complex  success  Includes ID and Name of filesystem and nas server for which smb share exists.    \u0026nbsp; \u0026nbsp; filesystem_type   str  success  Type of filesystem.    \u0026nbsp; \u0026nbsp; id   str  success  ID of filesystem.    \u0026nbsp; \u0026nbsp; name   str  success  Name of filesystem.    \u0026nbsp; \u0026nbsp; nas_server   dict  success  nas_server of filesystem.    \u0026nbsp; hard_limit(cap_unit)   int  success  Value of the Hard Limit imposed on the quota.    \u0026nbsp; id   str  success  The ID of the Quota.    \u0026nbsp; remaining_grace_period   int  success  The time period remaining after which the grace period will expire.    \u0026nbsp; size_used   int  success  Size currently consumed by Tree/User on the filesystem.    \u0026nbsp; soft_limit(cap_unit)   int  success  Value of the Soft Limit imposed on the quota.    \u0026nbsp; state   str  success  State of the user quota or tree quota record period. OK means No quota limits are exceeded. Soft_Exceeded means Soft limit is exceeded, and grace period is not expired. Soft_Exceeded_And_Expired means Soft limit is exceeded, and grace period is expired. Hard_Reached means Hard limit is reached.    \u0026nbsp; state_l10n   str  success  Localized message string corresponding to state.    \u0026nbsp; tree_quota_for_user_quota   complex  success  Additional Information of Tree Quota limits on which user quota exists. Only applicable for User Quotas.    \u0026nbsp; \u0026nbsp; description   str  success  Description of Tree Quota for user quota.    \u0026nbsp; \u0026nbsp; hard_limit(cap_unit)   int  success  Value of the Hard Limit imposed on the quota.    \u0026nbsp; \u0026nbsp; path   str  success  The path on which the quota will be imposed.    \u0026nbsp; tree_quota_id   str  success  ID of the Tree Quota on which the specific User Quota exists. Only applicable for user quotas.    \u0026nbsp; uid   int  success  The ID of the unix host for which user quota exists. Only applicable for user quotas.    \u0026nbsp; unix_name   str  success  The Name of the unix host for which user quota exists. Only applicable for user quotas.    \u0026nbsp; windows_name   str  success  The Name of the Windows host for which user quota exists. Only applicable for user quotas.    \u0026nbsp; windows_sid   str  success  The SID of the windows host for which user quota exists. Only applicable for user quotas.    Authors  P Srinivas Rao (@srinivas-rao5) ansible.team@dell.com   Cluster Module Manage cluster related opeartions on PowerStore.\nSynopsis Managing cluster on PowerStore storage system includes getting details and modifying cluster configuration parameters.\nParameters   Parameter Type Required Default Choices Description   cluster_name  str      The Name of cluster.    chap_mode  str      Disabled Single Mutual   The mode that describes or sets the iSCSI CHAP mode for the cluster.    cluster_id  str      Id of the cluster.    new_name  str      The new name for the cluster.    service_password  str      The password for the service user.    appliance_id  str      ID of the appliance. appliance_id and appliance_name are mutually exclusive. is_ssh_enabled has to be passed along with appliance_id.    appliance_name  str      Name of the appliance. appliance_id and appliance_name are mutually exclusive. is_ssh_enabled has to be passed along with appliance_name.    is_ssh_enabled  bool      Whether SSH access is enabled for the cluster. Either appliance_id or appliance_name is to be passed along with is_ssh_enabled.    physical_mtu  int      MTU for ethernet ports in the cluster. The MTU can be set between 1500 to 9000.    state  str   True     absent present   Define whether the cluster should exist or not. present indicates that the cluster should exist on the system. absent indicates that the cluster should not exist on the system.    array_ip  str   True     IP or FQDN of the PowerStore management system.    verifycert  bool   True     True False   Boolean variable to specify whether to validate SSL certificate or not. True - indicates that the SSL certificate should be verified. Set the environment variable REQUESTS_CA_BUNDLE to the path of the SSL certificate. False - indicates that the SSL certificate should not be verified.    user  str   True     The username of the PowerStore host.    password  str   True     The password of the PowerStore host.    Notes  Creation and deletion of cluster is not supported by ansible modules.  Examples - name: get the details of cluster using id dellemc_powerstore_cluster: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; cluster_id: \u0026quot;0\u0026quot; state: \u0026quot;present\u0026quot; - name: Modify details of cluster using the name dellemc_powerstore_cluster: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; cluster_name: \u0026quot;RT-D1320\u0026quot; appliance_id: \u0026quot;A1\u0026quot; is_ssh_enabled: True service_password: \u0026quot;S@mple_password\u0026quot; chap_mode: \u0026quot;Disabled\u0026quot; new_name: \u0026quot;new_RT-D1320\u0026quot; state: \u0026quot;present\u0026quot; Return Values   Key Type Returned Description   changed   bool   always   Whether or not the resource has changed    cluster_details   complex   When Cluster exists.   The cluster details.    \u0026nbsp; appliance_count   int  success  Number of appliances configured in this cluster.    \u0026nbsp; appliance_details   complex  success  Name and Id of the appliance for which is_ssh_enabled parameter is used.    \u0026nbsp; \u0026nbsp; id   str  success  Id of the appliance.    \u0026nbsp; \u0026nbsp; name   str  success  Name of the appliance.    \u0026nbsp; compatibility_level   int  success  The behavioral version of the software version API, It is used to ensure the compatibility across potentially different software versions.    \u0026nbsp; global_id   str  success  The global unique identifier of the cluster.    \u0026nbsp; id   str  success  The ID of the cluster.    \u0026nbsp; is_encryption_enabled   bool  success  Whether or not Data at Rest Encryption is enabled on the cluster.    \u0026nbsp; is_ssh_enabled   bool  success  Whether or not the ssh is enabled.    \u0026nbsp; management_address   str  success  The floating management IP address for the cluster in IPv4 or IPv6 format.    \u0026nbsp; master_appliance_id   str  success  The unique identifier of the appliance acting as primary. This parameter is deprecated in version 2.0.0.0.    \u0026nbsp; name   str  success  Name of the cluster.    \u0026nbsp; physical_mtu   int  success  MTU for the cluster.    \u0026nbsp; primary_appliance_id   str  success  The unique identifier of the appliance acting as primary. This parameter was added in version 2.0.0.0.    \u0026nbsp; service_config_details   complex  success  Details of the service config for the entered appliance.    \u0026nbsp; \u0026nbsp; appliance_id   str  success  Id of the appliance for which the service configuration exists.    \u0026nbsp; \u0026nbsp; id   str  success  Id of the service configuration.    \u0026nbsp; \u0026nbsp; is_ssh_enabled   bool  success  Whether the ssh is enabled for the appliance or not.    \u0026nbsp; service_user_details   complex  success  Details of the service user for which the password can be updated.    \u0026nbsp; \u0026nbsp; id   str  success  Id of the service user.    \u0026nbsp; \u0026nbsp; is_built_in   bool  success  Whether the service user is built in or not.    \u0026nbsp; \u0026nbsp; is_default_password   bool  success  Whether the service user has default password or not.    \u0026nbsp; \u0026nbsp; name   str  success  Name of the service user.    \u0026nbsp; state   str  success  Possible cluster states.    \u0026nbsp; storage_discovery_address   str  success  The floating storage discovery IP address for the cluster in IPv4 or IPv6 format.    \u0026nbsp; system_time   str  success  Current clock time for the system. System time and all the system reported times are in UTC (GMT+0:00) format.    Authors  P Srinivas Rao (@srinivas-rao5) ansible.team@dell.com   Snapshot Rule Module SnapshotRule operations on a PowerStore storage system.\nSynopsis Performs all snapshot rule operations on PowerStore Storage System. This modules supports get details of an existing snapshot rule, create new Snapshot Rule with Interval, create new Snapshot Rule with specific time and days_of_week with all supported parameters. Modify Snapshot Rule with supported parameters. Delete a specific Snapshot Rule.\nParameters   Parameter Type Required Default Choices Description   name  str      String variable. Indicates the name of the Snapshot rule.    snapshotrule_id  str      String variable. Indicates the ID of the Snapshot rule.    new_name  str      String variable. Indicates the new name of the Snapshot rule. Used for renaming operation    days_of_week  list elements: str      Monday Tuesday Wednesday Thursday Friday Saturday Sunday   List of strings to specify days of the week on which the Snapshot rule. should be applied. Must be applied for Snapshot rules where the 'time_of_day' parameter is set. Optional for the Snapshot rule created with an interval. When 'days_of_week' is not specified for a new Snapshot rule, the rule is applied on every day of the week.    interval  str      Five_Minutes Fifteen_Minutes Thirty_Minutes One_Hour Two_Hours Three_Hours Four_Hours Six_Hours Eight_Hours Twelve_Hours One_Day   String variable. Indicates the interval between Snapshots. When creating a Snapshot rule, specify either \"interval\" or \"time_of_day\", but not both.    desired_retention  int      Integer variable. Indicates the desired Snapshot retention period. It is required when creating a new Snapshot rule.    time_of_day  str      String variable. Indicates the time of the day to take a daily Snapshot, with the format \"hh:mm\" in 24 hour time format When creating a Snapshot rule, specify either \"interval\"or \"time_of_day\" but not both.    delete_snaps  bool      Boolean variable to specify whether all Snapshots previously created by this rule should also be deleted when this rule is removed. True specifies to delete all previously created Snapshots by this rule while deleting this rule. False specifies to retain all previously created Snapshots while deleting this rule    state  str   True     present absent   String variable indicates the state of Snapshot rule. For \"Delete\" operation only, it should be set to \"absent\". For all Create, Modify or Get details operation it should be set to \"present\".    array_ip  str   True     IP or FQDN of the PowerStore management system.    verifycert  bool   True     True False   Boolean variable to specify whether to validate SSL certificate or not. True - indicates that the SSL certificate should be verified. Set the environment variable REQUESTS_CA_BUNDLE to the path of the SSL certificate. False - indicates that the SSL certificate should not be verified.    user  str   True     The username of the PowerStore host.    password  str   True     The password of the PowerStore host.    Examples - name: Get details of an existing snapshot rule by name dellemc_powerstore_snapshotrule: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; name: \u0026quot;{{name}}\u0026quot; state: \u0026quot;present\u0026quot; - name: Get details of an existing snapshot rule by id dellemc_powerstore_snapshotrule: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; snapshotrule_id: \u0026quot;{{snapshotrule_id}}\u0026quot; state: \u0026quot;present\u0026quot; - name: Create new snapshot rule by interval dellemc_powerstore_snapshotrule: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; name: \u0026quot;{{name}}\u0026quot; interval: \u0026quot;{{interval}}\u0026quot; days_of_week: - Monday desired_retention: \u0026quot;{{desired_retention}}\u0026quot; state: \u0026quot;present\u0026quot; - name: Create new snapshot rule by time_of_day and days_of_week dellemc_powerstore_snapshotrule: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; name: \u0026quot;{{name}}\u0026quot; desired_retention: \u0026quot;{{desired_retention}}\u0026quot; days_of_week: - Monday - Wednesday - Friday time_of_day: \u0026quot;{{time_of_day}}\u0026quot; state: \u0026quot;present\u0026quot; - name: Modify existing snapshot rule to time_of_day and days_of_week dellemc_powerstore_snapshotrule: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; name: \u0026quot;{{name}}\u0026quot; days_of_week: - Monday - Wednesday - Friday - Sunday time_of_day: \u0026quot;{{time_of_day}}\u0026quot; state: \u0026quot;present\u0026quot; - name: Modify existing snapshot rule to interval dellemc_powerstore_snapshotrule: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; name: \u0026quot;{{name}}\u0026quot; interval: \u0026quot;{{interval}}\u0026quot; state: \u0026quot;present\u0026quot; - name: Delete an existing snapshot rule by name dellemc_powerstore_snapshotrule: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; name: \u0026quot;{{name}}\u0026quot; state: \u0026quot;absent\u0026quot; Return Values   Key Type Returned Description   changed   bool   always   Whether or not the resource has changed.    snapshotrule_details   complex   When snapshot rule exists   Details of the snapshot rule.    \u0026nbsp; days_of_week   list  success  List of string to specify days of the week on which the rule should be applied.    \u0026nbsp; desired_retention   int  success  Desired snapshot retention period.    \u0026nbsp; id   str  success  The system generated ID given to the snapshot rule.    \u0026nbsp; interval   str  success  The interval between snapshots.    \u0026nbsp; name   str  success  Name of the snapshot rule.    \u0026nbsp; policies   complex  success  The protection policies details of the snapshot rule.    \u0026nbsp; \u0026nbsp; id   str  success  The protection policy ID in which the snapshot rule is selected.    \u0026nbsp; \u0026nbsp; name   str  success  Name of the protection policy in which the snapshot rule is selected.    \u0026nbsp; time_of_day   str  success  The time of the day to take a daily snapshot.    Authors  Arindam Datta (@dattaarindam) ansible.team@dell.com   Gatherfacts Module Gathers information about PowerStore Storage entities\nSynopsis Gathers the list of specified PowerStore Storage System entities, such as the list of cluster nodes, volumes, volume groups, hosts, host groups, snapshot rules, protection policies, NAS servers, NFS exports, SMB shares, tree quotas, user quotas, file systems etc.\nParameters   Parameter Type Required Default Choices Description   gather_subset  list elements: str   True     vol vg host hg node protection_policy snapshot_rule nas_server nfs_export smb_share tree_quota user_quota file_system replication_rule replication_session remote_system network role user appliance   A list of string variables which specify the PowerStore system entities requiring information.information. vol - volumes node - all the nodes vg - volume groups protection_policy - protection policy host - hosts hg - host groups snapshot_rule - snapshot rule nas_server - NAS servers nfs_export - NFS exports smb_share - SMB shares tree_quota - tree quotas user_quota - user quotas file_system - file systems replication_rule - replication rules replication_session - replication sessions remote_system - remote systems network - various networks role - roles user - local users appliance - appliances    filters  list elements: dict      A list of filters to support filtered output for storage entities. Each filter is a list of filter_key, filter_operator, filter_value. Supports passing of multiple filters.    \u0026nbsp; filter_key   str   True     Name identifier of the filter.    \u0026nbsp; filter_operator   str   True     equal greater lesser like notequal   Operation to be performed on the filter key.    \u0026nbsp; filter_value   str   True     Value of the filter key.    all_pages  bool    False    Indicates whether to return all available entities on the storage system. If set to True, the Gather Facts module will implement pagination and return all entities. Otherwise, a maximum of the first 100 entities of any type will be returned.    array_ip  str   True     IP or FQDN of the PowerStore management system.    verifycert  bool   True     True False   Boolean variable to specify whether to validate SSL certificate or not. True - indicates that the SSL certificate should be verified. Set the environment variable REQUESTS_CA_BUNDLE to the path of the SSL certificate. False - indicates that the SSL certificate should not be verified.    user  str   True     The username of the PowerStore host.    password  str   True     The password of the PowerStore host.    Notes  Pagination is not supported for role and local user. If all_pages is passed, it will be ignored.  Examples - name: Get list of volumes, volume groups, hosts, host groups and node dellemc_powerstore_gatherfacts: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; gather_subset: - vol - vg - host - hg - node - name: Get list of replication related entities dellemc_powerstore_gatherfacts: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; gather_subset: - replication_rule - replication_session - remote_system - name: Get list of volumes whose state notequal to ready dellemc_powerstore_gatherfacts: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; gather_subset: - vol filters: - filter_key: \u0026quot;state\u0026quot; filter_operator: \u0026quot;notequal\u0026quot; filter_value: \u0026quot;ready\u0026quot; - name: Get list of protection policies and snapshot rules dellemc_powerstore_gatherfacts: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; gather_subset: - protection_policy - snapshot_rule - name: Get list of snapshot rules whose desired_retention between 101-499 dellemc_powerstore_gatherfacts: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; gather_subset: - snapshot_rule filters: - filter_key: \u0026quot;desired_retention\u0026quot; filter_operator: \u0026quot;greater\u0026quot; filter_value: \u0026quot;100\u0026quot; - filter_key: \u0026quot;desired_retention\u0026quot; filter_operator: \u0026quot;lesser\u0026quot; filter_value: \u0026quot;500\u0026quot; - name: Get list of nas server, nfs_export and smb share dellemc_powerstore_gatherfacts: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; gather_subset: - nas_server - nfs_export - smb_share - name: Get list of tree quota, user quota and file system dellemc_powerstore_gatherfacts: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; gather_subset: - tree_quota - user_quota - file_system - name: Get list of nas server whose name equal to 'nas_server' dellemc_powerstore_gatherfacts: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; gather_subset: - nas_server filters: - filter_key: \u0026quot;name\u0026quot; filter_operator: \u0026quot;equal\u0026quot; filter_value: \u0026quot;nas_server\u0026quot; - name: Get list of smb share whose name contains 'share' dellemc_powerstore_gatherfacts: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; gather_subset: - nas_server filters: - filter_key: \u0026quot;name\u0026quot; filter_operator: \u0026quot;like\u0026quot; filter_value: \u0026quot;*share*\u0026quot; - name: Get list of user, role, network and appliances dellemc_powerstore_gatherfacts: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; gather_subset: - user - role - network - appliance - name: Get list of networks whose name contains 'Management' dellemc_powerstore_gatherfacts: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; gather_subset: - network filters: - filter_key: \u0026quot;name\u0026quot; filter_operator: \u0026quot;like\u0026quot; filter_value: \u0026quot;*Management*\u0026quot; Return Values   Key Type Returned Description   changed   bool   always   Shows whether or not the resource has changed.    subset_result   complex   always   Provides details of all given subsets.    \u0026nbsp; Appliance   list  success  Provides details of all appliances.    \u0026nbsp; \u0026nbsp; id   str  success  appliance id    \u0026nbsp; \u0026nbsp; model   str  success  Model type of the PowerStore    \u0026nbsp; \u0026nbsp; name   str  success  appliance name    \u0026nbsp; Cluster   list  success  Provides details of all clusters.    \u0026nbsp; \u0026nbsp; id   str  success  cluster id    \u0026nbsp; \u0026nbsp; name   str  success  cluster name    \u0026nbsp; FileSystems   list  success  Provides details of all filesystems.    \u0026nbsp; \u0026nbsp; id   str  success  filesystem id    \u0026nbsp; \u0026nbsp; name   str  success  filesystem name    \u0026nbsp; HostGroups   list  success  Provides details of all hostgroups.    \u0026nbsp; \u0026nbsp; id   str  success  hostgroup id    \u0026nbsp; \u0026nbsp; name   str  success  hostgroup name    \u0026nbsp; Hosts   list  success  Provides details of all hosts.    \u0026nbsp; \u0026nbsp; id   str  success  host id    \u0026nbsp; \u0026nbsp; name   str  success  host name    \u0026nbsp; LocalUsers   list  success  Provides details of all local users.    \u0026nbsp; \u0026nbsp; id   str  success  user id    \u0026nbsp; \u0026nbsp; name   str  success  user name    \u0026nbsp; NASServers   list  success  Provides details of all nas servers.    \u0026nbsp; \u0026nbsp; id   str  success  nas server id    \u0026nbsp; \u0026nbsp; name   str  success  nas server name    \u0026nbsp; NFSExports   list  success  Provides details of all nfs exports.    \u0026nbsp; \u0026nbsp; id   str  success  nfs export id    \u0026nbsp; \u0026nbsp; name   str  success  nfs export name    \u0026nbsp; Networks   list  success  Provides details of all networks.    \u0026nbsp; \u0026nbsp; id   str  success  network id    \u0026nbsp; \u0026nbsp; name   str  success  network name    \u0026nbsp; Nodes   list  success  Provides details of all nodes.    \u0026nbsp; \u0026nbsp; id   str  success  node id    \u0026nbsp; \u0026nbsp; name   str  success  node name    \u0026nbsp; ProtectionPolicies   list  success  Provides details of all protectionpolicies.    \u0026nbsp; \u0026nbsp; id   str  success  protectionpolicy id    \u0026nbsp; \u0026nbsp; name   str  success  protectionpolicy name    \u0026nbsp; RemoteSystems   list  success  Provides details of all remote systems.    \u0026nbsp; \u0026nbsp; id   str  success  remote system id    \u0026nbsp; \u0026nbsp; name   str  success  remote system name    \u0026nbsp; ReplicationRules   list  success  Provides details of all replication rules.    \u0026nbsp; \u0026nbsp; id   str  success  replication rule id    \u0026nbsp; \u0026nbsp; name   str  success  replication rule name    \u0026nbsp; ReplicationSession   list  success  details of all replication sessions.    \u0026nbsp; \u0026nbsp; id   str  success  replication session id    \u0026nbsp; Roles   list  success  Provides details of all roles.    \u0026nbsp; \u0026nbsp; id   str  success  role id    \u0026nbsp; \u0026nbsp; name   str  success  role name    \u0026nbsp; SMBShares   list  success  Provides details of all smb shares.    \u0026nbsp; \u0026nbsp; id   str  success  smb share id    \u0026nbsp; \u0026nbsp; name   str  success  smb share name    \u0026nbsp; SnapshotRules   list  success  Provides details of all snapshot rules.    \u0026nbsp; \u0026nbsp; id   str  success  snapshot rule id    \u0026nbsp; \u0026nbsp; name   str  success  snapshot rule name    \u0026nbsp; TreeQuotas   list  success  Provides details of all tree quotas.    \u0026nbsp; \u0026nbsp; id   str  success  tree quota id    \u0026nbsp; \u0026nbsp; path   str  success  tree quota path    \u0026nbsp; UserQuotas   list  success  Provides details of all user quotas.    \u0026nbsp; \u0026nbsp; id   str  success  user quota id    \u0026nbsp; VolumeGroups   list  success  Provides details of all volumegroups.    \u0026nbsp; \u0026nbsp; id   str  success  volumegroup id    \u0026nbsp; \u0026nbsp; name   str  success  volumegroup name    \u0026nbsp; Volumes   list  success  Provides details of all volumes.    \u0026nbsp; \u0026nbsp; id   str  success  volume id    \u0026nbsp; \u0026nbsp; name   str  success  volume name    Authors  Arindam Datta (@dattaarindam) ansible.team@dell.com Vivek Soni (@v-soni11) ansible.team@dell.com   Job Module Manage jobs on Dell EMC PowerStore.\nSynopsis Managing jobs on PowerStore Storage System includes getting details of job.\nParameters   Parameter Type Required Default Choices Description   job_id  str   True     The ID of the job.    array_ip  str   True     IP or FQDN of the PowerStore management system.    verifycert  bool   True     True False   Boolean variable to specify whether to validate SSL certificate or not. True - indicates that the SSL certificate should be verified. Set the environment variable REQUESTS_CA_BUNDLE to the path of the SSL certificate. False - indicates that the SSL certificate should not be verified.    user  str   True     The username of the PowerStore host.    password  str   True     The password of the PowerStore host.    Examples - name: Get Job Details dellemc_powerstore_job: array_ip: \u0026quot;{{mgmt_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; job_id: \u0026quot;a544981c-e94a-40ab-9eae-e578e182d2bb\u0026quot; Return Values   Key Type Returned Description   changed   bool   always   Whether or not the resource has changed.    job_details   complex   When job exists.   The job details.    \u0026nbsp; description_l10n   str  success  Description of the job.    \u0026nbsp; end_time   str  success  Date and time when the job execution completed.    \u0026nbsp; estimated_completion_time   str  success  Estimated completion date and time.    \u0026nbsp; id   str  success  Unique identifier of the job.    \u0026nbsp; parent_id   str  success  Unique identifier of the parent job, if applicable.    \u0026nbsp; phase   str  success  Current status of the job.    \u0026nbsp; progress_percentage   int  success  Percent complete of the job.    \u0026nbsp; resource_action   str  success  User-specified action to be performed on the given resource.    \u0026nbsp; resource_id   str  success  Unique identifier of the resource on which the job is operating.    \u0026nbsp; resource_name   str  success  Name of the resource on which the job is operating.    \u0026nbsp; resource_type   str  success  Resource Type for the given resource.    \u0026nbsp; response_body   complex  success  Base response object.    \u0026nbsp; \u0026nbsp; messages   complex  success  The details of the error response.    \u0026nbsp; \u0026nbsp; \u0026nbsp; arguments   list  success  Values involved in the error.    \u0026nbsp; \u0026nbsp; \u0026nbsp; code   str  success  Hexadecimal code of the error.    \u0026nbsp; \u0026nbsp; \u0026nbsp; message_l10n   str  success  The description of the error.    \u0026nbsp; \u0026nbsp; \u0026nbsp; severity   str  success  Type of the severity.    \u0026nbsp; \u0026nbsp; response_type   str  success  Job error response.    \u0026nbsp; response_status   str  success  Possible HTTP status values of completed or failed jobs.    \u0026nbsp; root_id   str  success  Unique identifier of the root job, if applicable. The root job is the job at the top of the parent hierarchy.    \u0026nbsp; start_time   str  success  Date and time when the job execution started.    \u0026nbsp; state   str  success  Current status of the job.    \u0026nbsp; step_order   int  success  Order of a given job step with respect to its siblings within the job hierarchy.    \u0026nbsp; user   str  success  Name of the user associated with the job.    Authors  Akash Shendge (@shenda1) ansible.team@dell.com   Replication Session Module Replication session operations on a PowerStore storage system.\nSynopsis Performs all replication session state change operations on a PowerStore Storage System. This module supports get details of an existing replication session. Updating the state of the replication session.\nParameters   Parameter Type Required Default Choices Description   volume_group  str      Name/ID of the volume group for which a replication session exists. volume_group, volume, and session_id are mutually exclusive.    volume  str      Name/ID of the volume for which replication session exists. volume_group, volume, and session_id are mutually exclusive.    session_id  str      ID of the replication session. volume_group, volume, and session_id are mutually exclusive.    session_state  str      failed_over paused synchronizing   State in which the replication session is present after performing the task.    array_ip  str   True     IP or FQDN of the PowerStore management system.    verifycert  bool   True     True False   Boolean variable to specify whether to validate SSL certificate or not. True - indicates that the SSL certificate should be verified. Set the environment variable REQUESTS_CA_BUNDLE to the path of the SSL certificate. False - indicates that the SSL certificate should not be verified.    user  str   True     The username of the PowerStore host.    password  str   True     The password of the PowerStore host.    Notes  Manual synchronization for a replication session is not supported through the Ansible module. When the current state of the replication session is \u0026lsquo;OK\u0026rsquo; and in the playbook task \u0026lsquo;synchronizing\u0026rsquo;, then it will return \u0026ldquo;changed\u0026rdquo; as False. This is because there is a scheduled synchronization in place with the associated replication rule\u0026rsquo;s RPO in the protection policy.  Examples - name: Pause a replication session dellemc_powerstore_replicationsession: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; volume: \u0026quot;sample_volume_1\u0026quot; session_state: \u0026quot;paused\u0026quot; - name: Synchronize a replication session dellemc_powerstore_replicationsession: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; volume: \u0026quot;sample_volume_1\u0026quot; session_state: \u0026quot;synchronizing\u0026quot; - name: Get details of a replication session dellemc_powerstore_replicationsession: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; volume: \u0026quot;sample_volume_1\u0026quot; - name: Fail over a replication session dellemc_powerstore_replicationsession: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; volume: \u0026quot;sample_volume_1\u0026quot; session_state: \u0026quot;failed_over\u0026quot; Return Values   Key Type Returned Description   changed   bool   always   Whether or not the resource has changed    replication_session_details   complex   When replication session exists   Details of the replication session    \u0026nbsp; estimated_completion_timestamp   str  success  Estimated completion time of the current replication operation.    \u0026nbsp; id   str  success  The system generated ID of the replication session. Unique across source and destination roles.    \u0026nbsp; last_sync_timestamp   str  success  Time of last successful synchronization.    \u0026nbsp; local_resource_id   str  success  Unique identifier of the local storage resource for the replication session.    \u0026nbsp; name   str  success  Name of the replication rule.    \u0026nbsp; progress_percentage   int  success  Progress of the current replication operation.    \u0026nbsp; remote_resource_id   str  success  Unique identifier of the remote storage resource for the replication session.    \u0026nbsp; remote_system_id   str  success  Unique identifier of the remote system instance.    \u0026nbsp; replication_rule_id   str  success  Associated replication rule instance if created by policy engine.    \u0026nbsp; resource_type   str  success  Storage resource type eligible for replication protection. volume - Replication session created on a volume. volume_group - Replication session created on a volume group.    \u0026nbsp; role   str  success  Role of the replication session. Source - The local resource is the source of the remote replication session. Destination - The local resource is the destination of the remote replication session.    \u0026nbsp; state   str  success  State of the replication session.    Authors  P Srinivas Rao (@srinivas-rao5) ansible.team@dell.com   Host Group Module Manage host group on PowerStore Storage System.\nSynopsis Managing host group on PowerStore storage system includes create host group with a set of hosts, add/remove hosts from host group, rename host group, and delete host group. Deletion of a host group results in deletion of the containing hosts as well. Remove hosts from the host group first to retain them.\nParameters   Parameter Type Required Default Choices Description   hostgroup_name  str      The host group name. This value must contain 128 or fewer printable Unicode characters. Creation of an empty host group is not allowed. Required when creating a host group. Use either hostgroup_id or hostgroup_name for modify and delete tasks.    hostgroup_id  str      The 36-character long host group id, automatically generated when a host group is created. Use either hostgroup_id or hostgroup_name for modify and delete tasks. hostgroup_id cannot be used while creating host group, as it is generated by the array after creation of host group.    hosts  list elements: str      List of hosts to be added or removed from the host group. Subordinate hosts in a host group can only be of one type, either FC or iSCSI. Required when creating a host group. To represent host, both name or ID can be used interchangeably. The module will detect both.    state  str   True     absent present   Define whether the host group should exist or not. present - indicates that the host group should exist on the system. absent - indicates that the host group should not exist on the system. Deletion of a host group results in deletion of the containing hosts as well. Remove hosts from the host group first to retain them.    host_state  str      present-in-group absent-in-group   Define whether the hosts should be present or absent in host group. present-in-group - indicates that the hosts should exist on the host group. absent-in-group - indicates that the hosts should not exist on the host group. Required when creating a host group with hosts or adding/removing hosts from existing host group.    new_name  str      The new name for host group renaming function. This value must contain 128 or fewer printable Unicode characters.    array_ip  str   True     IP or FQDN of the PowerStore management system.    verifycert  bool   True     True False   Boolean variable to specify whether to validate SSL certificate or not. True - indicates that the SSL certificate should be verified. Set the environment variable REQUESTS_CA_BUNDLE to the path of the SSL certificate. False - indicates that the SSL certificate should not be verified.    user  str   True     The username of the PowerStore host.    password  str   True     The password of the PowerStore host.    Examples  - name: Create host group with hosts using host name dellemc_powerstore_hostgroup: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; hostgroup_name: \u0026quot;{{hostgroup_name}}\u0026quot; hosts: - host1 - host2 state: 'present' host_state: 'present-in-group' - name: Create host group with hosts using host ID dellemc_powerstore_hostgroup: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; hostgroup_name: \u0026quot;{{hostgroup_name}}\u0026quot; hosts: - c17fc987-bf82-480c-af31-9307b89923c3 state: 'present' host_state: 'present-in-group' - name: Get host group details dellemc_powerstore_hostgroup: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; hostgroup_name: \u0026quot;{{hostgroup_name}}\u0026quot; state: 'present' - name: Get host group details using ID dellemc_powerstore_hostgroup: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; hostgroup_id: \u0026quot;{{host group_id}}\u0026quot; state: 'present' - name: Add hosts to host group dellemc_powerstore_hostgroup: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; hostgroup_name: \u0026quot;{{hostgroup_name}}\u0026quot; hosts: - host3 host_state: 'present-in-group' state: 'present' - name: Remove hosts from host group dellemc_powerstore_hostgroup: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; hostgroup_name: \u0026quot;{{hostgroup_name}}\u0026quot; hosts: - host3 host_state: 'absent-in-group' state: 'present' - name: Rename host group dellemc_powerstore_hostgroup: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; hostgroup_name: \u0026quot;{{hostgroup_name}}\u0026quot; new_name: \u0026quot;{{new_hostgroup_name}}\u0026quot; state: 'present' - name: Delete host group dellemc_powerstore_hostgroup: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; hostgroup_name: \u0026quot;{{hostgroup_name}}\u0026quot; state: 'absent' Return Values   Key Type Returned Description   changed   bool   always   Whether or not the resource has changed.    hostgroup_details   complex   When host group exists   Details of the host group.    \u0026nbsp; description   str  success  Description about the host group.    \u0026nbsp; hosts   complex  success  The hosts details which are part of this host group.    \u0026nbsp; \u0026nbsp; id   str  success  The ID of the host.    \u0026nbsp; \u0026nbsp; name   str  success  The name of the host.    \u0026nbsp; id   str  success  The system generated ID given to the host group.    \u0026nbsp; name   str  success  Name of the host group.    Authors  Manisha Agrawal (@agrawm3) ansible.team@dell.com   NFS Module Manage NFS exports on Dell EMC PowerStore.\nSynopsis Managing NFS exports on PowerStore Storage System includes creating new NFS Export, getting details of NFS export, modifying attributes of NFS export, and deleting NFS export.\nParameters   Parameter Type Required Default Choices Description   nfs_export_name  str      The name of the NFS export. Mandatory for create operation. Specify either nfs_export_name or nfs_export_id(but not both) for any operation.    nfs_export_id  str      The ID of the NFS export.    filesystem  str      The ID/Name of the filesystem for which the NFS export will be created. Either filesystem or snapshot is required for creation of the NFS Export. If filesystem name is specified, then nas_server is required to uniquely identify the filesystem. If filesystem parameter is provided, then snapshot cannot be specified.    snapshot  str      The ID/Name of the Snapshot for which NFS export will be created. Either filesystem or snapshot is required for creation of the NFS Export. If snapshot name is specified, then nas_server is required to uniquely identify the snapshot. If snapshot parameter is provided, then filesystem cannot be specified. NFS export can be created only if access type of snapshot is \"protocol\".    nas_server  str      The NAS server. This could be the name or ID of the NAS server.    path  str      Local path to export relative to the NAS server root. With NFS, each export of a file_system or file_snap must have a unique local path. Mandatory while creating NFS export.    description  str      The description for the NFS export.    default_access  str      NO_ACCESS READ_ONLY READ_WRITE ROOT READ_ONLY_ROOT   Default access level for all hosts that can access the Export. For hosts that need different access than the default, they can be configured by adding to the list. If default_access is not mentioned during creation, then NFS export will be created with No_Access.    no_access_hosts  list elements: str      Hosts with no access to the NFS export.    read_only_hosts  list elements: str      Hosts with read-only access to the NFS export.    read_only_root_hosts  list elements: str      Hosts with read-only access for root user to the NFS export.    read_write_hosts  list elements: str      Hosts with read and write access to the NFS export.    read_write_root_hosts  list elements: str      Hosts with read and write access for root user to the NFS export.    min_security  str      SYS KERBEROS KERBEROS_WITH_INTEGRITY KERBEROS_WITH_ENCRYPTION   NFS enforced security type for users accessing an NFS export. If not specified at the time of creation, it will be set to SYS.    anonymous_uid  int      Specifies the user ID of the anonymous account. If not specified at the time of creation, it will be set to -2.    anonymous_gid  int      Specifies the group ID of the anonymous account. If not specified at the time of creation, it will be set to -2.    is_no_suid  bool      If set, do not allow access to set SUID. Otherwise, allow access. If not specified at the time of creation, it will be set to False.    host_state  str      present-in-export absent-in-export   Define whether the hosts can access the NFS export. Required when adding or removing host access from the export.    state  str   True     absent present   Define whether the NFS export should exist or not.    array_ip  str   True     IP or FQDN of the PowerStore management system.    verifycert  bool   True     True False   Boolean variable to specify whether to validate SSL certificate or not. True - indicates that the SSL certificate should be verified. Set the environment variable REQUESTS_CA_BUNDLE to the path of the SSL certificate. False - indicates that the SSL certificate should not be verified.    user  str   True     The username of the PowerStore host.    password  str   True     The password of the PowerStore host.    Examples - name: Create NFS export (filesystem) dellemc_powerstore_nfs: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; nfs_export_name: \u0026quot;{{export_name1}}\u0026quot; filesystem: \u0026quot;{{filesystem}}\u0026quot; nas_server: \u0026quot;{{nas_server}}\u0026quot; path: \u0026quot;{{path1}}\u0026quot; description: \u0026quot;sample description\u0026quot; default_access: \u0026quot;NO_ACCESS\u0026quot; no_access_hosts: - \u0026quot;{{host5}}\u0026quot; read_only_hosts: - \u0026quot;{{host1}}\u0026quot; read_only_root_hosts: - \u0026quot;{{host2}}\u0026quot; read_write_hosts: - \u0026quot;{{host3}}\u0026quot; read_write_root_hosts: - \u0026quot;{{host4}}\u0026quot; min_security: \u0026quot;SYS\u0026quot; anonymous_uid: 1000 anonymous_gid: 1000 is_no_suid: True host_state: \u0026quot;present-in-export\u0026quot; state: \u0026quot;present\u0026quot; - name: Create NFS export Create NFS export for filesystem snapshot with mandatory parameters dellemc_powerstore_nfs: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; nfs_export_name: \u0026quot;{{export_name2}}\u0026quot; snapshot: \u0026quot;{{snapshot}}\u0026quot; nas_server: \u0026quot;{{nas_server}}\u0026quot; path: \u0026quot;{{path2}}\u0026quot; state: \u0026quot;present\u0026quot; - name: Get NFS export details using ID dellemc_powerstore_nfs: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; nfs_export_id: \u0026quot;{{export_id}}\u0026quot; state: \u0026quot;present\u0026quot; - name: Add Read-Only and Read-Write hosts to NFS export dellemc_powerstore_nfs: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; nfs_export_id: \u0026quot;{{export_id}}\u0026quot; read_only_hosts: - \u0026quot;{{host5}}\u0026quot; read_write_hosts: - \u0026quot;{{host6}}\u0026quot; host_state: \u0026quot;present-in-export\u0026quot; state: \u0026quot;present\u0026quot; - name: Remove Read-Only and Read-Write hosts from NFS export dellemc_powerstore_nfs: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; nfs_export_id: \u0026quot;{{export_id}}\u0026quot; read_only_hosts: - \u0026quot;{{host1}}\u0026quot; read_write_hosts: - \u0026quot;{{host3}}\u0026quot; host_state: \u0026quot;absent-in-export\u0026quot; state: \u0026quot;present\u0026quot; - name: Modify the attributes of NFS export dellemc_powerstore_nfs: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; nfs_export_id: \u0026quot;{{export_id}}\u0026quot; description: \u0026quot;modify description\u0026quot; default_access: \u0026quot;ROOT\u0026quot; state: \u0026quot;present\u0026quot; - name: Delete NFS export using name dellemc_powerstore_nfs: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; nfs_export_name: \u0026quot;{{export_name}}\u0026quot; nas_server: \u0026quot;{{nas_server}}\u0026quot; state: \u0026quot;absent\u0026quot; Return Values   Key Type Returned Description   changed   bool   always   Whether or not the resource has changed    nfs_export_details   complex   When NFS export exists.   The NFS export details.    \u0026nbsp; anonymous_GID   int  success  The group ID of the anonymous account.    \u0026nbsp; anonymous_UID   int  success  The user ID of the anonymous account.    \u0026nbsp; default_access   str  success  Default access level for all hosts that can access the export.    \u0026nbsp; description   str  success  The description for the NFS export.    \u0026nbsp; file_system   complex  success  Details of filesystem and NAS server on which NFS export is present.    \u0026nbsp; \u0026nbsp; filesystem_type   str  success  The type of the filesystem.    \u0026nbsp; \u0026nbsp; id   str  success  The ID of the filesystem.    \u0026nbsp; \u0026nbsp; name   str  success  The name of the filesystem.    \u0026nbsp; \u0026nbsp; nas_server   complex  success  Details of NAS server.    \u0026nbsp; \u0026nbsp; \u0026nbsp; id   str  success  The ID of the NAS server.    \u0026nbsp; \u0026nbsp; \u0026nbsp; name   str  success  The name of the NAS server.    \u0026nbsp; id   str  success  The ID of the NFS export.    \u0026nbsp; is_no_SUID   bool  success  If set, do not allow access to set SUID. Otherwise, allow access.    \u0026nbsp; min_security   str  success  NFS enforced security type for users accessing an NFS export.    \u0026nbsp; name   str  success  The name of the NFS export.    \u0026nbsp; no_access_hosts   list  success  Hosts with no access to the NFS export.    \u0026nbsp; path   str  success  Local path to a location within the file system.    \u0026nbsp; read_only_hosts   list  success  Hosts with read-only access to the NFS export.    \u0026nbsp; read_only_root_hosts   list  success  Hosts with read-only for root user access to the NFS export.    \u0026nbsp; read_write_hosts   list  success  Hosts with read and write access to the NFS export.    \u0026nbsp; read_write_root_hosts   list  success  Hosts with read and write for root user access to the NFS export.    Authors  Akash Shendge (@shenda1) ansible.team@dell.com   Role Module Get details of the roles present on the PowerStore storage system.\nSynopsis Manage role in PowerStore storage system includes getting the details of a role.\nParameters   Parameter Type Required Default Choices Description   role_name  str      Name of the role.    role_id  str      Id of the role.    state  str   True     absent present   Define whether the role should exist or not. present, indicates that the role should exist on the system. absent, indicates that the role should not exist on the system.    array_ip  str   True     IP or FQDN of the PowerStore management system.    verifycert  bool   True     True False   Boolean variable to specify whether to validate SSL certificate or not. True - indicates that the SSL certificate should be verified. Set the environment variable REQUESTS_CA_BUNDLE to the path of the SSL certificate. False - indicates that the SSL certificate should not be verified.    user  str   True     The username of the PowerStore host.    password  str   True     The password of the PowerStore host.    Notes  Only getting the details of the role is supported by the ansible module. Creation, modification and deletion of roles is not supported by the ansible modules.  Examples - name: Get the details of role by name dellemc_powerstore_role: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verify_cert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; role_name: \u0026quot;Administrator\u0026quot; state: \u0026quot;present\u0026quot; - name: Get the details of role by id dellemc_powerstore_role: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verify_cert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; role_id: \u0026quot;1\u0026quot; state: \u0026quot;present\u0026quot; Return Values   Key Type Returned Description   changed   bool   always   Whether or not the resource has changed.    role_details   complex   When role exists.   The role details.    \u0026nbsp; description   str  success  Description of the role.    \u0026nbsp; id   str  success  The ID of the role.    \u0026nbsp; is_built_in   bool  success  Indicates whether the role is built-in.    \u0026nbsp; name   str  success  The name of the role.    Authors  P Srinivas Rao (@srinivas-rao5) ansible.team@dell.com   Volume Group Module Manage volume groups on a PowerStore Storage System\nSynopsis Managing volume group on PowerStore Storage System includes creating new volume group, adding volumes to volume group, removing volumes from volume group, renaming volume group, modifying volume group, and deleting volume group.\nParameters   Parameter Type Required Default Choices Description   vg_name  str      The name of the volume group.    vg_id  str      The id of the volume group. It can be used only for Modify, Add/Remove, or Delete operation.    volumes  list elements: str      This is a list of volumes. Either the volume ID or name must be provided for adding/removing existing volumes from a volume group. If volumes are given, then vol_state should also be specified.    vol_state  str      present-in-group absent-in-group   String variable. Describes the state of volumes inside a volume group. If volume is given, then vol_state should also be specified.    new_vg_name  str      The new name of the volume group.    description  str      Description about the volume group.    protection_policy  str      String variable. Represents Protection policy id or name used for volume group. Specifying an empty string or \"\" removes the existing protection policy from volume group.    is_write_order_consistent  bool      A boolean flag to indicate whether Snapshot sets of the volume group will be write-order consistent. If this parameter is not specified, the array by default sets it to true.    state  str   True     absent present   Define whether the volume group should exist or not.    array_ip  str   True     IP or FQDN of the PowerStore management system.    verifycert  bool   True     True False   Boolean variable to specify whether to validate SSL certificate or not. True - indicates that the SSL certificate should be verified. Set the environment variable REQUESTS_CA_BUNDLE to the path of the SSL certificate. False - indicates that the SSL certificate should not be verified.    user  str   True     The username of the PowerStore host.    password  str   True     The password of the PowerStore host.    Notes  vol_state is mandatory if volumes are provided. A protection policy can be specified either for an volume group, or for the individual volumes inside the volume group. A volume can be a member of at most one volume group. Specifying \u0026ldquo;protection_policy\u0026rdquo; as empty string or \u0026quot;\u0026rdquo; removes the existing protection policy from a volume group.  Examples - name: Create volume group without protection policy dellemc_powerstore_volumegroup: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; vg_name: \u0026quot;{{vg_name}}\u0026quot; description: \u0026quot;This volume group is for ansible\u0026quot; state: \u0026quot;present\u0026quot; - name: Get details of volume group dellemc_powerstore_volumegroup: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; vg_name: \u0026quot;{{vg_name}}\u0026quot; state: \u0026quot;present\u0026quot; - name: Add volumes to volume group dellemc_powerstore_volumegroup: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; vg_name: \u0026quot;{{vg_name}}\u0026quot; state: \u0026quot;present\u0026quot; volumes: - \u0026quot;7f879569-676c-4749-a06f-c2c30e09b295\u0026quot; - \u0026quot;68e4dad5-5de5-4644-a98f-6d4fb916e169\u0026quot; - \u0026quot;Ansible_Testing\u0026quot; vol_state: \u0026quot;present-in-group\u0026quot; - name: Remove volumes from volume group dellemc_powerstore_volumegroup: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; vg_name: \u0026quot;{{vg_name}}\u0026quot; state: \u0026quot;present\u0026quot; volumes: - \u0026quot;7f879569-676c-4749-a06f-c2c30e09b295\u0026quot; - \u0026quot;Ansible_Testing\u0026quot; vol_state: \u0026quot;absent-in-group\u0026quot; - name: Rename volume group and change is_write_order_consistent flag dellemc_powerstore_volumegroup: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; vg_name: \u0026quot;{{vg_name}}\u0026quot; new_vg_name: \u0026quot;{{new_vg_name}}\u0026quot; is_write_order_consistent: False state: \u0026quot;present\u0026quot; - name: Get details of volume group by ID dellemc_powerstore_volumegroup: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; vg_id: \u0026quot;{{vg_id}}\u0026quot; state: \u0026quot;present\u0026quot; - name: Delete volume group dellemc_powerstore_volumegroup: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; name: \u0026quot;{{new_vg_name}}\u0026quot; state: \u0026quot;absent\u0026quot; Return Values   Key Type Returned Description   add_vols_to_vg   bool   When value exists   A boolean flag to indicate whether volume/s got added to volume group.    changed   bool   always   Whether or not the resource has changed.    create_vg   bool   When value exists   A boolean flag to indicate whether volume group got created.    delete_vg   bool   When value exists   A boolean flag to indicate whether volume group got deleted.    modify_vg   bool   When value exists   A boolean flag to indicate whether volume group got modified.    remove_vols_from_vg   bool   When value exists   A boolean flag to indicate whether volume/s got removed from volume group.    volume_group_details   complex   When volume group exists   Details of the volume group.    \u0026nbsp; description   str  success  description about the volume group.    \u0026nbsp; id   str  success  The system generated ID given to the volume group.    \u0026nbsp; is_write_order_consistent   bool  success  A boolean flag to indicate whether snapshot sets of the volume group will be write-order consistent.    \u0026nbsp; name   str  success  Name of the volume group.    \u0026nbsp; protection_policy_id   str  success  The protection policy of the volume group.    \u0026nbsp; type   str  success  The type of the volume group.    \u0026nbsp; volumes   complex  success  The volumes details of the volume group.    \u0026nbsp; \u0026nbsp; id   str  success  The system generated ID given to the volume associated with the volume group.    \u0026nbsp; \u0026nbsp; name   str  success  The name of the volume associated with the volume group.    Authors  Akash Shendge (@shenda1) ansible.team@dell.com Arindam Datta (@dattaarindam) ansible.team@dell.com   NAS Server Module NAS Server operations on PowerStore Storage system.\nSynopsis Supports getting the details and modifying the attributes of a NAS server.\nParameters   Parameter Type Required Default Choices Description   nas_server_name  str      Name of the NAS server. Mutually exclusive with nas_server_id.    nas_server_id  str      Unique id of the NAS server. Mutually exclusive with nas_server_name.    description  str      Description of the NAS server.    nas_server_new_name  str      New name of the NAS server for a rename operation.    current_node  str      Unique identifier or name of the node on which the NAS server is running.    preferred_node  str      Unique identifier or name of the preferred node for the NAS server. The initial value (on NAS server create) is taken from the current node.    current_unix_directory_service  str      NIS LDAP LOCAL_FILES LOCAL_THEN_NIS LOCAL_THEN_LDAP   Define the Unix directory service used for looking up identity information for Unix such as UIDs, GIDs, net groups, and so on.    default_unix_user  str      Default Unix user name used for granting access in case of Windows to Unix user mapping failure. When empty, access in such case is denied.    default_windows_user  str      Default Windows user name used for granting access in case of Unix to Windows user mapping failure. When empty, access in such case is denied.    state  str   True     absent present   Define whether the nas server should exist or not.    array_ip  str   True     IP or FQDN of the PowerStore management system.    verifycert  bool   True     True False   Boolean variable to specify whether to validate SSL certificate or not. True - indicates that the SSL certificate should be verified. Set the environment variable REQUESTS_CA_BUNDLE to the path of the SSL certificate. False - indicates that the SSL certificate should not be verified.    user  str   True     The username of the PowerStore host.    password  str   True     The password of the PowerStore host.    Examples  - name: Get details of NAS Server by name dellemc_powerstore_nasserver: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; nas_server_name: \u0026quot;{{nas_server_name}}\u0026quot; state: \u0026quot;present\u0026quot; - name: Get Details of NAS Server by ID dellemc_powerstore_nasserver: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; nas_server_id: \u0026quot;{{nas_id}}\u0026quot; state: \u0026quot;present\u0026quot; - name: Rename NAS Server by Name dellemc_powerstore_nasserver: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; nas_server_name: \u0026quot;{{nas_server_name}}\u0026quot; nas_server_new_name : \u0026quot;{{nas_server_new_name}}\u0026quot; state: \u0026quot;present\u0026quot; - name: Modify NAS Server attributes by ID dellemc_powerstore_nasserver: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; nas_server_id: \u0026quot;{{nas_id}}\u0026quot; current_unix_directory_service: \u0026quot;LOCAL_FILES\u0026quot; current_node: \u0026quot;{{cur_node_n1}}\u0026quot; preferred_node: \u0026quot;{{prefered_node}}\u0026quot; state: \u0026quot;present\u0026quot; Return Values   Key Type Returned Description   changed   bool   always   Whether or not the resource has changed    nasserver_details   complex   When nas server exists   Details about the nas server    \u0026nbsp; backup_IPv4_interface_id   str  success  Unique identifier of the preferred IPv4 backup interface.    \u0026nbsp; backup_IPv6_interface_id   str  success  Unique identifier of the preferred IPv6 backup interface.    \u0026nbsp; current_node   dict  success  Unique identifier and name of the node on which the NAS server is running.    \u0026nbsp; current_unix_directory_service   str  success  Define the Unix directory service used for looking up identity information for Unix such as UIDs, GIDs, net groups, and so on.    \u0026nbsp; default_unix_user   str  success  Default Unix user name used for granting access in case of Windows to Unix user mapping failure.    \u0026nbsp; description   str  success  Additional information about the nas server.    \u0026nbsp; file_interfaces   dict  success  This is the inverse of the resource type file_interface association. Will return the id,name \u0026 ip_address of the associated file interface.    \u0026nbsp; file_ldaps   str  success  This is the inverse of the resource type file_ldap association.    \u0026nbsp; file_systems   dict  success  This is the inverse of the resource type file_system association.    \u0026nbsp; id   str  success  The system generated ID given to the nas server    \u0026nbsp; is_username_translation_enabled   bool  success  Enable the possibility to match a windows account to a Unix account with different names.    \u0026nbsp; name   str  success  Name of the nas server    \u0026nbsp; nfs_servers   str  success  This is the inverse of the resource type nfs_server association.    \u0026nbsp; operational_status   str  success  NAS server operational status.    \u0026nbsp; preferred_node   dict  success  Unique identifier and name of the preferred node for the NAS server.    \u0026nbsp; production_IPv4_interface_id   str  success  Unique identifier of the preferred IPv4 production interface.    \u0026nbsp; production_IPv6_interface_id   str  success  Unique identifier of the preferred IPv6 production interface.    \u0026nbsp; smb_servers   str  success  This is the inverse of the resource type smb_server association.    Authors  Arindam Datta (@dattaarindam) ansible.team@dell.com   SMB Share Module Manage SMB shares on a PowerStore storage system.\nSynopsis Managing SMB Shares on PowerStore storage system includes create, get, modify, and delete the SMB shares.\nParameters   Parameter Type Required Default Choices Description   share_name  str      Name of the SMB share. Required during creation of the SMB share. For all other operations either share_name or share_id is required.    share_id  str      ID of the SMB share. Should not be specified during creation. ID is auto generated. For all other operations either share_name or share_id is required. If share_id is used then no need to pass nas_server/filesystem/snapshot/ path.    path  str      Local path to the file system/Snapshot or any existing sub-folder of the file system/Snapshot that is shared over the network. Path is relative to the base of the NAS server and must start with the name of the filesystem. Required for creation of the SMB share.    filesystem  str      The ID/Name of the File System. Either filesystem or snapshot is required for creation of the SMB share. If filesystem name is specified, then nas_server is required to uniquely identify the filesystem. If filesystem parameter is provided, then snapshot cannot be specified.    snapshot  str      The ID/Name of the Snapshot. Either filesystem or snapshot is required for creation of the SMB share. If snapshot name is specified, then nas_server is required to uniquely identify the snapshot. If snapshot parameter is provided, then filesystem cannot be specified. SMB share can be created only if access type of snapshot is \"protocol\".    nas_server  str      The ID/Name of the NAS Server. It is not required if share_id is used.    description  str      Description for the SMB share. Optional parameter when creating a share. To modify, pass the new value in description field.    is_abe_enabled  bool      Indicates whether Access-based Enumeration (ABE) for SMB share is enabled. During creation, if not mentioned, then the default is False.    is_branch_cache_enabled  bool      Indicates whether Branch Cache optimization for SMB share is enabled. During creation, if not mentioned then default is False.    is_continuous_availability_enabled  bool      Indicates whether continuous availability for SMB 3.0 is enabled. During creation, if not mentioned, then the default is False.    is_encryption_enabled  bool      Indicates whether encryption for SMB 3.0 is enabled at the shared folder level. During creation, if not mentioned then default is False.    offline_availability  str      MANUAL DOCUMENTS PROGRAMS NONE   Defines valid states of Offline Availability. MANUAL- Only specified files will be available offline. DOCUMENTS- All files that users open will be available offline. PROGRAMS- Program will preferably run from the offline cache even when connected to the network. All files that users open will be available offline. NONE- Prevents clients from storing documents and programs in offline cache.    umask  str      The default UNIX umask for new files created on the SMB Share. During creation, if not mentioned, then the default is \"022\". For all other operations, the default is None.    state  str   True     absent present   Define whether the SMB share should exist or not. present indicates that the share should exist on the system. absent indicates that the share should not exist on the system.    array_ip  str   True     IP or FQDN of the PowerStore management system.    verifycert  bool   True     True False   Boolean variable to specify whether to validate SSL certificate or not. True - indicates that the SSL certificate should be verified. Set the environment variable REQUESTS_CA_BUNDLE to the path of the SSL certificate. False - indicates that the SSL certificate should not be verified.    user  str   True     The username of the PowerStore host.    password  str   True     The password of the PowerStore host.    Notes  When the ID of the filesystem/snapshot is passed then nas_server is not required. If passed, then the filesystem/snapshot should exist for the nas_server, else the task will fail. Multiple SMB shares can be created for the same local path.  Examples - name: Create SMB share for a filesystem dellemc_powerstore_smbshare: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; share_name: \u0026quot;sample_smb_share\u0026quot; filesystem: \u0026quot;sample_fs\u0026quot; nas_server: \u0026quot;{{nas_server_id}}\u0026quot; path: \u0026quot;{{path}}\u0026quot; description: \u0026quot;Sample SMB share created\u0026quot; is_abe_enabled: True is_branch_cache_enabled: True offline_availability: \u0026quot;DOCUMENTS\u0026quot; is_continuous_availability_enabled: True is_encryption_enabled: True state: \u0026quot;present\u0026quot; - name: Modify Attributes of SMB share for a filesystem dellemc_powerstore_smbshare: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; share_name: \u0026quot;sample_smb_share\u0026quot; nas_server: \u0026quot;sample_nas_server\u0026quot; description: \u0026quot;Sample SMB share attributes updated\u0026quot; is_abe_enabled: False is_branch_cache_enabled: False offline_availability: \u0026quot;MANUAL\u0026quot; is_continuous_availability_enabled: False is_encryption_enabled: False umask: \u0026quot;022\u0026quot; state: \u0026quot;present\u0026quot; - name: Create SMB share for a snapshot dellemc_powerstore_smbshare: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; share_name: \u0026quot;sample_snap_smb_share\u0026quot; snapshot: \u0026quot;sample_snapshot\u0026quot; nas_server: \u0026quot;{{nas_server_id}}\u0026quot; path: \u0026quot;{{path}}\u0026quot; description: \u0026quot;Sample SMB share created for snapshot\u0026quot; is_abe_enabled: True is_branch_cache_enabled: True is_continuous_availability_enabled: True state: \u0026quot;present\u0026quot; - name: Modify Attributes of SMB share for a snapshot dellemc_powerstore_smbshare: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; share_name: \u0026quot;sample_snap_smb_share\u0026quot; nas_server: \u0026quot;sample_nas_server\u0026quot; description: \u0026quot;Sample SMB share attributes updated for snapshot\u0026quot; is_abe_enabled: False is_branch_cache_enabled: False offline_availability: \u0026quot;MANUAL\u0026quot; is_continuous_availability_enabled: False umask: \u0026quot;022\u0026quot; state: \u0026quot;present\u0026quot; - name: Get details of SMB share dellemc_powerstore_smbshare: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; share_id: \u0026quot;{{smb_share_id}}\u0026quot; state: \u0026quot;present\u0026quot; - name: Delete SMB share dellemc_powerstore_smbshare: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; share_id: \u0026quot;{{smb_share_id}}\u0026quot; state: \u0026quot;absent\u0026quot; Return Values   Key Type Returned Description   changed   bool   always   Whether or not the resource has changed    smb_share_details   complex   When share exists.   The SMB share details.    \u0026nbsp; description   str  success  Additional information about the share.    \u0026nbsp; file_system   complex  success  Includes ID and Name of filesystem and nas server for which smb share exists.    \u0026nbsp; \u0026nbsp; filesystem_type   str  success  Type of filesystem.    \u0026nbsp; \u0026nbsp; id   str  success  ID of filesystem.    \u0026nbsp; \u0026nbsp; name   str  success  Name of filesystem.    \u0026nbsp; \u0026nbsp; nas_server   dict  success  nas_server of filesystem.    \u0026nbsp; id   str  success  The ID of the SMB share.    \u0026nbsp; is_ABE_enabled   bool  success  Whether Access Based enumeration is enforced or not    \u0026nbsp; is_branch_cache_enabled   bool  success  Whether branch cache is enabled or not.    \u0026nbsp; is_continuous_availability_enabled   bool  success  Whether the share will be available continuously or not.    \u0026nbsp; is_encryption_enabled   bool  success  Whether encryption is enabled or not.    \u0026nbsp; name   str  success  Name of the SMB share.    Authors  P Srinivas Rao (@srinivas-rao5) ansible.team@dell.com   Snapshot Module Manage Snapshots on Dell EMC PowerStore.\nSynopsis Managing Snapshots on PowerStore storage system, Create a new Volume Group Snapshot, Get details of Volume Group Snapshot, Modify Volume Group Snapshot, Delete an existing Volume Group Snapshot, Create a new Volume Snapshot, Get details of Volume Snapshot, Modify Volume Snapshot, Delete an existing Volume Snapshot.\nParameters   Parameter Type Required Default Choices Description   snapshot_name  str      The name of the Snapshot. Either snapshot name or ID is required.    snapshot_id  str      The ID of the Snapshot. Either snapshot ID or Snapshot name is required.    volume  str      The volume. This could be the volume name or ID.    volume_group  str      The volume group. This could be the volume group name or ID.    new_snapshot_name  str      The new name of the Snapshot.    desired_retention  str      The retention value for the Snapshot. If the retention value is not specified, the Snapshot details would be returned. To create a Snapshot, either a retention or expiration timestamp must be given. If the Snapshot does not have any retention value - specify it as 'None'.    retention_unit  str      hours days   The unit for retention. If this unit is not specified, 'hours' is taken as default retention_unit. If desired_retention is specified, expiration_timestamp cannot be specified.    expiration_timestamp  str      The expiration timestamp of the Snapshot. This should be provided in UTC format, e.g 2019-07-24T10:54:54Z.    description  str      The description for the Snapshot.    state  str   True     absent present   Defines whether the Snapshot should exist or not.    array_ip  str   True     IP or FQDN of the PowerStore management system.    verifycert  bool   True     True False   Boolean variable to specify whether to validate SSL certificate or not. True - indicates that the SSL certificate should be verified. Set the environment variable REQUESTS_CA_BUNDLE to the path of the SSL certificate. False - indicates that the SSL certificate should not be verified.    user  str   True     The username of the PowerStore host.    password  str   True     The password of the PowerStore host.    Examples  - name: Create a volume snapshot on PowerStore dellemc_powerstore_snapshot: array_ip: \u0026quot;{{mgmt_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; snapshot_name: \u0026quot;{{snapshot_name}}\u0026quot; volume: \u0026quot;{{volume}}\u0026quot; description: \u0026quot;{{description}}\u0026quot; desired_retention: \u0026quot;{{desired_retention}}\u0026quot; retention_unit: \u0026quot;{{retention_unit_days}}\u0026quot; state: \u0026quot;{{state_present}}\u0026quot; - name: Get details of a volume snapshot dellemc_powerstore_snapshot: array_ip: \u0026quot;{{mgmt_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; snapshot_name: \u0026quot;{{snapshot_name}}\u0026quot; volume: \u0026quot;{{volume}}\u0026quot; state: \u0026quot;{{state_present}}\u0026quot; - name: Rename volume snapshot dellemc_powerstore_snapshot: array_ip: \u0026quot;{{mgmt_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; snapshot_name: \u0026quot;{{snapshot_name}}\u0026quot; new_snapshot_name: \u0026quot;{{new_snapshot_name}}\u0026quot; volume: \u0026quot;{{volume}}\u0026quot; state: \u0026quot;{{state_present}}\u0026quot; - name: Delete volume snapshot dellemc_powerstore_snapshot: array_ip: \u0026quot;{{mgmt_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; snapshot_name: \u0026quot;{{new_snapshot_name}}\u0026quot; volume: \u0026quot;{{volume}}\u0026quot; state: \u0026quot;{{state_absent}}\u0026quot; - name: Create a volume group snapshot on PowerStore dellemc_powerstore_snapshot: array_ip: \u0026quot;{{mgmt_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; snapshot_name: \u0026quot;{{snapshot_name}}\u0026quot; volume_group: \u0026quot;{{volume_group}}\u0026quot; description: \u0026quot;{{description}}\u0026quot; expiration_timestamp: \u0026quot;{{expiration_timestamp}}\u0026quot; state: \u0026quot;{{state_present}}\u0026quot; - name: Get details of a volume group snapshot dellemc_powerstore_snapshot: array_ip: \u0026quot;{{mgmt_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; snapshot_name: \u0026quot;{{snapshot_name}}\u0026quot; volume_group: \u0026quot;{{volume_group}}\u0026quot; state: \u0026quot;{{state_present}}\u0026quot; - name: Modify volume group snapshot expiration timestamp dellemc_powerstore_snapshot: array_ip: \u0026quot;{{mgmt_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; snapshot_name: \u0026quot;{{snapshot_name}}\u0026quot; volume_group: \u0026quot;{{volume_group}}\u0026quot; description: \u0026quot;{{description}}\u0026quot; expiration_timestamp: \u0026quot;{{expiration_timestamp_new}}\u0026quot; state: \u0026quot;{{state_present}}\u0026quot; - name: Rename volume group snapshot dellemc_powerstore_snapshot: array_ip: \u0026quot;{{mgmt_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; snapshot_name: \u0026quot;{{snapshot_name}}\u0026quot; new_snapshot_name: \u0026quot;{{new_snapshot_name}}\u0026quot; volume_group: \u0026quot;{{volume_group}}\u0026quot; state: \u0026quot;{{state_present}}\u0026quot; - name: Delete volume group snapshot dellemc_powerstore_snapshot: array_ip: \u0026quot;{{mgmt_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; snapshot_name: \u0026quot;{{new_snapshot_name}}\u0026quot; volume_group: \u0026quot;{{volume_group}}\u0026quot; state: \u0026quot;{{state_absent}}\u0026quot; Return Values   Key Type Returned Description   changed   bool   always   Whether or not the resource has changed    create_vg_snap   bool   When value exists   A boolean flag to indicate whether volume group snapshot got created.    create_vol_snap   bool   When value exists   A boolean flag to indicate whether volume snapshot got created.    delete_vg_snap   bool   When value exists   A boolean flag to indicate whether volume group snapshot got deleted.    delete_vol_snap   bool   When value exists   A boolean flag to indicate whether volume snapshot got deleted.    modify_vg_snap   bool   When value exists   A boolean flag to indicate whether volume group snapshot got modified.    modify_vol_snap   bool   When value exists   A boolean flag to indicate whether volume snapshot got modified.    snap_details   complex   When snapshot exists   Details of the snapshot    \u0026nbsp; creation_timestamp   str  success  The creation timestamp of the snapshot.    \u0026nbsp; description   str  success  Description about the snapshot.    \u0026nbsp; id   str  success  The system generated ID given to the snapshot.    \u0026nbsp; name   str  success  Name of the snapshot.    \u0026nbsp; performance_policy_id   str  success  The performance policy for the snapshot.    \u0026nbsp; protection_data   complex  success  The protection data of the snapshot.    \u0026nbsp; \u0026nbsp; expiration_timestamp   str  success  The expiration timestamp of the snapshot.    \u0026nbsp; protection_policy_id   str  success  The protection policy of the snapshot.    \u0026nbsp; size   int  success  Size of the snapshot.    \u0026nbsp; state   str  success  The state of the snapshot.    \u0026nbsp; type   str  success  The type of the snapshot.    \u0026nbsp; volumes   complex  success  The volumes details of the volume group snapshot.    \u0026nbsp; \u0026nbsp; id   str  success  The system generated ID given to the volume associated with the volume group.    Authors  Rajshree Khare (@khareRajshree) ansible.team@dell.com Prashant Rakheja (@prashant-dell) ansible.team@dell.com   Replication Rule Module Replication rule operations on a PowerStore storage system.\nSynopsis Performs all replication rule operations on a PowerStore Storage System. This module supports get details of an existing replication rule. Create new replication rule for all supported parameters. Modify replication rule with supported parameters. Delete a specific replication rule.\nParameters   Parameter Type Required Default Choices Description   replication_rule_name  str      Name of the replication rule. Required during creation of a replication rule. replication_rule_name and replication_rule_id are mutually exclusive.    replication_rule_id  str      ID of the replication rule. ID for the rule is autogenerated, cannot be passed during creation of a replication rule. replication_rule_name and replication_rule_id are mutually exclusive.    new_name  str      New name of the replication rule. Used for renaming a replication rule.    rpo  str      Five_Minutes Fifteen_Minutes Thirty_Minutes One_Hour Six_Hours Twelve_Hours One_Day   Recovery point objective (RPO), which is the acceptable amount of data, measured in units of time, that may be lost in case of a failure.    alert_threshold  int      Acceptable delay between the expected and actual replication sync intervals. The system generates an alert if the delay between the expected and actual sync exceeds this threshold. During creation, if not passed, then by default one RPO in minutes will be passed. The range of integers supported are in between 0 and 1440 (inclusive of both).    remote_system  str      ID or name of the remote system to which this rule will replicate the associated resources.    state  str   True     present absent   The state of the replication rule after the task is performed. For Delete operation only, it should be set to \"absent\". For all Create, Modify or Get details operations it should be set to \"present\".    array_ip  str   True     IP or FQDN of the PowerStore management system.    verifycert  bool   True     True False   Boolean variable to specify whether to validate SSL certificate or not. True - indicates that the SSL certificate should be verified. Set the environment variable REQUESTS_CA_BUNDLE to the path of the SSL certificate. False - indicates that the SSL certificate should not be verified.    user  str   True     The username of the PowerStore host.    password  str   True     The password of the PowerStore host.    Examples - name: Create new replication rule dellemc_powerstore_replicationrule: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; replication_rule_name: \u0026quot;sample_replication_rule\u0026quot; rpo: \u0026quot;Five_Minutes\u0026quot; alert_threshold: \u0026quot;15\u0026quot; remote_system: \u0026quot;WN-D8877\u0026quot; state: \u0026quot;present\u0026quot; - name: Modify existing replication rule dellemc_powerstore_replicationrule: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; replication_rule_name: \u0026quot;sample_replication_rule\u0026quot; new_name: \u0026quot;new_sample_replication_rule\u0026quot; rpo: \u0026quot;One_Hour\u0026quot; alert_threshold: \u0026quot;60\u0026quot; remote_system: \u0026quot;WN-D0517\u0026quot; state: \u0026quot;present\u0026quot; - name: Get details of replication rule dellemc_powerstore_replicationrule: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; replication_rule_id: \u0026quot;{{id}}\u0026quot; state: \u0026quot;present\u0026quot; - name: Delete an existing replication rule dellemc_powerstore_replicationrule: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; replication_rule_name: \u0026quot;new_sample_replication_rule\u0026quot; state: \u0026quot;absent\u0026quot; Return Values   Key Type Returned Description   changed   bool   always   Whether or not the resource has changed.    replication_rule_details   complex   When replication rule exists   Details of the replication rule.    \u0026nbsp; alert_threshold   int  success  Acceptable delay in minutes between the expected and actual replication sync intervals.    \u0026nbsp; id   str  success  The system generated ID of the replication rule.    \u0026nbsp; name   str  success  Name of the replication rule.    \u0026nbsp; remote_system_id   str  success  Unique identifier of the remote system to which this rule will replicate the associated resources.    \u0026nbsp; remote_system_name   str  success  Name of the remote system to which this rule will replicate the associated resources.    \u0026nbsp; rpo   str  success  Recovery point objective (RPO), which is the acceptable amount of data, measured in units of time, that may be lost in case of a failure.    Authors  P Srinivas Rao (@srinivas-rao5) ansible.team@dell.com   Network Module Manage networks on Dell EMC PowerStore.\nSynopsis Managing networks on PowerStore Storage System includes getting details of network, modifying attributes of network and adding/removing IP ports to/from storage network.\nParameters   Parameter Type Required Default Choices Description   network_name  str      The name of the network. This parameter is added in 2.0.0.0. Specify either network_name or network_id for any operation.    network_id  str      The ID of the network.    vlan_id  int      The ID of the VLAN.    gateway  str      Network gateway in IPv4 or IPv6 format, corresponding to the network's IP version. Specify empty string to remove the gateway.    prefix_length  int      Network prefix length.    new_cluster_mgmt_address  str      New cluster management IP address in IPv4 or IPv6 format, corresponding to the network's IP version.    storage_discovery_address  str      New storage discovery IP address in IPv4 or IPv6 format, corresponding to the network's IP version. Specify empty string to remove the storage discovery IP address.    mtu  int      Maximum Transmission Unit (MTU) packet size set on network interfaces, in bytes.    new_name  str      New name of the network.    addresses  list elements: dict      IP addresses to add/remove in IPv4 or IPv6 format.    \u0026nbsp; current_address   str      Existing IPv4/IPv6 address.    \u0026nbsp; new_address   str      New IPv4/IPv6 address.    ports  list elements: str      Ports to be mapped/unmapped to/from the storage network.    port_state  str      present-in-network absent-in-network   Specifies whether port should mapped/unmapped from the storage network.    vasa_provider_credentials  dict      Credentials required for re-registering the VASA vendor provider during the reconfiguration of the cluster management IP address.    \u0026nbsp; username   str   True     VASA vendor provider user name.    \u0026nbsp; password   str   True     VASA vendor provider password.    esxi_credentials  list elements: dict      Credentials required for re-registering the ESXi hosts in the vCenter. It should be passed only when ESXi host addresses or management network VLAN / prefix / gateway are changed during the reconfiguration of the PowerStore X model appliances. This parameter is applicable only for PowerStore X model. This parameter will be ignored if passed for PowerStore T model.    \u0026nbsp; node_id   str   True     Node identifier corresponding to the ESXi host.    \u0026nbsp; password   str   True     ESXi host root password.    wait_for_completion  bool    False    Flag to indicate if the operation should be run synchronously or asynchronously. True signifies synchronous execution. By default, modify operation will run asynchronously.    state  str   True     absent present   Define whether the network exist or not.    array_ip  str   True     IP or FQDN of the PowerStore management system.    verifycert  bool   True     True False   Boolean variable to specify whether to validate SSL certificate or not. True - indicates that the SSL certificate should be verified. Set the environment variable REQUESTS_CA_BUNDLE to the path of the SSL certificate. False - indicates that the SSL certificate should not be verified.    user  str   True     The username of the PowerStore host.    password  str   True     The password of the PowerStore host.    Notes  It is recommended to perform task asynchronously while changing cluster management address. Idempotency is not supported for vasa_provider_credentials and esxi_credentials. For PowerStore X model, vasa_provider_credentials has to be specified along with new_cluster_mgmt_address.  Examples - name: Get network details using ID dellemc_powerstore_network: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; network_id: \u0026quot;NW1\u0026quot; state: \u0026quot;present\u0026quot; - name: Get network details using name dellemc_powerstore_network: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; network_name: \u0026quot;Default Management Network\u0026quot; state: \u0026quot;present\u0026quot; - name: Rename the storage network dellemc_powerstore_network: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; network_name: \u0026quot;Default Storage Network\u0026quot; new_name: \u0026quot;iSCSI Network\u0026quot; wait_for_completion: True state: \u0026quot;present\u0026quot; - name: Replace the IP's in the management network and re-register VASA vendor provider dellemc_powerstore_network: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; network_id: \u0026quot;NW1\u0026quot; addresses: - current_address: \u0026quot;100.230.x.x\u0026quot; new_address: \u0026quot;100.230.x.x\u0026quot; - current_address: \u0026quot;100.230.x.x\u0026quot; new_address: \u0026quot;100.230.x.x\u0026quot; - current_address: \u0026quot;100.230.x.x\u0026quot; new_address: \u0026quot;100.230.x.x\u0026quot; new_cluster_mgmt_address: \u0026quot;100.230.x.x\u0026quot; vasa_provider_credentials: username: \u0026quot;vmadmin\u0026quot; password: \u0026quot;{{vm_password}}\u0026quot; state: \u0026quot;present\u0026quot; - name: Map port to the storage network dellemc_powerstore_network: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; network_id: \u0026quot;NW6\u0026quot; ports: - \u0026quot;IP1\u0026quot; port_state: \u0026quot;present-in-network\u0026quot; state: \u0026quot;present\u0026quot; - name: Unmap port from the storage network dellemc_powerstore_network: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; network_id: \u0026quot;NW6\u0026quot; ports: - \u0026quot;IP1\u0026quot; port_state: \u0026quot;absent-in-network\u0026quot; state: \u0026quot;present\u0026quot; - name: Replace the IP's in the management network and re-register VASA vendor provider for X model dellemc_powerstore_network: array_ip: \u0026quot;{{array_ip1}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; network_id: \u0026quot;NW1\u0026quot; vlan_id: 0 gateway: \u0026quot;100.231.x.x\u0026quot; mtu: 1500 prefix_length: 24 addresses: - current_address: \u0026quot;100.230.x.x\u0026quot; new_address: \u0026quot;100.231.x.x\u0026quot; - current_address: \u0026quot;100.230.x.x\u0026quot; new_address: \u0026quot;100.231.x.x\u0026quot; - current_address: \u0026quot;100.230.x.x\u0026quot; new_address: \u0026quot;100.231.x.x\u0026quot; - current_address: \u0026quot;100.230.x.x\u0026quot; new_address: \u0026quot;100.231.x.x\u0026quot; - current_address: \u0026quot;100.230.x.x\u0026quot; new_address: \u0026quot;100.231.x.x\u0026quot; new_cluster_mgmt_address: \u0026quot;100.231.x.x\u0026quot; vasa_provider_credentials: username: \u0026quot;vmadmin\u0026quot; password: \u0026quot;{{vm_password}}\u0026quot; esxi_credentials: - \u0026quot;node_id\u0026quot;: \u0026quot;N1\u0026quot; \u0026quot;password\u0026quot;: \u0026quot;{{node_password}}\u0026quot; - \u0026quot;node_id\u0026quot;: \u0026quot;N2\u0026quot; \u0026quot;password\u0026quot;: \u0026quot;{{node_password}}\u0026quot; state: \u0026quot;present\u0026quot; Return Values   Key Type Returned Description   changed   bool   always   Whether or not the resource has changed.    job_details   complex   When asynchronous task is performed.   The job details.    \u0026nbsp; id   str  success  The ID of the job.    network_details   complex   When network exists.   The network details.    \u0026nbsp; cluster_details   complex  success  The details of the cluster.    \u0026nbsp; \u0026nbsp; appliance_count   int  success  Number of appliances configured in this cluster.    \u0026nbsp; \u0026nbsp; id   str  success  The unique identifier of the cluster.    \u0026nbsp; \u0026nbsp; management_address   str  success  The floating management IP address for the cluster in IPv4 or IPv6 format.    \u0026nbsp; \u0026nbsp; name   str  success  The name of the cluster.    \u0026nbsp; \u0026nbsp; storage_discovery_address   str  success  The floating storage discovery IP address for the cluster in IPv4 or IPv6 format.    \u0026nbsp; gateway   str  success  The gateway of the network.    \u0026nbsp; id   str  success  The ID of the network.    \u0026nbsp; ip_version   str  success  IP protocol version    \u0026nbsp; member_ips   complex  success  Properties of the IP pool address.    \u0026nbsp; \u0026nbsp; address   str  success  IP address value, in IPv4 or IPv6 format.    \u0026nbsp; \u0026nbsp; appliance_id   str  success  Unique identifier of the appliance to which the IP address belongs.    \u0026nbsp; \u0026nbsp; id   str  success  Unique identifier of the IP address.    \u0026nbsp; \u0026nbsp; ip_port_id   str  success  Unique identifier of the port that uses this IP address to provide access to storage network services, such as iSCSI. This attribute can be set only for an IP address used by networks of type Storage.    \u0026nbsp; \u0026nbsp; name   str  success  Name of the IP address.    \u0026nbsp; \u0026nbsp; network_id   str  success  Unique identifier of the network to which the IP address belongs.    \u0026nbsp; \u0026nbsp; node_id   str  success  Unique identifier of the cluster node to which the IP address belongs.    \u0026nbsp; \u0026nbsp; purposes   list  success  IP address purposes.    \u0026nbsp; mtu   int  success  Maximum Transmission Unit (MTU) packet size set on network interfaces, in bytes.    \u0026nbsp; name   str  success  The name of the network.    \u0026nbsp; prefix_length   int  success  Network prefix length.    \u0026nbsp; purposes   list  success  Purposes of the network.    \u0026nbsp; type   str  success  Network type    \u0026nbsp; vcenter_details   complex  success  Details of the vcenter.    \u0026nbsp; \u0026nbsp; address   str  success  IP address of vCenter host, in IPv4, IPv6, or hostname format.    \u0026nbsp; \u0026nbsp; id   str  success  Unique identifier of the vCenter instance.    \u0026nbsp; \u0026nbsp; instance_uuid   str  success  UUID instance of the vCenter.    \u0026nbsp; \u0026nbsp; username   str  success  User name to login to vCenter.    \u0026nbsp; \u0026nbsp; vendor_provider_status   str  success  General status of the VASA vendor provider in vCenter.    \u0026nbsp; vlan_id   int  success  VLAN identifier.    Authors  Akash Shendge (@shenda1) ansible.team@dell.com   Protection Policy Module Perform Protection policy operations on PowerStore storage system.\nSynopsis Performs all protection policy operations on PowerStore Storage System. This modules supports get details of an existing protection policy. Create new protection policy with existing Snapshot Rule or replication rule. Modify protection policy to change the name and description, and add or remove existing snapshot rules/ replication rule. Delete an existing protection policy.\nParameters   Parameter Type Required Default Choices Description   name  str      String variable. Indicates the name of the protection policy.    protectionpolicy_id  str      String variable. Indicates the id of the protection policy.    new_name  str      String variable. Indicates the new name of the protection policy. Used for renaming operation    snapshotrules  list elements: str      List of strings to specify the name or ids of snapshot rules which are to be added or removed, to or from, the protection policy.    replicationrule  str      The name or ids of the replcation rule which is to be added to the protection policy. To remove the replication rule, an empty string has to be passed.    description  str      String variable. Indicates the description of the protection policy.    state  str   True     present absent   String variable. Indicates the state of protection policy. For Delete operation only, it should be set to \"absent\" For all other operations like Create, Modify or Get details, it should be set to \"present\"    snapshotrule_state  str      present-in-policy absent-in-policy   String variable. Indicates the state of a snapshotrule in a protection policy. When snapshot rules are specified, this variable is required. present-in-policy indicates to add to protection policy. absent-in-policy indicates to remove from protection policy.    array_ip  str   True     IP or FQDN of the PowerStore management system.    verifycert  bool   True     True False   Boolean variable to specify whether to validate SSL certificate or not. True - indicates that the SSL certificate should be verified. Set the environment variable REQUESTS_CA_BUNDLE to the path of the SSL certificate. False - indicates that the SSL certificate should not be verified.    user  str   True     The username of the PowerStore host.    password  str   True     The password of the PowerStore host.    Notes  Before deleting a protection policy, the replication rule has to be removed from the protection policy.  Examples - name: Create a protection policy with snapshot rule and replication rule dellemc_powerstore_protectionpolicy: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; name: \u0026quot;{{name}}\u0026quot; description: \u0026quot;{{description}}\u0026quot; snapshotrules: - \u0026quot;Ansible_test_snap_rule_1\u0026quot; replicationrule: \u0026quot;ansible_replication_rule_1\u0026quot; snapshotrule_state: \u0026quot;present-in-policy\u0026quot; state: \u0026quot;present\u0026quot; - name : Modify protection policy, change name dellemc_powerstore_protectionpolicy: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; name: \u0026quot;{{name}}\u0026quot; new_name: \u0026quot;{{new_name}}\u0026quot; state: \u0026quot;present\u0026quot; - name : Modify protection policy, add snapshot rule dellemc_powerstore_protectionpolicy: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; name: \u0026quot;{{name}}\u0026quot; snapshotrules: - \u0026quot;Ansible_test_snaprule_1\u0026quot; snapshotrule_state: \u0026quot;present-in-policy\u0026quot; state: \u0026quot;present\u0026quot; - name : Modify protection policy, remove snapshot rule, replication rule dellemc_powerstore_protectionpolicy: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; name: \u0026quot;{{name}}\u0026quot; snapshotrules: - \u0026quot;Ansible_test_to_be_removed\u0026quot; replicationrule: \u0026quot;\u0026quot; snapshotrule_state: \u0026quot;absent-in-policy\u0026quot; state: \u0026quot;present\u0026quot; - name : Get details of protection policy by name dellemc_powerstore_protectionpolicy: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; name: \u0026quot;{{name}}\u0026quot; state: \u0026quot;present\u0026quot; - name : Get details of protection policy by ID dellemc_powerstore_protectionpolicy: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; protectionpolicy_id: \u0026quot;{{protectionpolicy_id}}\u0026quot; state: \u0026quot;present\u0026quot; - name : Delete protection policy dellemc_powerstore_protectionpolicy: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; name: \u0026quot;{{name}}\u0026quot; state: \u0026quot;absent\u0026quot; Return Values   Key Type Returned Description   changed   bool   always   Whether or not the resource has changed.    protectionpolicy_details   complex   When protection policy exists   Details of the protection policy    \u0026nbsp; description   str  success  description about the protection policy.    \u0026nbsp; id   str  success  The system generated ID given to the protection policy.    \u0026nbsp; name   str  success  Name of the protection policy.    \u0026nbsp; replication_rules   complex  success  The replication rule details of the protection policy.    \u0026nbsp; \u0026nbsp; id   str  success  The replication rule ID of the protection policy.    \u0026nbsp; \u0026nbsp; name   str  success  The replication rule name of the protection policy.    \u0026nbsp; snapshot_rules   complex  success  The snapshot rules details of the protection policy.    \u0026nbsp; \u0026nbsp; id   str  success  The snapshot rule ID of the protection policy.    \u0026nbsp; \u0026nbsp; name   str  success  The snapshot rule name of the protection policy.    \u0026nbsp; type   str  success  The type for the protection policy    Authors  Arindam Datta (@dattaarindam) ansible.team@dell.com P Srinivas Rao (@srinivas-rao5) ansible.team@dell.com   Filesystem Snapshot Module Manage Filesystem Snapshots on Dell EMC PowerStore\nSynopsis Managing filesystem snapshots on PowerStore Storage System includes creating new filesystem snapshot, getting details of filesystem snapshot, modifying attributes of filesystem snapshot and deleting filesystem snapshot.\nParameters   Parameter Type Required Default Choices Description   snapshot_name  str      The name of the filesystem snapshot. Mandatory for create operation. Specify either snapshot name or ID (but not both) for any operation.    snapshot_id  str      The ID of the Snapshot.    filesystem  str      The ID/Name of the filesystem for which snapshot will be taken. If filesystem name is specified, then nas_server is required to uniquely identify the filesystem. Mandatory for create operation.    nas_server  str      The NAS server, this could be the name or ID of the NAS server.    description  str      The description for the filesystem snapshot.    desired_retention  int      The retention value for the Snapshot. If the desired_retention/expiration_timestamp is not mentioned during creation, snapshot will be created with unlimited retention. Maximum supported desired retention is 31 days.    retention_unit  str    hours    hours days   The unit for retention.    expiration_timestamp  str      The expiration timestamp of the snapshot. This should be provided in UTC format, e.g 2020-07-24T10:54:54Z. To remove the expiration timestamp, specify it as an empty string.    access_type  str      SNAPSHOT PROTOCOL   Specifies whether the snapshot directory or protocol access is granted to the filesystem snapshot. For create operation, if access_type is not specified, snapshot will be created with 'SNAPSHOT' access type.    state  str   True     absent present   Define whether the filesystem snapshot should exist or not.    array_ip  str   True     IP or FQDN of the PowerStore management system.    verifycert  bool   True     True False   Boolean variable to specify whether to validate SSL certificate or not. True - indicates that the SSL certificate should be verified. Set the environment variable REQUESTS_CA_BUNDLE to the path of the SSL certificate. False - indicates that the SSL certificate should not be verified.    user  str   True     The username of the PowerStore host.    password  str   True     The password of the PowerStore host.    Examples - name: Create filesystem snapshot dellemc_powerstore_filesystem_snapshot: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; snapshot_name: \u0026quot;sample_filesystem_snapshot\u0026quot; nas_server: \u0026quot;ansible_nas_server\u0026quot; filesystem: \u0026quot;sample_filesystem\u0026quot; desired_retention: 20 retention_unit: \u0026quot;days\u0026quot; state: \u0026quot;present\u0026quot; - name: Get the details of filesystem snapshot dellemc_powerstore_filesystem_snapshot: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; snapshot_id: \u0026quot;{{fs_snapshot_id}}\u0026quot; state: \u0026quot;present\u0026quot; - name: Modify the filesystem snapshot dellemc_powerstore_filesystem_snapshot: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; snapshot_name: \u0026quot;sample_filesystem_snapshot\u0026quot; nas_server: \u0026quot;ansible_nas_server\u0026quot; description: \u0026quot;modify description\u0026quot; expiration_timestamp: \u0026quot;\u0026quot; state: \u0026quot;present\u0026quot; - name: Delete filesystem snapshot dellemc_powerstore_filesystem_snapshot: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; snapshot_id: \u0026quot;{{fs_snapshot_id}}\u0026quot; state: \u0026quot;absent\u0026quot; Return Values   Key Type Returned Description   changed   bool   always   Whether or not the resource has changed    create_fs_snap   bool   always   Whether or not the resource has created    delete_fs_snap   bool   always   Whether or not the resource has deleted    filesystem_snap_details   dict   When snapshot exists.   Details of the snapshot.    \u0026nbsp; access_type   str  success  Displays the type of access allowed to the snapshot.    \u0026nbsp; creation_timestamp   str  success  The date and time the snapshot was created.    \u0026nbsp; description   str  success  Description of the filesystem snapshot.    \u0026nbsp; expiration_timestamp   str  success  The date and time the snapshot is due to be automatically deleted by the system.    \u0026nbsp; id   str  success  Unique identifier of the filesystem snapshot instance.    \u0026nbsp; name   str  success  The name of the snapshot.    \u0026nbsp; nas_server   dict  success  Details of NAS server on which snapshot is present.    \u0026nbsp; \u0026nbsp; id   str  success  ID of the NAS server.    \u0026nbsp; \u0026nbsp; name   str  success  Name of the NAS server    \u0026nbsp; parent_id   str  success  ID of the filesystem on which snapshot is taken.    \u0026nbsp; parent_name   str  success  Name of the filesystem on which snapshot is taken.    modify_fs_snap   bool   always   Whether or not the resource has modified    Authors  Akash Shendge (@shenda1) ansible.team@dell.com   Host Module Manage host on PowerStore storage system.\nSynopsis Managing host on PowerStore storage system includes create host with a set of initiators, add/remove initiators from host, rename host and delete host.\nParameters   Parameter Type Required Default Choices Description   host_name  str      The host name. This value must contain 128 or fewer printable Unicode characters. Creation of an empty host is not allowed. Required when creating a host. Use either host_id or host_name for modify and delete tasks.    host_id  str      The 36 character long host id automatically generated when a host is created. Use either host_id or host_name for modify and delete tasks. host_id cannot be used while creating host, as it is generated by the array after creation of host.    os_type  str      Windows Linux ESXi AIX HP-UX Solaris   Operating system of the host. Required when creating a host OS type cannot be modified for a given host.    initiators  list elements: str      List of Initiator WWN or IQN to be added or removed from the host. Subordinate initiators in a host can only be of one type, either FC or iSCSI. Required when creating a host.    state  str   True     absent present   Define whether the host should exist or not. present - indicates that the host should exist in system. absent - indicates that the host should not exist in system.    initiator_state  str      present-in-host absent-in-host   Define whether the initiators should be present or absent in host. present-in-host - indicates that the initiators should exist on host. absent-in-host - indicates that the initiators should not exist on host. Required when creating a host with initiators or adding/removing initiators to/from existing host.    new_name  str      The new name of host for renaming function. This value must contain 128 or fewer printable Unicode characters. Cannot be specified when creating a host.    array_ip  str   True     IP or FQDN of the PowerStore management system.    verifycert  bool   True     True False   Boolean variable to specify whether to validate SSL certificate or not. True - indicates that the SSL certificate should be verified. Set the environment variable REQUESTS_CA_BUNDLE to the path of the SSL certificate. False - indicates that the SSL certificate should not be verified.    user  str   True     The username of the PowerStore host.    password  str   True     The password of the PowerStore host.    Notes  Only completely and correctly configured iSCSI initiators can be associated with a host.  Examples  - name: Create host dellemc_powerstore_host: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; host_name: \u0026quot;{{host_name}}\u0026quot; os_type: 'Windows' initiators: -21:00:00:24:ff:31:e9:fc state: 'present' initiator_state: 'present-in-host' - name: Get host details by name dellemc_powerstore_host: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; host_name: \u0026quot;{{host_name}}\u0026quot; state: 'present' - name: Get host details by id dellemc_powerstore_host: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; host_id: \u0026quot;{{host_id}}\u0026quot; state: 'present' - name: Add initiators to host dellemc_powerstore_host: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; host_name: \u0026quot;{{host_name}}\u0026quot; initiators: -21:00:00:24:ff:31:e9:ee initiator_state: 'present-in-host' state: 'present' - name: Remove initiators from host dellemc_powerstore_host: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; host_name: \u0026quot;{{host_name}}\u0026quot; initiators: -21:00:00:24:ff:31:e9:ee initiator_state: 'absent-in-host' state: 'present' - name: Rename host dellemc_powerstore_host: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; host_name: \u0026quot;{{host_name}}\u0026quot; new_name: \u0026quot;{{new_host_name}}\u0026quot; state: 'present' - name: Delete host dellemc_powerstore_host: array_ip: \u0026quot;{{array_ip}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user: \u0026quot;{{user}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; host_name: \u0026quot;{{new_host_name}}\u0026quot; state: 'absent' Return Values   Key Type Returned Description   changed   bool   always   Whether or not the resource has changed.    host_details   complex   When host exists   Details of the host.    \u0026nbsp; description   str  success  Description about the host.    \u0026nbsp; host_group_id   str  success  The host group ID of host.    \u0026nbsp; host_initiators   complex  success  The initiator details of this host.    \u0026nbsp; \u0026nbsp; port_name   str  success  Name of the port.    \u0026nbsp; \u0026nbsp; port_type   str  success  The type of the port.    \u0026nbsp; id   str  success  The system generated ID given to the host.    \u0026nbsp; name   str  success  Name of the host.    \u0026nbsp; os_type   str  success  The os type of the host.    Authors  Manisha Agrawal (@agrawm3) ansible.team@dell.com   ","excerpt":"Ansible Modules for Dell EMC PowerStore Product Guide 1.3 © 2021 Dell Inc. or its subsidiaries. All …","ref":"/ansible-docs/docs/storage/platforms/powerstore/product-guide/","title":"Product Guide"},{"body":"Ansible Modules for Dell EMC Unity Product Guide 1.2.0 © 2021 Dell Inc. or its subsidiaries. All rights reserved. Dell, EMC, and other trademarks are trademarks of Dell Inc. or its subsidiaries. Other trademarks may be trademarks of their respective owners.\n Contents  NFS Module  Synopsis Parameters Examples Return Values Authors   Volume Module  Synopsis Parameters Examples Return Values Authors   NAS Server Module  Synopsis Parameters Examples Return Values Authors   Quota Tree Module  Synopsis Parameters Examples Return Values Authors   File System Module  Synopsis Parameters Notes Examples Return Values Authors   Storage Pool Module  Synopsis Parameters Notes Examples Return Values Authors   Gatherfacts Module  Synopsis Parameters Examples Return Values Authors   User Quota Module  Synopsis Parameters Examples Return Values Authors   Filesystem Snapshot Module  Synopsis Parameters Notes Examples Return Values Authors   Snapshot Module  Synopsis Parameters Examples Return Values Authors   SMB Share Module  Synopsis Parameters Notes Examples Return Values Authors   Host Module  Synopsis Parameters Examples Return Values Authors   Consistency Group Module  Synopsis Parameters Examples Return Values Authors   Snapshot Schedule Module  Synopsis Parameters Notes Examples Return Values Authors     NFS Module Manage NFS export on Unity storage system\nSynopsis Managing NFS export on Unity storage system includes- Create new NFS export, Modify NFS export attributes, Display NFS export details, Delete NFS export\nParameters   Parameter Type Required Default Choices Description   nfs_export_name  str      Name of the nfs export. Mandatory for create operation. Specify either nfs_export_name or nfs_export_id(but not both) for any operation.    nfs_export_id  str      ID of the nfs export. This is a unique ID generated by Unity storage system.    filesystem_name  str      Name of the filesystem for which NFS export will be created. Either filesystem or snapshot is required for creation of the NFS. If filesystem name is specified, then nas_server is required to uniquely identify the filesystem If filesystem parameter is provided, then snapshot cannot be specified.    filesystem_id  str      ID of the filesystem This is a unique ID generated by Unity storage system.    snapshot_name  str      Name of the snapshot for which NFS export will be created. Either filesystem or snapshot is required for creation of the NFS export. If snapshot parameter is provided, then filesystem cannot be specified.    snapshot_id  str      ID of the snapshot. This is a unique ID generated by Unity storage system.    nas_server_name  str      Name of the NAS server on which filesystem will be hosted.    nas_server_id  str      ID of the NAS server on which filesystem will be hosted.    path  str      Local path to export relative to the NAS server root. With NFS, each export of a file_system or file_snap must have a unique local path. Mandatory while creating NFS export.    description  str      Description of the NFS export. Optional parameter when creating a NFS export. To modify description, pass the new value in description field. To remove description, pass the empty value in description field.    host_state  str      present-in-export absent-in-export   Define whether the hosts can access the NFS export. Required when adding or removing access of hosts from the export.    anonymous_uid  int      Specifies the user ID of the anonymous account. If not specified at the time of creation, it will be set to 4294967294.    anonymous_gid  int      Specifies the group ID of the anonymous account. If not specified at the time of creation, it will be set to 4294967294.    state  str   True     absent present   State variable to determine whether NFS export will exist or not.    default_access  str      NO_ACCESS READ_ONLY READ_WRITE ROOT READ_ONLY_ROOT   Default access level for all hosts that can access the NFS export. For hosts that need different access than the default, they can be configured by adding to the list. If default_access is not mentioned during creation, then NFS export will be created with NO_ACCESS.    min_security  str      SYS KERBEROS KERBEROS_WITH_INTEGRITY KERBEROS_WITH_ENCRYPTION   NFS enforced security type for users accessing a NFS export. If not specified at the time of creation, it will be set to SYS.    no_access_hosts  list elements: dict      Hosts with no access to the NFS export. List of dictionaries. Each dictionary will have any of the keys from host_name, host_id, and ip_address.    \u0026nbsp; host_name   str   False     Name of the host.    \u0026nbsp; host_id   str   False     ID of the host.    \u0026nbsp; ip_address   str   False     IP address of the host.    read_only_hosts  list elements: dict      Hosts with read-only access to the NFS export. List of dictionaries. Each dictionary will have any of the keys from host_name, host_id, and ip_address    \u0026nbsp; host_name   str   False     Name of the host.    \u0026nbsp; host_id   str   False     ID of the host.    \u0026nbsp; ip_address   str   False     IP address of the host.    read_only_root_hosts  list elements: dict      Hosts with read-only for root user access to the NFS export. List of dictionaries. Each dictionary will have any of the keys from host_name, host_id, and ip_address    \u0026nbsp; host_name   str   False     Name of the host.    \u0026nbsp; host_id   str   False     ID of the host.    \u0026nbsp; ip_address   str   False     IP address of the host.    read_write_hosts  list elements: dict      Hosts with read and write access to the NFS export. List of dictionaries. Each dictionary will have any of the keys from host_name, host_id, and ip_address.    \u0026nbsp; host_name   str   False     Name of the host.    \u0026nbsp; host_id   str   False     ID of the host.    \u0026nbsp; ip_address   str   False     IP address of the host.    read_write_root_hosts  list elements: dict      Hosts with read and write for root user access to the NFS export. List of dictionaries. Each dictionary will have any of the keys from host_name, host_id, and ip_address.    \u0026nbsp; host_name   str   False     Name of the host.    \u0026nbsp; host_id   str   False     ID of the host.    \u0026nbsp; ip_address   str   False     IP address of the host.    unispherehost  str   True     IP or FQDN of the Unity management server.    username  str   True     The username of the Unity management server.    password  str   True     The password of the Unity management server.    verifycert  bool    True    True False   Boolean variable to specify whether or not to validate SSL certificate. True - Indicates that the SSL certificate should be verified. False - Indicates that the SSL certificate should not be verified.    port  int    443    Port number through which communication happens with Unity management server.    Examples - name: Create nfs export from filesystem dellemc_unity_nfs: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; nfs_export_name: \u0026quot;ansible_nfs_from_fs\u0026quot; path: '/' filesystem_id: \u0026quot;fs_377\u0026quot; state: \u0026quot;present\u0026quot; - name: Create nfs export from snapshot dellemc_unity_nfs: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; nfs_export_name: \u0026quot;ansible_nfs_from_snap\u0026quot; path: '/' snapshot_name: \u0026quot;ansible_fs_snap\u0026quot; state: \u0026quot;present\u0026quot; - name: Modify nfs export dellemc_unity_nfs: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; nfs_export_name: \u0026quot;ansible_nfs_from_fs\u0026quot; nas_server_id: \u0026quot;nas_3\u0026quot; description: \u0026quot;\u0026quot; default_access: \u0026quot;READ_ONLY_ROOT\u0026quot; anonymous_gid: 4294967290 anonymous_uid: 4294967290 state: \u0026quot;present\u0026quot; - name: Add host in nfs export dellemc_unity_nfs: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; nfs_export_name: \u0026quot;ansible_nfs_from_fs\u0026quot; filesystem_id: \u0026quot;fs_377\u0026quot; no_access_hosts: - host_id: \u0026quot;Host_1\u0026quot; read_only_hosts: - host_id: \u0026quot;Host_2\u0026quot; read_only_root_hosts: - host_name: \u0026quot;host_name1\u0026quot; read_write_hosts: - host_name: \u0026quot;host_name2\u0026quot; read_write_root_hosts: - ip_address: \u0026quot;1.1.1.1\u0026quot; host_state: \u0026quot;present-in-export\u0026quot; state: \u0026quot;present\u0026quot; - name: Remove host in nfs export dellemc_unity_nfs: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; nfs_export_name: \u0026quot;ansible_nfs_from_fs\u0026quot; filesystem_id: \u0026quot;fs_377\u0026quot; no_access_hosts: - host_id: \u0026quot;Host_1\u0026quot; read_only_hosts: - host_id: \u0026quot;Host_2\u0026quot; read_only_root_hosts: - host_name: \u0026quot;host_name1\u0026quot; read_write_hosts: - host_name: \u0026quot;host_name2\u0026quot; read_write_root_hosts: - ip_address: \u0026quot;1.1.1.1\u0026quot; host_state: \u0026quot;absent-in-export\u0026quot; state: \u0026quot;present\u0026quot; - name: Get nfs details dellemc_unity_nfs: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; nfs_export_id: \u0026quot;NFSShare_291\u0026quot; state: \u0026quot;present\u0026quot; - name: Delete nfs export by nfs name dellemc_unity_nfs: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; nfs_export_name: \u0026quot;ansible_nfs_name\u0026quot; nas_server_name: \u0026quot;ansible_nas_name\u0026quot; state: \u0026quot;absent\u0026quot; Return Values   Key Type Returned Description   changed   bool   always   Whether or not the resource has changed.    nfs_share_details   complex   When nfs export exists.   Details of the nfs export.    \u0026nbsp; anonymous_gid   int  success  Group ID of the anonymous account    \u0026nbsp; anonymous_uid   int  success  User ID of the anonymous account    \u0026nbsp; default_access   str  success  Default access level for all hosts that can access export    \u0026nbsp; description   str  success  Description about the nfs export    \u0026nbsp; export_paths   list  success  Export paths that can be used to mount and access export    \u0026nbsp; filesystem   complex  success  Details of the filesystem on which nfs export is present    \u0026nbsp; \u0026nbsp; UnityFileSystem   complex  success  filesystem details    \u0026nbsp; \u0026nbsp; \u0026nbsp; id   str  success  ID of the filesystem    \u0026nbsp; \u0026nbsp; \u0026nbsp; name   str  success  Name of the filesystem    \u0026nbsp; id   str  success  ID of the nfs export    \u0026nbsp; min_security   str  success  NFS enforced security type for users accessing an export    \u0026nbsp; name   str  success  Name of the nfs export    \u0026nbsp; nas_server   complex  success  Details of the nas server    \u0026nbsp; \u0026nbsp; UnityNasServer   complex  success  NAS server details    \u0026nbsp; \u0026nbsp; \u0026nbsp; id   str  success  ID of the nas server    \u0026nbsp; \u0026nbsp; \u0026nbsp; name   str  success  Name of the nas server    \u0026nbsp; no_access_hosts_string   str  success  Hosts with no access to the nfs export    \u0026nbsp; read_only_hosts_string   str  success  Hosts with read-only access to the nfs export    \u0026nbsp; read_only_root_hosts_string   str  success  Hosts with read-only for root user access to the nfs export    \u0026nbsp; read_write_hosts_string   str  success  Hosts with read and write access to the nfs export    \u0026nbsp; read_write_root_hosts_string   str  success  Hosts with read and write for root user access to export    \u0026nbsp; type   str  success  NFS export type. i.e. filesystem or snapshot    Authors  Vivek Soni (@v-soni11) ansible.team@dell.com   Volume Module Manage volume on Unity storage system\nSynopsis Managing volume on Unity storage system includes- Create new volume, Modify volume attributes, Map Volume to host, Unmap volume to host, Display volume details, Delete volume\nParameters   Parameter Type Required Default Choices Description   vol_name  str      The name of the volume. Mandatory only for create operation.    vol_id  str      The id of the volume. It can be used only for get, modify, map/unmap host, or delete operation.    pool_name  str      This is the name of the pool where the volume will be created. Either the pool_name or pool_id must be provided to create a new volume.    pool_id  str      This is the id of the pool where the volume will be created. Either the pool_name or pool_id must be provided to create a new volume.    size  int      The size of the volume.    cap_unit  str      GB TB   The unit of the volume size. It defaults to 'GB', if not specified.    description  str      Description about the volume. Description can be removed by passing empty string (\"\").    snap_schedule  str      Snapshot schedule assigned to the volume. Add/Remove/Modify the snapshot schedule for the volume.    compression  bool      Boolean variable , specifies whether or not to enable compression. Compression is supported only for thin volumes    is_thin  bool    True    Boolean variable , specifies whether or not it's a thin volume.    sp  str      SPA SPB   Storage Processor for this volume.    io_limit_policy  str      IO limit policy associated with this volume. Once it's set, it cannot be removed through ansible module but it can be changed.    host_name  str      Name of the host to be mapped/unmapped with this volume. Either host_name or host_id can be specified in one task along with mapping_state.    host_id  str      ID of the host to be mapped/unmapped with this volume. Either host_name or host_id can be specified in one task along with mapping_state.    hlu  int      Host Lun Unit to be mapped/unmapped with this volume. It's an optional parameter, hlu can be specified along with host_name or host_id and mapping_state. If hlu is not specified, unity will choose it automatically. The maximum value supported is 255.    mapping_state  str      mapped unmapped   State of host access for volume.    new_vol_name  str      New name of the volume for rename operation.    tiering_policy  str      AUTOTIER_HIGH AUTOTIER HIGHEST LOWEST   Tiering policy choices for how the storage resource data will be distributed among the tiers available in the pool.    state  str   True     absent present   State variable to determine whether volume will exist or not.    hosts  list elements: dict      Name of hosts for mapping to a volume    \u0026nbsp; host_name   str      Name of the host.    \u0026nbsp; host_id   str      ID of the host.    \u0026nbsp; hlu   str      Host Lun Unit to be mapped/unmapped with this volume. It's an optional parameter, hlu can be specified along with host_name or host_id and mapping_state. If hlu is not specified, unity will choose it automatically. The maximum value supported is 255.    unispherehost  str   True     IP or FQDN of the Unity management server.    username  str   True     The username of the Unity management server.    password  str   True     The password of the Unity management server.    verifycert  bool    True    True False   Boolean variable to specify whether or not to validate SSL certificate. True - Indicates that the SSL certificate should be verified. False - Indicates that the SSL certificate should not be verified.    port  int    443    Port number through which communication happens with Unity management server.    Examples - name: Create Volume dellemc_unity_volume: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; vol_name: \u0026quot;{{vol_name}}\u0026quot; description: \u0026quot;{{description}}\u0026quot; pool_name: \u0026quot;{{pool}}\u0026quot; size: 2 cap_unit: \u0026quot;{{cap_GB}}\u0026quot; state: \u0026quot;{{state_present}}\u0026quot; - name: Expand Volume by volume id dellemc_unity_volume: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; vol_id: \u0026quot;{{vol_id}}\u0026quot; size: 5 cap_unit: \u0026quot;{{cap_GB}}\u0026quot; state: \u0026quot;{{state_present}}\u0026quot; - name: Modify Volume, map host by host_name dellemc_unity_volume: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; vol_name: \u0026quot;{{vol_name}}\u0026quot; host_name: \u0026quot;{{host_name}}\u0026quot; hlu: 5 mapping_state: \u0026quot;{{state_mapped}}\u0026quot; state: \u0026quot;{{state_present}}\u0026quot; - name: Modify Volume, unmap host mapping by host_name dellemc_unity_volume: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; vol_name: \u0026quot;{{vol_name}}\u0026quot; host_name: \u0026quot;{{host_name}}\u0026quot; mapping_state: \u0026quot;{{state_unmapped}}\u0026quot; state: \u0026quot;{{state_present}}\u0026quot; - name: Map multiple hosts to a Volume dellemc_unity_volume: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; vol_id: \u0026quot;{{vol_id}}\u0026quot; hosts: - host_name: \u0026quot;10.226.198.248\u0026quot; hlu: 1 - host_id: \u0026quot;Host_929\u0026quot; hlu: 2 mapping_state: \u0026quot;mapped\u0026quot; state: \u0026quot;present\u0026quot; - name: Modify Volume attributes dellemc_unity_volume: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; vol_name: \u0026quot;{{vol_name}}\u0026quot; new_vol_name: \u0026quot;{{new_vol_name}}\u0026quot; tiering_policy: \u0026quot;AUTOTIER\u0026quot; compression: True state: \u0026quot;{{state_present}}\u0026quot; - name: Delete Volume by vol name dellemc_unity_volume: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; vol_name: \u0026quot;{{vol_name}}\u0026quot; state: \u0026quot;{{state_absent}}\u0026quot; - name: Delete Volume by vol id dellemc_unity_volume: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; vol_id: \u0026quot;{{vol_id}}\u0026quot; state: \u0026quot;{{state_absent}}\u0026quot; Return Values   Key Type Returned Description   changed   bool   always   Whether or not the resource has changed    volume_details   complex   When volume exists   Details of the volume    \u0026nbsp; current_sp   str  success  Current storage processor for this volume    \u0026nbsp; description   str  success  Description about the volume    \u0026nbsp; host_access   list  success  Host mapped to this volume    \u0026nbsp; id   str  success  The system generated ID given to the volume    \u0026nbsp; io_limit_policy   dict  success  IO limit policy associated with this volume    \u0026nbsp; is_data_reduction_enabled   bool  success  Whether or not compression enabled on this volume    \u0026nbsp; is_thin_enabled   bool  success  Indicates whether thin provisioning is enabled for this volume    \u0026nbsp; name   str  success  Name of the volume    \u0026nbsp; pool   dict  success  The pool in which this volume is allocated.    \u0026nbsp; size_total_with_unit   str  success  Size of the volume with actual unit.    \u0026nbsp; snap_schedule   dict  success  Snapshot schedule applied to this volume    \u0026nbsp; tiering_policy   str  success  Tiering policy applied to this volume    \u0026nbsp; wwn   str  success  The world wide name of this volume    Authors  Arindam Datta (@arindam-emc) ansible.team@dell.com   NAS Server Module Manage NAS servers on Unity storage system\nSynopsis Managing NAS servers on Unity storage system includes get, modification to the NAS servers.\nParameters   Parameter Type Required Default Choices Description   nas_server_id  str      The ID of the NAS server. nas_server_name and nas_server_id are mutually exclusive parameters. Either one is required to perform the task.    nas_server_name  str      The Name of the NAS server. nas_server_name and nas_server_id are mutually exclusive parameters. Either one is required to perform the task.    nas_server_new_name  str      The new name of the NAS server. It can be mentioned during modification of the NAS server.    is_replication_destination  bool      It specifies whether the NAS server is a replication destination. It can be mentioned during modification of the NAS server.    is_backup_only  bool      It specifies whether the NAS server is used as backup only. It can be mentioned during modification of the NAS server.    is_multiprotocol_enabled  bool      This parameter indicates whether multiprotocol sharing mode is enabled. It can be mentioned during modification of the NAS server.    allow_unmapped_user  bool      This flag is used to mandatorily disable access in case of any user mapping failure. If true, then enable access in case of any user mapping failure. If false, then disable access in case of any user mapping failure. It can be mentioned during modification of the NAS server.    default_windows_user  str      Default windows user name used for granting access in the case of Unix to Windows user mapping failure. It can be mentioned during modification of the NAS server.    default_unix_user  str      Default Unix user name used for granting access in the case of Windows to Unix user mapping failure. It can be mentioned during modification of the NAS server.    enable_windows_to_unix_username_mapping  bool      This parameter indicates whether a Unix to/from Windows user name mapping is enabled. It can be mentioned during modification of the NAS server.    is_packet_reflect_enabled  bool      If the packet has to be reflected, then this parameter has to be set to True. It can be mentioned during modification of the NAS server.    current_unix_directory_service  str      NONE NIS LOCAL LDAP LOCAL_THEN_NIS LOCAL_THEN_LDAP   This is the directory service used for querying identity information for UNIX (such as UIDs, GIDs, net groups). It can be mentioned during modification of the NAS server.    state  str   True     present absent   Define the state of NAS server on the array. present indicates that NAS server should exist on the system after the task is executed. Right now deletion of NAS server is not supported. Hence, if state is set to absent for any existing NAS server then error will be thrown. For any non-existing NAS server, if state is set to absent then it will return None.    unispherehost  str   True     IP or FQDN of the Unity management server.    username  str   True     The username of the Unity management server.    password  str   True     The password of the Unity management server.    verifycert  bool    True    True False   Boolean variable to specify whether or not to validate SSL certificate. True - Indicates that the SSL certificate should be verified. False - Indicates that the SSL certificate should not be verified.    port  int    443    Port number through which communication happens with Unity management server.    Examples  - name: Get Details of NAS Server dellemc_unity_nasserver: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; nas_server_name: \u0026quot;{{nas_server_name}}\u0026quot; state: \u0026quot;present\u0026quot; - name: Modify Details of NAS Server dellemc_unity_nasserver: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; nas_server_name: \u0026quot;{{nas_server_name}}\u0026quot; nas_server_new_name: \u0026quot;updated_sample_nas_server\u0026quot; is_replication_destination: False is_backup_only: False is_multiprotocol_enabled: True allow_unmapped_user: True default_unix_user: \u0026quot;default_unix_sample_user\u0026quot; default_windows_user: \u0026quot;default_windows_sample_user\u0026quot; enable_windows_to_unix_username_mapping: True current_unix_directory_service: \u0026quot;LDAP\u0026quot; is_packet_reflect_enabled: True state: \u0026quot;present\u0026quot; Return Values   Key Type Returned Description   changed   bool   always   Whether or not the resource has changed    nas_server_details   complex   When NAS server exists.   The NAS server details.    \u0026nbsp; allow_unmapped_user   bool  success  enable/disable access status in case of any user mapping failure    \u0026nbsp; current_unix_directory_service   str  success  Directory service used for querying identity information for UNIX (such as UIDs, GIDs, net groups).    \u0026nbsp; default_unix_user   str  success  Default Unix user name used for granting access in the case of Windows to Unix user mapping failure.    \u0026nbsp; default_windows_user   str  success  Default windows user name used for granting access in the case of Unix to Windows user mapping failure    \u0026nbsp; id   str  success  ID of the NAS server    \u0026nbsp; is_backup_only   bool  success  Whether the NAS server is used as backup only.    \u0026nbsp; is_multi_protocol_enabled   bool  success  Indicates whether multiprotocol sharing mode is enabled    \u0026nbsp; is_packet_reflect_enabled   bool  success  If the packet reflect has to be enabled    \u0026nbsp; is_replication_destination   bool  success  If the NAS server is a replication destination then True.    \u0026nbsp; is_windows_to_unix_username_mapping_enabled   bool  success  Indicates whether a Unix to/from Windows user name mapping is enabled.    \u0026nbsp; name   str  success  Name of the NAS server    Authors  P Srinivas Rao (@srinivas-rao5) ansible.team@dell.com   Quota Tree Module Manage quota tree on the Unity storage system\nSynopsis Managing Quota tree on the Unity storage system includes Create quota tree, Get quota tree, Modify quota tree and Delete quota tree\nParameters   Parameter Type Required Default Choices Description   filesystem_name  str      The name of the filesystem for which quota tree is created. For creation or modification of a quota tree either filesystem_name or filesystem_id is required.    filesystem_id  str      The ID of the filesystem for which the quota tree is created. For creation of a quota tree either filesystem_id or filesystem_name is required.    nas_server_name  str      The name of the NAS server in which the filesystem is created. For creation of a quota tree either nas_server_name or nas_server_id is required.    nas_server_id  str      The ID of the NAS server in which the filesystem is created. For creation of a quota tree either filesystem_id or filesystem_name is required.    tree_quota_id  str      The ID of the quota tree. Either tree_quota_id or path to quota tree is required to view/modify/delete quota tree.    path  str      The path to the quota tree. Either tree_quota_id or path to quota tree is required to create/view/modify/delete a quota tree. Path must start with a forward slash '/'.    hard_limit  int      Hard limitation for a quota tree on the total space available. If exceeded, users in quota tree cannot write data. Value 0 implies no limit. One of the values of soft_limit and hard_limit can be 0, however, both cannot be both 0 during creation of a quota tree.    soft_limit  int      Soft limitation for a quota tree on the total space available. If exceeded, notification will be sent to users in the quota tree for the grace period mentioned, beyond which users cannot use space. Value 0 implies no limit. Both soft_limit and hard_limit cannot be 0 during creation of quota tree.    cap_unit  str      MB GB TB   Unit of soft_limit and hard_limit size. It defaults to 'GB' if not specified.    description  str      Description of a quota tree.    state  str   True     absent present   The state option is used to mention the existence of the filesystem quota tree.    unispherehost  str   True     IP or FQDN of the Unity management server.    username  str   True     The username of the Unity management server.    password  str   True     The password of the Unity management server.    verifycert  bool    True    True False   Boolean variable to specify whether or not to validate SSL certificate. True - Indicates that the SSL certificate should be verified. False - Indicates that the SSL certificate should not be verified.    port  int    443    Port number through which communication happens with Unity management server.    Examples  - name: Get quota tree details by quota tree id dellemc_unity_tree_quota: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; quota_tree_id: \u0026quot;treequota_171798700679_10\u0026quot; state: \u0026quot;present\u0026quot; - name: Get quota tree details by quota tree path dellemc_unity_tree_quota: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; filesystem_name: \u0026quot;fs_2171\u0026quot; nas_server_id: \u0026quot;nas_21\u0026quot; path: \u0026quot;/test\u0026quot; state: \u0026quot;present\u0026quot; - name: Create quota tree for a filesystem with filesystem id dellemc_unity_tree_quota: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; filesystem_id: \u0026quot;fs_2171\u0026quot; hard_limit: 6 cap_unit: \u0026quot;TB\u0026quot; soft_limit: 5 path: \u0026quot;/test_new\u0026quot; state: \u0026quot;present\u0026quot; - name: Create quota tree for a filesystem with filesystem name dellemc_unity_tree_quota: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; filesystem_name: \u0026quot;Test_filesystem\u0026quot; nas_server_name: \u0026quot;lglad068\u0026quot; hard_limit: 6 cap_unit: \u0026quot;TB\u0026quot; soft_limit: 5 path: \u0026quot;/test_new\u0026quot; state: \u0026quot;present\u0026quot; - name: Modify quota tree limit usage by quota tree path dellemc_unity_tree_quota: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; path: \u0026quot;/test_new\u0026quot; hard_limit: 10 cap_unit: \u0026quot;TB\u0026quot; soft_limit: 8 state: \u0026quot;present\u0026quot; - name: Modify quota tree by quota tree id dellemc_unity_tree_quota: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; filesystem_id: \u0026quot;fs_2171\u0026quot; quota_tree_id: \u0026quot;treequota_171798700679_10\u0026quot; hard_limit: 12 cap_unit: \u0026quot;TB\u0026quot; soft_limit: 10 state: \u0026quot;present\u0026quot; - name: Delete quota tree by quota tree id dellemc_unity_tree_quota: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; filesystem_id: \u0026quot;fs_2171\u0026quot; quota_tree_id: \u0026quot;treequota_171798700679_10\u0026quot; state: \u0026quot;absent\u0026quot; - name: Delete quota tree by path dellemc_unity_tree_quota: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; filesystem_id: \u0026quot;fs_2171\u0026quot; path: \u0026quot;/test_new\u0026quot; state: \u0026quot;absent\u0026quot; Return Values   Key Type Returned Description   changed   bool   always   Whether or not the resource has changed    get_quota_tree_details   complex   When quota tree exists   Details of the quota tree.    \u0026nbsp; description   str  success  Description of the quota tree.    \u0026nbsp; filesystem   complex  success  Filesystem details for which the quota tree is created.    \u0026nbsp; \u0026nbsp; UnityFileSystem   complex  success  Filesystem details for which the quota tree is created.    \u0026nbsp; \u0026nbsp; \u0026nbsp; id   str  success  ID of the filesystem for which the quota tree is create.    \u0026nbsp; gp_left   int  success  The grace period left after the soft limit for the user quota is exceeded.    \u0026nbsp; hard_limit   int  success  Hard limit of quota tree. If the quota tree's space usage exceeds the hard limit, users in quota tree cannot write data.    \u0026nbsp; id   str  success  Quota tree ID.    \u0026nbsp; path   str  success  Path to quota tree. A valid path must start with a forward slash '/'. It is mandatory while creating a quota tree.    \u0026nbsp; size_used   int  success  Size of used space in the filesystem by the user files.    \u0026nbsp; soft_limit   int  success  Soft limit of the quota tree. If the quota tree's space usage exceeds the soft limit, the storage system starts to count down based on the specified grace period.    \u0026nbsp; state   int  success  State of the quota tree.    Authors  Spandita Panigrahi (@panigs7) ansible.team@dell.com   File System Module Manage filesystem on Unity storage system\nSynopsis Managing filesystem on Unity storage system includes- Create new filesystem, Modify snapschedule attribute of filesystem Modify filesystem attributes, Display filesystem details, Display filesystem snapshots, Display filesystem snapschedule, Delete snapschedule associated with the filesystem, Delete filesystem, Create new filesystem with quota configuration\nParameters   Parameter Type Required Default Choices Description   filesystem_name  str      The name of the filesystem. Mandatory only for the create operation. All the operations are supported through 'filesystem_name' It's mutually exclusive with 'filesystem_id'.    filesystem_id  str      The id of the filesystem.It's mutually exclusive with 'filesystem_name' It can be used only for get, modify, or delete operations.    pool_name  str      This is the name of the pool where the filesystem will be created. Either the pool_name or pool_id must be provided to create a new filesystem.    pool_id  str      This is the ID of the pool where the filesystem will be created. Either the pool_name or pool_id must be provided to create a new filesystem.    size  int      The size of the filesystem.    cap_unit  str      GB TB   The unit of the filesystem size. It defaults to 'GB', if not specified.    nas_server_name  str      Name of the NAS server on which filesystem will be hosted.    nas_server_id  str      ID of the NAS server on which filesystem will be hosted.    supported_protocols  str      NFS CIFS MULTIPROTOCOL   Protocols supported by the file system. It will be overridden by NAS server configuration if NAS Server is Multiprotocol    description  str      Description about the filesystem. Description can be removed by passing empty string (\"\").    smb_properties  dict      Advance settings for SMB. It contains optional candidate variables    \u0026nbsp; is_smb_sync_writes_enabled   bool      Indicates whether the synchronous writes option is enabled on the file system.    \u0026nbsp; is_smb_notify_on_access_enabled   bool      Indicates whether notifications of changes to directory file structure are enabled.    \u0026nbsp; is_smb_op_locks_enabled   bool      Indicates whether opportunistic file locking is enabled on the file system.    \u0026nbsp; is_smb_notify_on_write_enabled   bool      Indicates whether file write notifications are enabled on the file system.    \u0026nbsp; smb_notify_on_change_dir_depth   int      Integer variable, determines the lowest directory level to which the enabled notifications apply. Minimum value is 1.    data_reduction  bool      Boolean variable, specifies whether or not to enable compression. Compression is supported only for thin filesystem    is_thin  bool      Boolean variable, specifies whether or not it's a thin filesystem.    access_policy  str      NATIVE UNIX WINDOWS   Access policy of a filesystem.    locking_policy  str      ADVISORY MANDATORY   File system locking policies. These policy choices control whether the NFSv4 range locks must be honored.    tiering_policy  str      AUTOTIER_HIGH AUTOTIER HIGHEST LOWEST   Tiering policy choices for how the storage resource data will be distributed among the tiers available in the pool.    quota_config  dict      Configuration for quota management. It contains optional parameters.    \u0026nbsp; grace_period   int      Grace period set in quota configuration after soft limit is reached. If grace_period is not set during creation of filesystem, it will be set to '7 days' by default.    \u0026nbsp; grace_period_unit   str      minutes hours days   Unit of grace period. Default unit is 'days'.    \u0026nbsp; default_hard_limit   int      Default hard limit for user quotas and tree quotas. If default_hard_limit is not set while creation of filesystem, it will be set to 0B by default.    \u0026nbsp; default_soft_limit   int      Default soft limit for user quotas and tree quotas. If default_soft_limit is not set while creation of filesystem, it will be set to 0B by default.    \u0026nbsp; is_user_quota_enabled   bool      Indicates whether the user quota is enabled. Parameters 'is_user_quota_enabled' and 'quota_policy' are mutually exclusive. If is_user_quota_enabled is not set while creation of filesystem, it will be set to false by default.    \u0026nbsp; quota_policy   str      FILE_SIZE BLOCKS   Quota policy set in quota configuration. Parameters 'is_user_quota_enabled' and 'quota_policy' are mutually exclusive. If quota_policy is not set while creation of filesystem, it will be set to \"FILE_SIZE\" by default.    \u0026nbsp; cap_unit   str      MB GB TB   Unit of default_soft_limit and default_hard_limit size. Default unit is 'GB'.    state  str   True     absent present   State variable to determine whether filesystem will exist or not.    snap_schedule_name  str      This is the name of an existing snapshot schedule which is to be associated with the filesystem. This is mutually exclusive with snapshot schedule id.    snap_schedule_id  str      This is the id of an existing snapshot schedule which is to be associated with the filesystem. This is mutually exclusive with snapshot schedule name. filesystem.    unispherehost  str   True     IP or FQDN of the Unity management server.    username  str   True     The username of the Unity management server.    password  str   True     The password of the Unity management server.    verifycert  bool    True    True False   Boolean variable to specify whether or not to validate SSL certificate. True - Indicates that the SSL certificate should be verified. False - Indicates that the SSL certificate should not be verified.    port  int    443    Port number through which communication happens with Unity management server.    Notes  SMB shares, NFS exports, and snapshots associated with filesystem need to be deleted prior to deleting a filesystem. quota_config parameter can be used to update default hard limit and soft limit values to limit the maximum space that can be used. By default they both are set to 0 during filesystem creation which means unlimited.  Examples - name: Create FileSystem dellemc_unity_filesystem: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; filesystem_name: \u0026quot;ansible_test_fs\u0026quot; nas_server_name: \u0026quot;lglap761\u0026quot; pool_name: \u0026quot;pool_1\u0026quot; size: 5 state: \u0026quot;present\u0026quot; - name: Create FileSystem with quota configuration dellemc_unity_filesystem: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; filesystem_name: \u0026quot;ansible_test_fs\u0026quot; nas_server_name: \u0026quot;lglap761\u0026quot; pool_name: \u0026quot;pool_1\u0026quot; size: 5 quota_config: grace_period: 8 grace_period_unit: \u0026quot;days\u0026quot; default_soft_limit: 10 is_user_quota_enabled: False state: \u0026quot;present\u0026quot; - name: Expand FileSystem size dellemc_unity_filesystem: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; filesystem_name: \u0026quot;ansible_test_fs\u0026quot; nas_server_name: \u0026quot;lglap761\u0026quot; size: 10 state: \u0026quot;present\u0026quot; - name: Expand FileSystem size dellemc_unity_filesystem: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; filesystem_name: \u0026quot;ansible_test_fs\u0026quot; nas_server_name: \u0026quot;lglap761\u0026quot; size: 10 state: \u0026quot;present\u0026quot; - name: Modify FileSystem smb_properties dellemc_unity_filesystem: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; filesystem_name: \u0026quot;ansible_test_fs\u0026quot; nas_server_name: \u0026quot;lglap761\u0026quot; smb_properties: is_smb_op_locks_enabled: True smb_notify_on_change_dir_depth: 5 is_smb_notify_on_access_enabled: True state: \u0026quot;present\u0026quot; - name: Modify FileSystem Snap Schedule dellemc_unity_filesystem: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; filesystem_id: \u0026quot;fs_141\u0026quot; snap_schedule_id: \u0026quot;{{snap_schedule_id}}\u0026quot; state: \u0026quot;{{state_present}}\u0026quot; - name: Get details of FileSystem using id dellemc_unity_filesystem: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; filesystem_id: \u0026quot;rs_405\u0026quot; state: \u0026quot;present\u0026quot; - name: Delete a FileSystem using id dellemc_unity_filesystem: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; filesystem_id: \u0026quot;rs_405\u0026quot; state: \u0026quot;absent\u0026quot; Return Values   Key Type Returned Description   changed   bool   always   Whether or not the resource has changed    filesystem_snapshot_details   complex   When filesystem snapshot exists   Details of the filesystem snapshot.    \u0026nbsp; access_type   str  success  Access type of filesystem snapshot.    \u0026nbsp; attached_wwn   str  success  Attached WWN details.    \u0026nbsp; creation_time   str  success  Creation time of filesystem snapshot.    \u0026nbsp; creator_schedule   str  success  Creator schedule of filesystem snapshot.    \u0026nbsp; creator_type   str  success  Creator type for filesystem snapshot.    \u0026nbsp; creator_user   str  success  Creator user for filesystem snapshot.    \u0026nbsp; description   str  success  Description of the filesystem snapshot.    \u0026nbsp; expiration_time   str  success  Date and time after which the filesystem snapshot will expire.    \u0026nbsp; filesystem_id   str  success  Id of the filesystem for which the snapshot exists.    \u0026nbsp; filesystem_name   str  success  Name of the filesystem for which the snapshot exists.    \u0026nbsp; id   str  success  Unique identifier of the filesystem snapshot instance.    \u0026nbsp; is_auto_delete   bool  success  Is the filesystem snapshot is auto deleted or not.    \u0026nbsp; name   str  success  The name of the filesystem snapshot.    \u0026nbsp; nas_server_id   str  success  Id of the NAS server on which filesystem exists.    \u0026nbsp; nas_server_name   str  success  Name of the NAS server on which filesystem exists.    \u0026nbsp; size   int  success  Size of the filesystem snapshot.    Authors  Arindam Datta (@dattaarindam) ansible.team@dell.com Meenakshi Dembi (@dembim) ansible.team@dell.com Spandita Panigrahi (@panigs7) ansible.team@dell.com   Storage Pool Module Manage storage pool on Unity\nSynopsis Managing storage pool on Unity storage system contains the following operations Get details of storage pool Modify storage pool\nParameters   Parameter Type Required Default Choices Description   pool_name  str      Name of the storage pool, unique in the storage system.    pool_id  str      Unique identifier of the pool instance.    new_pool_name  str      New name of the storage pool, unique in the storage system.    pool_description  str      The description of the storage pool.    fast_cache  str      enabled disabled   Indicates whether the fast cache is enabled for the storage pool. enabled - FAST Cache is enabled for the pool. disabled - FAST Cache is disabled for the pool.    fast_vp  str      enabled disabled   Indicates whether to enable scheduled data relocations for the pool. enabled - Enabled scheduled data relocations for the pool. disabled - Disabled scheduled data relocations for the pool.    state  str   True     absent present   Define whether the storage pool should exist or not. present - indicates that the storage pool should exist on the system. absent - indicates that the storage pool should not exist on the system.    unispherehost  str   True     IP or FQDN of the Unity management server.    username  str   True     The username of the Unity management server.    password  str   True     The password of the Unity management server.    verifycert  bool    True    True False   Boolean variable to specify whether or not to validate SSL certificate. True - Indicates that the SSL certificate should be verified. False - Indicates that the SSL certificate should not be verified.    port  int    443    Port number through which communication happens with Unity management server.    Notes  Creation/Deletion of storage pool is not allowed through Ansible module.  Examples - name: Get Storage pool details using pool_name dellemc_unity_storagepool: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; pool_name: \u0026quot;{{pool_name}}\u0026quot; state: \u0026quot;present\u0026quot; - name: Get Storage pool details using pool_id dellemc_unity_storagepool: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; pool_id: \u0026quot;{{pool_id}}\u0026quot; state: \u0026quot;present\u0026quot; - name: Modify Storage pool attributes using pool_name dellemc_unity_storagepool: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; pool_name: \u0026quot;{{pool_name}}\u0026quot; new_pool_name: \u0026quot;{{new_pool_name}}\u0026quot; pool_description: \u0026quot;{{pool_description}}\u0026quot; fast_cache: \u0026quot;{{fast_cache_enabled}}\u0026quot; fast_vp: \u0026quot;{{fast_vp_enabled}}\u0026quot; state: \u0026quot;present\u0026quot; - name: Modify Storage pool attributes using pool_id dellemc_unity_storagepool: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; pool_id: \u0026quot;{{pool_id}}\u0026quot; new_pool_name: \u0026quot;{{new_pool_name}}\u0026quot; pool_description: \u0026quot;{{pool_description}}\u0026quot; fast_cache: \u0026quot;{{fast_cache_enabled}}\u0026quot; fast_vp: \u0026quot;{{fast_vp_enabled}}\u0026quot; state: \u0026quot;present\u0026quot; Return Values   Key Type Returned Description   changed   bool   always   Whether or not the storage pool has changed.    storage_pool_details   complex   When storage pool exists.   The storage pool details.    \u0026nbsp; id   str  success  Pool id, unique identifier of the pool.    \u0026nbsp; is_fast_cache_enabled   bool  success  Indicates whether the fast cache is enabled for the storage pool. true - FAST Cache is enabled for the pool. false - FAST Cache is disabled for the pool.    \u0026nbsp; is_fast_vp_enabled   bool  success  Indicates whether to enable scheduled data relocations for the storage pool. true - Enabled scheduled data relocations for the pool. false - Disabled scheduled data relocations for the pool.    \u0026nbsp; name   str  success  Pool name, unique in the storage system.    \u0026nbsp; size_free_with_unit   str  success  Indicates size_free with its appropriate unit in human readable form.    \u0026nbsp; size_subscribed_with_unit   str  success  Indicates size_subscribed with its appropriate unit in human readable form.    \u0026nbsp; size_total_with_unit   str  success  Indicates size_total with its appropriate unit in human readable form.    \u0026nbsp; size_used_with_unit   str  success  Indicates size_used with its appropriate unit in human readable form.    \u0026nbsp; snap_size_subscribed_with_unit   str  success  Indicates snap_size_subscribed with its appropriate unit in human readable form.    \u0026nbsp; snap_size_used_with_unit   str  success  Indicates snap_size_used with its appropriate unit in human readable form.    Authors  Ambuj Dubey (@AmbujDube) ansible.team@dell.com   Gatherfacts Module Gathering information about DellEMC Unity\nSynopsis Gathering information about DellEMC Unity storage system includes Get the details of Unity array, Get list of Hosts in Unity array, Get list of FC initiators in Unity array, Get list of iSCSI initiators in Unity array, Get list of Consistency groups in Unity array, Get list of Storage pools in Unity array, Get list of Volumes in Unity array, Get list of Snapshot schedules in Unity array, Get list of NAS servers in Unity array, Get list of File systems in Unity array, Get list of Snapshots in Unity array, Get list of SMB shares in Unity array, Get list of NFS exports in Unity array, Get list of User quotas in Unity array, Get list of Quota tree in Unity array\nParameters   Parameter Type Required Default Choices Description   gather_subset  list elements: str      host fc_initiator iscsi_initiator cg storage_pool vol snapshot_schedule nas_server file_system snapshot nfs_export smb_share user_quota tree_quota   List of string variables to specify the Unity storage system entities for which information is required. host fc_initiator iscsi_initiator cg storage_pool vol snapshot_schedule nas_server file_system snapshot nfs_export smb_share user_quota tree_quota    unispherehost  str   True     IP or FQDN of the Unity management server.    username  str   True     The username of the Unity management server.    password  str   True     The password of the Unity management server.    verifycert  bool    True    True False   Boolean variable to specify whether or not to validate SSL certificate. True - Indicates that the SSL certificate should be verified. False - Indicates that the SSL certificate should not be verified.    port  int    443    Port number through which communication happens with Unity management server.    Examples  - name: Get detailed list of Unity entities. dellemc_unity_gatherfacts: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; gather_subset: - host - fc_initiator - iscsi_initiator - cg - storage_pool - vol - snapshot_schedule - nas_server - file_system - snapshot - nfs_export - smb_share - user_quota - tree_quota - name: Get information of Unity array. dellemc_unity_gatherfacts: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; - name: Get list of hosts on Unity array. dellemc_unity_gatherfacts: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; gather_subset: - host - name: Get list of FC initiators on Unity array. dellemc_unity_gatherfacts: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; gather_subset: - fc_initiator - name: Get list of ISCSI initiators on Unity array. dellemc_unity_gatherfacts: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; gather_subset: - iscsi_initiator - name: Get list of consistency groups on Unity array. dellemc_unity_gatherfacts: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; gather_subset: - cg - name: Get list of storage pools on Unity array. dellemc_unity_gatherfacts: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; gather_subset: - storage_pool - name: Get list of volumes on Unity array. dellemc_unity_gatherfacts: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; gather_subset: - vol - name: Get list of snapshot schedules on Unity array. dellemc_unity_gatherfacts: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; gather_subset: - snapshot_schedule - name: Get list of NAS Servers on Unity array. dellemc_unity_gatherfacts: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; gather_subset: - nas_server - name: Get list of File Systems on Unity array. dellemc_unity_gatherfacts: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; gather_subset: - file_system - name: Get list of Snapshots on Unity array. dellemc_unity_gatherfacts: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; gather_subset: - snapshot - name: Get list of NFS exports on Unity array. dellemc_unity_gatherfacts: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; gather_subset: - nfs_export - name: Get list of SMB shares on Unity array. dellemc_unity_gatherfacts: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; gather_subset: - smb_share - name: Get list of user quotas on Unity array. dellemc_unity_gatherfacts: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; gather_subset: - user_quota - name: Get list of quota trees on Unity array. dellemc_unity_gatherfacts: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; gather_subset: - tree_quota Return Values   Key Type Returned Description   Array_Details   complex   always   Details of the Unity Array.    \u0026nbsp; api_version   str  success  The current api version of the Unity Array.    \u0026nbsp; earliest_api_version   str  success  The earliest api version of the Unity Array.    \u0026nbsp; model   str  success  The model of the Unity Array.    \u0026nbsp; name   str  success  The name of the Unity Array.    \u0026nbsp; software_version   str  success  The software version of the Unity Array.    Consistency_Groups   complex   When Consistency Groups exist.   Details of the Consistency Groups.    \u0026nbsp; id   str  success  The ID of the Consistency Group.    \u0026nbsp; name   str  success  The name of the Consistency Group.    FC_initiators   complex   When FC initiator exist.   Details of the FC initiators.    \u0026nbsp; WWN   str  success  The WWN of the FC initiator.    \u0026nbsp; id   str  success  The id of the FC initiator.    File_Systems   complex   When File Systems exist.   Details of the File Systems.    \u0026nbsp; id   str  success  The ID of the File System.    \u0026nbsp; name   str  success  The name of the File System.    Hosts   complex   When hosts exist.   Details of the hosts.    \u0026nbsp; id   str  success  The ID of the host.    \u0026nbsp; name   str  success  The name of the host.    ISCSI_initiators   complex   When ISCSI initiators exist.   Details of the ISCSI initiators.    \u0026nbsp; IQN   str  success  The IQN of the ISCSI initiator.    \u0026nbsp; id   str  success  The id of the ISCSI initiator.    NAS_Servers   complex   When NAS Servers exist.   Details of the NAS Servers.    \u0026nbsp; id   str  success  The ID of the NAS Server.    \u0026nbsp; name   str  success  The name of the NAS Server.    NFS_Exports   complex   When NFS Exports exist.   Details of the NFS Exports.    \u0026nbsp; id   str  success  The ID of the NFS Export.    \u0026nbsp; name   str  success  The name of the NFS Export.    SMB_Shares   complex   When SMB Shares exist.   Details of the SMB Shares.    \u0026nbsp; id   str  success  The ID of the SMB Share.    \u0026nbsp; name   str  success  The name of the SMB Share.    Snapshot_Schedules   complex   When Snapshot Schedules exist.   Details of the Snapshot Schedules.    \u0026nbsp; id   str  success  The ID of the Snapshot Schedule.    \u0026nbsp; name   str  success  The name of the Snapshot Schedule.    Snapshots   complex   When Snapshots exist.   Details of the Snapshots.    \u0026nbsp; id   str  success  The ID of the Snapshot.    \u0026nbsp; name   str  success  The name of the Snapshot.    Storage_Pools   complex   When Storage Pools exist.   Details of the Storage Pools.    \u0026nbsp; id   str  success  The ID of the Storage Pool.    \u0026nbsp; name   str  success  The name of the Storage Pool.    Tree_Quotas   complex   When quota trees exist.   Details of the quota trees.    \u0026nbsp; id   str  success  The ID of the quota tree.    \u0026nbsp; path   str  success  The path of the quota tree.    User_Quotas   complex   When user quotas exist.   Details of the user quotas.    \u0026nbsp; id   str  success  The ID of the user quota.    \u0026nbsp; uid   str  success  The UID of the user quota.    Volumes   complex   When Volumes exist.   Details of the Volumes.    \u0026nbsp; id   str  success  The ID of the Volume.    \u0026nbsp; name   str  success  The name of the Volume.    Authors  Rajshree Khare (@kharer5) ansible.team@dell.com Akash Shendge (@shenda1) ansible.team@dell.com   User Quota Module Manage user quota on the Unity storage system\nSynopsis Managing User Quota on the Unity storage system includes Create user quota, Get user quota, Modify user quota, Delete user quota, Create user quota for quota tree, Modify user quota for quota tree and Delete user quota for quota tree.\nParameters   Parameter Type Required Default Choices Description   filesystem_name  str      The name of the filesystem for which the user quota is created. For creation of a user quota either filesystem_name or filesystem_id is required.    filesystem_id  str      The ID of the filesystem for which the user quota is created. For creation of a user quota either filesystem_id or filesystem_name is required.    nas_server_name  str      The name of the NAS server in which the filesystem is created. For creation of a user quota either nas_server_name or nas_server_id is required.    nas_server_id  str      The ID of the NAS server in which the filesystem is created. For creation of a user quota either filesystem_id or filesystem_name is required.    hard_limit  int      Hard limitation for a user on the total space available. If exceeded, user cannot write data. Value 0 implies no limit. One of the values of soft_limit and hard_limit can be 0, however, both cannot be 0 during creation or modification of user quota.    soft_limit  int      Soft limitation for a user on the total space available. If exceeded, notification will be sent to the user for the grace period mentioned, beyond which the user cannot use space. Value 0 implies no limit. Both soft_limit and hard_limit cannot be 0 during creation or modification of user quota.    cap_unit  str      MB GB TB   Unit of soft_limit and hard_limit size. It defaults to 'GB' if not specified.    user_type  str      Unix Windows   Type of user creating a user quota. Mandatory while creating or modifying user quota.    win_domain  str      Fully qualified or short domain name for Windows user type. Mandatory when user_type is 'Windows'.    user_name  str      User name of the user quota when user_type is 'Windows' or 'Unix'. user_name must be specified along with win_domain when user_type is 'Windows'.    uid  str      User ID of the user quota.    user_quota_id  str      User quota ID generated after creation of a user quota.    tree_quota_id  str      The ID of the quota tree. Either tree_quota_id or path to quota tree is required to create/modify/delete user quota for a quota tree.    path  str      The path to the quota tree. Either tree_quota_id or path to quota tree is required to create/modify/delete user quota for a quota tree. Path must start with a forward slash '/'.    state  str   True     absent present   The state option is used to mention the existence of the user quota.    unispherehost  str   True     IP or FQDN of the Unity management server.    username  str   True     The username of the Unity management server.    password  str   True     The password of the Unity management server.    verifycert  bool    True    True False   Boolean variable to specify whether or not to validate SSL certificate. True - Indicates that the SSL certificate should be verified. False - Indicates that the SSL certificate should not be verified.    port  int    443    Port number through which communication happens with Unity management server.    Examples  - name: Get user quota details by user quota id dellemc_unity_user_quota: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user_quota_id: \u0026quot;userquota_171798700679_0_123\u0026quot; state: \u0026quot;present\u0026quot; - name: Get user quota details by user quota uid/user name dellemc_unity_user_quota: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; filesystem_name: \u0026quot;fs_2171\u0026quot; nas_server_id: \u0026quot;nas_21\u0026quot; user_name: \u0026quot;test\u0026quot; state: \u0026quot;present\u0026quot; - name: Create user quota for a filesystem with filesystem id dellemc_unity_user_quota: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; filesystem_id: \u0026quot;fs_2171\u0026quot; hard_limit: 6 cap_unit: \u0026quot;TB\u0026quot; soft_limit: 5 user_type: \u0026quot;UID\u0026quot; uid: \u0026quot;111\u0026quot; state: \u0026quot;present\u0026quot; - name: Create user quota for a filesystem with filesystem name dellemc_unity_user_quota: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; filesystem_name: \u0026quot;Test_filesystem\u0026quot; nas_server_name: \u0026quot;lglad068\u0026quot; hard_limit: 6 cap_unit: \u0026quot;TB\u0026quot; soft_limit: 5 user_type: \u0026quot;UID\u0026quot; uid: \u0026quot;111\u0026quot; state: \u0026quot;present\u0026quot; - name: Modify user quota limit usage by user quota id dellemc_unity_user_quota: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; user_quota_id: \u0026quot;userquota_171798700679_0_123\u0026quot; hard_limit: 10 cap_unit: \u0026quot;TB\u0026quot; soft_limit: 8 state: \u0026quot;present\u0026quot; - name: Modify user quota by filesystem id and user quota uid/user_name dellemc_unity_user_quota: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; filesystem_id: \u0026quot;fs_2171\u0026quot; user_type: \u0026quot;Windows\u0026quot; win_domain: \u0026quot;prod\u0026quot; user_name: \u0026quot;sample\u0026quot; hard_limit: 12 cap_unit: \u0026quot;TB\u0026quot; soft_limit: 10 state: \u0026quot;present\u0026quot; - name: Delete user quota dellemc_unity_user_quota: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; filesystem_id: \u0026quot;fs_2171\u0026quot; win_domain: \u0026quot;prod\u0026quot; user_name: \u0026quot;sample\u0026quot; state: \u0026quot;absent\u0026quot; - name: Create user quota of a quota tree dellemc_unity_user_quota: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; tree_quota_id: \u0026quot;treequota_171798700679_4\u0026quot; user_type: \u0026quot;Windows\u0026quot; win_domain: \u0026quot;prod\u0026quot; user_name: \u0026quot;sample\u0026quot; soft_limit: 9 cap_unit: \u0026quot;TB\u0026quot; state: \u0026quot;present\u0026quot; - name: Create user quota of a quota tree by quota tree path dellemc_unity_user_quota: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; filesystem_id: \u0026quot;fs_2171\u0026quot; path: \u0026quot;/sample\u0026quot; user_type: \u0026quot;Unix\u0026quot; user_name: \u0026quot;test\u0026quot; hard_limit: 2 cap_unit: \u0026quot;TB\u0026quot; state: \u0026quot;present\u0026quot; - name: Modify user quota of a quota tree dellemc_unity_user_quota: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; tree_quota_id: \u0026quot;treequota_171798700679_4\u0026quot; user_type: \u0026quot;Windows\u0026quot; win_domain: \u0026quot;prod\u0026quot; user_name: \u0026quot;sample\u0026quot; soft_limit: 10 cap_unit: \u0026quot;TB\u0026quot; state: \u0026quot;present\u0026quot; - name: Modify user quota of a quota tree by quota tree path dellemc_unity_user_quota: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; filesystem_id: \u0026quot;fs_2171\u0026quot; path: \u0026quot;/sample\u0026quot; user_type: \u0026quot;Windows\u0026quot; win_domain: \u0026quot;prod\u0026quot; user_name: \u0026quot;sample\u0026quot; hard_limit: 12 cap_unit: \u0026quot;TB\u0026quot; state: \u0026quot;present\u0026quot; - name: Delete user quota of a quota tree by quota tree path dellemc_unity_user_quota: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; filesystem_id: \u0026quot;fs_2171\u0026quot; path: \u0026quot;/sample\u0026quot; win_domain: \u0026quot;prod\u0026quot; user_name: \u0026quot;sample\u0026quot; state: \u0026quot;absent\u0026quot; - name: Delete user quota of a quota tree by quota tree id dellemc_unity_user_quota: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; tree_quota_id: \u0026quot;treequota_171798700679_4\u0026quot; win_domain: \u0026quot;prod\u0026quot; user_name: \u0026quot;sample\u0026quot; state: \u0026quot;absent\u0026quot; Return Values   Key Type Returned Description   changed   bool   always   Whether or not the resource has changed    get_user_quota_details   complex   When user quota exists   Details of the user quota.    \u0026nbsp; filesystem   complex  success  Filesystem details for which the user quota is created.    \u0026nbsp; \u0026nbsp; UnityFileSystem   complex  success  Filesystem details for which the user quota is created.    \u0026nbsp; \u0026nbsp; \u0026nbsp; id   str  success  ID of the filesystem for which the user quota is created.    \u0026nbsp; \u0026nbsp; \u0026nbsp; name   str  success  Name of filesystem.    \u0026nbsp; \u0026nbsp; \u0026nbsp; nas_server   complex  success  Nasserver details where filesystem is created.    \u0026nbsp; gp_left   int  success  The grace period left after the soft limit for the user quota is exceeded.    \u0026nbsp; hard_limit   int  success  Hard limitation for a user on the total space available. If exceeded, user cannot write data.    \u0026nbsp; hard_ratio   str  success  The hard ratio is the ratio between the hard limit size of the user quota and the amount of storage actually consumed.    \u0026nbsp; id   str  success  User quota ID.    \u0026nbsp; size_used   int  success  Size of used space in the filesystem by the user files.    \u0026nbsp; soft_limit   int  success  Soft limitation for a user on the total space available. If exceeded, notification will be sent to user for the grace period mentioned, beyond which user cannot use space.    \u0026nbsp; soft_ratio   str  success  The soft ratio is the ratio between the soft limit size of the user quota and the amount of storage actually consumed.    \u0026nbsp; state   int  success  State of the user quota.    \u0026nbsp; tree_quota   complex  success  Quota tree details for which the user quota is created.    \u0026nbsp; \u0026nbsp; UnityTreeQuota   complex  success  Quota tree details for which the user quota is created.    \u0026nbsp; \u0026nbsp; \u0026nbsp; id   str  success  ID of the quota tree.    \u0026nbsp; \u0026nbsp; \u0026nbsp; path   str  success  Path to quota tree    \u0026nbsp; uid   int  success  User ID of the user.    \u0026nbsp; unix_name   str  success  Unix user name for this user quota's uid.    \u0026nbsp; windows_names   str  success  Windows user name that maps to this quota's uid.    \u0026nbsp; windows_sids   str  success  Windows SIDs that maps to this quota's uid    Authors  Spandita Panigrahi (@panigs7) ansible.team@dell.com   Filesystem Snapshot Module Manage filesystem snapshot on the Unity storage system\nSynopsis Managing Filesystem Snapshot on the Unity storage system includes create filesystem snapshot, get filesystem snapshot, modify filesystem snapshot and delete filesystem snapshot.\nParameters   Parameter Type Required Default Choices Description   snapshot_name  str      The name of the filesystem snapshot. Mandatory parameter for creating a filesystem snapshot. For all other operations either snapshot_name or snapshot_id is required.    snapshot_id  str      During creation snapshot_id is auto generated. For all other operations either snapshot_id or snapshot_name is required.    filesystem_name  str      The name of the Filesystem for which snapshot is created. For creation of filesystem snapshot either filesystem_name or filesystem_id is required. Not required for other operations.    filesystem_id  str      The ID of the Filesystem for which snapshot is created. For creation of filesystem snapshot either filesystem_id or filesystem_name is required. Not required for other operations.    nas_server_name  str      The name of the NAS server in which the Filesystem is created. For creation of filesystem snapshot either nas_server_name or nas_server_id is required. Not required for other operations.    nas_server_id  str      The ID of the NAS server in which the Filesystem is created. For creation of filesystem snapshot either filesystem_id or filesystem_name is required. Not required for other operations.    auto_delete  bool      This option specifies whether or not the filesystem snapshot will be automatically deleted. If set to true, the filesystem snapshot will expire based on the pool auto deletion policy. If set to false, the filesystem snapshot will not be auto deleted based on the pool auto deletion policy. auto_delete can not be set to True, if expiry_time is specified. If during creation neither auto_delete nor expiry_time is mentioned then the filesystem snapshot will be created keeping auto_delete as True. Once the expiry_time is set, then the filesystem snapshot cannot be assigned to the auto delete policy.    expiry_time  str      This option is for specifying the date and time after which the filesystem snapshot will expire. The time is to be mentioned in UTC timezone. The format is \"MM/DD/YYYY HH:MM\". Year must be in 4 digits.    description  str      The additional information about the filesystem snapshot can be provided using this option. The description can be removed by passing an empty string.    fs_access_type  str      Checkpoint Protocol   Access type of the filesystem snapshot. Required only during creation of filesystem snapshot. If not given, snapshot's access type will be 'Checkpoint'.    state  str   True     absent present   The state option is used to mention the existence of the filesystem snapshot.    unispherehost  str   True     IP or FQDN of the Unity management server.    username  str   True     The username of the Unity management server.    password  str   True     The password of the Unity management server.    verifycert  bool    True    True False   Boolean variable to specify whether or not to validate SSL certificate. True - Indicates that the SSL certificate should be verified. False - Indicates that the SSL certificate should not be verified.    port  int    443    Port number through which communication happens with Unity management server.    Notes  Filesystem snapshot cannot be deleted, if it has nfs or smb share.  Examples  - name: Create Filesystem Snapshot dellemc_unity_filesystem_snapshot: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; snapshot_name: \u0026quot;ansible_test_FS_snap\u0026quot; filesystem_name: \u0026quot;ansible_test_FS\u0026quot; nas_server_name: \u0026quot;lglad069\u0026quot; description: \u0026quot;Created using playbook\u0026quot; auto_delete: True fs_access_type: \u0026quot;Protocol\u0026quot; state: \u0026quot;present\u0026quot; - name: Create Filesystem Snapshot with expiry time. dellemc_unity_filesystem_snapshot: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; snapshot_name: \u0026quot;ansible_test_FS_snap_1\u0026quot; filesystem_name: \u0026quot;ansible_test_FS_1\u0026quot; nas_server_name: \u0026quot;lglad069\u0026quot; description: \u0026quot;Created using playbook\u0026quot; expiry_time: \u0026quot;04/15/2021 2:30\u0026quot; fs_access_type: \u0026quot;Protocol\u0026quot; state: \u0026quot;present\u0026quot; - name: Get Filesystem Snapshot Details using Name dellemc_unity_filesystem_snapshot: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; snapshot_name: \u0026quot;ansible_test_FS_snap\u0026quot; state: \u0026quot;present\u0026quot; - name: Get Filesystem Snapshot Details using ID dellemc_unity_filesystem_snapshot: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; snapshot_id: \u0026quot;10008000403\u0026quot; state: \u0026quot;present\u0026quot; - name: Update Filesystem Snapshot attributes dellemc_unity_filesystem_snapshot: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; snapshot_name: \u0026quot;ansible_test_FS_snap\u0026quot; description: \u0026quot;Description updated\u0026quot; auto_delete: False expiry_time: \u0026quot;04/15/2021 5:30\u0026quot; state: \u0026quot;present\u0026quot; - name: Update Filesystem Snapshot attributes using ID dellemc_unity_filesystem_snapshot: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; snapshot_id: \u0026quot;10008000403\u0026quot; expiry_time: \u0026quot;04/18/2021 8:30\u0026quot; state: \u0026quot;present\u0026quot; - name: Delete Filesystem Snapshot using Name dellemc_unity_filesystem_snapshot: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; snapshot_name: \u0026quot;ansible_test_FS_snap\u0026quot; state: \u0026quot;absent\u0026quot; - name: Delete Filesystem Snapshot using ID dellemc_unity_filesystem_snapshot: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; snapshot_id: \u0026quot;10008000403\u0026quot; state: \u0026quot;absent\u0026quot; Return Values   Key Type Returned Description   changed   bool   always   Whether or not the resource has changed    filesystem_snapshot_details   complex   When filesystem snapshot exists   Details of the filesystem snapshot.    \u0026nbsp; access_type   str  success  Access type of filesystem snapshot.    \u0026nbsp; attached_wwn   str  success  Attached WWN details.    \u0026nbsp; creation_time   str  success  Creation time of filesystem snapshot.    \u0026nbsp; creator_schedule   str  success  Creator schedule of filesystem snapshot.    \u0026nbsp; creator_type   str  success  Creator type for filesystem snapshot.    \u0026nbsp; creator_user   str  success  Creator user for filesystem snapshot.    \u0026nbsp; description   str  success  Description of the filesystem snapshot.    \u0026nbsp; expiration_time   str  success  Date and time after which the filesystem snapshot will expire.    \u0026nbsp; filesystem_id   str  success  Id of the filesystem for which the snapshot exists.    \u0026nbsp; filesystem_name   str  success  Name of the filesystem for which the snapshot exists.    \u0026nbsp; id   str  success  Unique identifier of the filesystem snapshot instance.    \u0026nbsp; is_auto_delete   bool  success  Is the filesystem snapshot is auto deleted or not.    \u0026nbsp; name   str  success  The name of the filesystem snapshot.    \u0026nbsp; nas_server_id   str  success  Id of the NAS server on which filesystem exists.    \u0026nbsp; nas_server_name   str  success  Name of the NAS server on which filesystem exists.    \u0026nbsp; size   int  success  Size of the filesystem snapshot.    Authors  Rajshree Khare (@kharer5) ansible.team@dell.com   Snapshot Module Manage snapshots on the Unity storage system.\nSynopsis Managing snapshots on the Unity storage system includes create snapshot, delete snapshot, update snapshot, get snapshot, map host and unmap host.\nParameters   Parameter Type Required Default Choices Description   snapshot_name  str      The name of the snapshot. Mandatory parameter for creating a snapshot. For all other operations either snapshot name or snapshot id is required.    vol_name  str      The name of the volume for which snapshot is created. For creation of a snapshot either vol_name or cg_name is required. Not required for other operations.    cg_name  str      The name of the Consistency Group for which snapshot is created. For creation of a snapshot either vol_name or cg_name is required. Not required for other operations.    snapshot_id  str      The id of the snapshot. For all operations other than creation either snapshot name or snapshot id is required.    auto_delete  bool      This option specifies whether the snapshot is auto deleted or not. If set to true, snapshot will expire based on the pool auto deletion policy. If set to false, snapshot will not be auto deleted based on the pool auto deletion policy. auto_delete can not be set to True, if expiry_time is specified. If during creation neither auto_delete nor expiry_time is mentioned then snapshot will be created keeping auto_delete as True. Once the expiry_time is set then snapshot cannot be assigned to the auto delete policy.    expiry_time  str      This option is for specifying the date and time after which the snapshot will expire. The time is to be mentioned in UTC timezone. The format is \"MM/DD/YYYY HH:MM\". Year must be in 4 digits.    description  str      The additional information about the snapshot can be provided using this option.    new_snapshot_name  str      New name for the snapshot.    state  str   True     absent present   The state option is used to mention the existence of the snapshot.    host_name  str      The name of the host. Either host_name or host_id is required to map or unmap a snapshot from a host. Snapshot can be attached to multiple hosts.    host_id  str      The id of the host. Either host_name or host_id is required to map or unmap a snapshot from a host Snapshot can be attached to multiple hosts.    host_state  str      mapped unmapped   The host_state option is used to mention the existence of the host for snapshot. It is required when a snapshot is mapped or unmapped from host.    unispherehost  str   True     IP or FQDN of the Unity management server.    username  str   True     The username of the Unity management server.    password  str   True     The password of the Unity management server.    verifycert  bool    True    True False   Boolean variable to specify whether or not to validate SSL certificate. True - Indicates that the SSL certificate should be verified. False - Indicates that the SSL certificate should not be verified.    port  int    443    Port number through which communication happens with Unity management server.    Examples  - name: Create a Snapshot for a CG dellemc_unity_snapshot: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; port: \u0026quot;{{port}}\u0026quot; cg_name: \u0026quot;{{cg_name}}\u0026quot; snapshot_name: \u0026quot;{{cg_snapshot_name}}\u0026quot; description: \u0026quot;{{description}}\u0026quot; auto_delete: False state: \u0026quot;present\u0026quot; - name: Create a Snapshot for a volume with Host attached. dellemc_unity_snapshot: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; port: \u0026quot;{{port}}\u0026quot; vol_name: \u0026quot;{{vol_name}}\u0026quot; snapshot_name: \u0026quot;{{vol_snapshot_name}}\u0026quot; description: \u0026quot;{{description}}\u0026quot; expiry_time: \u0026quot;04/15/2025 16:30\u0026quot; host_name: \u0026quot;{{host_name}}\u0026quot; host_state: \u0026quot;mapped\u0026quot; state: \u0026quot;present\u0026quot; - name: Unmap a host for a Snapshot dellemc_unity_snapshot: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; port: \u0026quot;{{port}}\u0026quot; snapshot_name: \u0026quot;{{vol_snapshot_name}}\u0026quot; host_name: \u0026quot;{{host_name}}\u0026quot; host_state: \u0026quot;unmapped\u0026quot; state: \u0026quot;present\u0026quot; - name: Map snapshot to a host dellemc_unity_snapshot: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; port: \u0026quot;{{port}}\u0026quot; snapshot_name: \u0026quot;{{vol_snapshot_name}}\u0026quot; host_name: \u0026quot;{{host_name}}\u0026quot; host_state: \u0026quot;mapped\u0026quot; state: \u0026quot;present\u0026quot; - name: Update attributes of a Snapshot for a volume dellemc_unity_snapshot: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; snapshot_name: \u0026quot;{{vol_snapshot_name}}\u0026quot; new_snapshot_name: \u0026quot;{{new_snapshot_name}}\u0026quot; description: \u0026quot;{{new_description}}\u0026quot; host_name: \u0026quot;{{host_name}}\u0026quot; host_state: \u0026quot;unmapped\u0026quot; state: \u0026quot;present\u0026quot; - name: Delete Snapshot of CG. dellemc_unity_snapshot: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; snapshot_name: \u0026quot;{{cg_snapshot_name}}\u0026quot; state: \u0026quot;absent\u0026quot; Return Values   Key Type Returned Description   changed   bool   always   Whether or not the resource has changed    snapshot_details   complex   When snapshot exists   Details of the snapshot.    \u0026nbsp; expiration_time   str  success  Date and time after which the snapshot will expire.    \u0026nbsp; hosts_list   dict  success  Contains the name and id of the associated hosts.    \u0026nbsp; id   str  success  Unique identifier of the snapshot instance.    \u0026nbsp; is_auto_delete   str  success  Additional information mentioned for snapshot.    \u0026nbsp; name   str  success  The name of the snapshot.    \u0026nbsp; storage_resource_id   str  success  Id of the storage resource for which the snapshot exists.    \u0026nbsp; storage_resource_name   str  success  Name of the storage resource for which the snapshot exists.    Authors  P Srinivas Rao (@srinivas-rao5) ansible.team@dell.com   SMB Share Module Manage SMB shares on Unity storage system.\nSynopsis Managing SMB Shares on Unity storage system includes create, get, modify, and delete the smb shares.\nParameters   Parameter Type Required Default Choices Description   share_name  str      Name of the SMB share. Required during creation of the SMB share. For all other operations either share_name or share_id is required.    share_id  str      ID of the SMB share. Should not be specified during creation. Id is auto generated. For all other operations either share_name or share_id is required. If share_id is used then no need to pass nas_server/filesystem/snapshot/path.    path  str      Local path to the file system/Snapshot or any existing sub-folder of the file system/Snapshot that is shared over the network. Path is relative to the root of the filesystem. Required for creation of the SMB share.    filesystem_id  str      The ID of the File System. Either filesystem_name or filesystem_id is required for creation of the SMB share for filesystem. If filesystem name is specified, then nas_server_name/nas_server_id is required to uniquely identify the filesystem. filesystem_name and filesystem_id are mutually exclusive parameters.    snapshot_id  str      The ID of the Filesystem Snapshot. Either snapshot_name or snapshot_id is required for creation of the SMB share for a snapshot. If snapshot name is specified, then nas_server_name/nas_server_id is required to uniquely identify the snapshot. snapshot_name and snapshot_id are mutually exclusive parameters.    nas_server_id  str      The ID of the NAS Server. It is not required if share_id is used.    filesystem_name  str      The Name of the File System. Either filesystem_name or filesystem_id is required for creation of the SMB share for filesystem. If filesystem name is specified, then nas_server_name/nas_server_id is required to uniquely identify the filesystem. filesystem_name and filesytem_id are mutually exclusive parameters.    snapshot_name  str      The Name of the Filesystem Snapshot. Either snapshot_name or snapshot_id is required for creation of the SMB share for a snapshot. If snapshot name is specified, then nas_server_name/nas_server_id is required to uniquely identify the snapshot. snapshot_name and snapshot_id are mutually exclusive parameters.    nas_server_name  str      The Name of the NAS Server. It is not required if share_id is used. nas_server_name and nas_server_id are mutually exclusive parameters.    description  str      Description for the SMB share. Optional parameter when creating a share. To modify, pass the new value in description field.    is_abe_enabled  bool      Indicates whether Access-based Enumeration (ABE) for SMB share is enabled. During creation, if not mentioned then default is False.    is_branch_cache_enabled  bool      Indicates whether Branch Cache optimization for SMB share is enabled. During creation, if not mentioned then default is False.    is_continuous_availability_enabled  bool      Indicates whether continuous availability for SMB 3.0 is enabled. During creation, if not mentioned then default is False.    is_encryption_enabled  bool      Indicates whether encryption for SMB 3.0 is enabled at the shared folder level. During creation, if not mentioned then default is False.    offline_availability  str      MANUAL DOCUMENTS PROGRAMS NONE   Defines valid states of Offline Availability. MANUAL- Only specified files will be available offline. DOCUMENTS- All files that users open will be available offline. PROGRAMS- Program will preferably run from the offline cache even when connected to the network. All files that users open will be available offline. NONE- Prevents clients from storing documents and programs in offline cache.    umask  str      The default UNIX umask for new files created on the SMB Share.    state  str   True     absent present   Define whether the SMB share should exist or not. present indicates that the share should exist on the system. absent indicates that the share should not exist on the system.    unispherehost  str   True     IP or FQDN of the Unity management server.    username  str   True     The username of the Unity management server.    password  str   True     The password of the Unity management server.    verifycert  bool    True    True False   Boolean variable to specify whether or not to validate SSL certificate. True - Indicates that the SSL certificate should be verified. False - Indicates that the SSL certificate should not be verified.    port  int    443    Port number through which communication happens with Unity management server.    Notes  When ID/Name of the filesystem/snapshot is passed then nas_server is not required. If passed, then filesystem/snapshot should exist for the mentioned nas_server, else the task will fail.  Examples - name: Create SMB share for a filesystem dellemc_unity_smbshare: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; share_name: \u0026quot;sample_smb_share\u0026quot; filesystem_name: \u0026quot;sample_fs\u0026quot; nas_server_id: \u0026quot;NAS_11\u0026quot; path: \u0026quot;/sample_fs\u0026quot; description: \u0026quot;Sample SMB share created\u0026quot; is_abe_enabled: True is_branch_cache_enabled: True offline_availability: \u0026quot;DOCUMENTS\u0026quot; is_continuous_availability_enabled: True is_encryption_enabled: True umask: \u0026quot;777\u0026quot; state: \u0026quot;present\u0026quot; - name: Modify Attributes of SMB share for a filesystem dellemc_unity_smbshare: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; share_name: \u0026quot;sample_smb_share\u0026quot; nas_server_name: \u0026quot;sample_nas_server\u0026quot; description: \u0026quot;Sample SMB share attributes updated\u0026quot; is_abe_enabled: False is_branch_cache_enabled: False offline_availability: \u0026quot;MANUAL\u0026quot; is_continuous_availability_enabled: \u0026quot;False\u0026quot; is_encryption_enabled: \u0026quot;False\u0026quot; umask: \u0026quot;022\u0026quot; state: \u0026quot;present\u0026quot; - name: Create SMB share for a snapshot dellemc_unity_smbshare: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; share_name: \u0026quot;sample_snap_smb_share\u0026quot; snapshot_name: \u0026quot;sample_snapshot\u0026quot; nas_server_id: \u0026quot;NAS_11\u0026quot; path: \u0026quot;/sample_snapshot\u0026quot; description: \u0026quot;Sample SMB share created for snapshot\u0026quot; is_abe_enabled: True is_branch_cache_enabled: True is_continuous_availability_enabled: True is_encryption_enabled: True umask: \u0026quot;777\u0026quot; state: \u0026quot;present\u0026quot; - name: Modify Attributes of SMB share for a snapshot dellemc_unity_smbshare: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; share_name: \u0026quot;sample_snap_smb_share\u0026quot; snapshot_name: \u0026quot;sample_snapshot\u0026quot; description: \u0026quot;Sample SMB share attributes updated for snapshot\u0026quot; is_abe_enabled: False is_branch_cache_enabled: False offline_availability: \u0026quot;MANUAL\u0026quot; is_continuous_availability_enabled: \u0026quot;False\u0026quot; is_encryption_enabled: \u0026quot;False\u0026quot; umask: \u0026quot;022\u0026quot; state: \u0026quot;present\u0026quot; - name: Get details of SMB share dellemc_unity_smbshare: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; share_id: \u0026quot;{{smb_share_id}}\u0026quot; state: \u0026quot;present\u0026quot; - name: Delete SMB share dellemc_unity_smbshare: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; share_id: \u0026quot;{{smb_share_id}}\u0026quot; state: \u0026quot;absent\u0026quot; Return Values   Key Type Returned Description   changed   bool   always   Whether or not the resource has changed    smb_share_details   complex   When share exists.   The SMB share details.    \u0026nbsp; description   str  success  Additional information about the share.    \u0026nbsp; filesystem_id   str  success  The ID of the Filesystem.    \u0026nbsp; filesystem_name   str  success  The Name of the filesystem    \u0026nbsp; id   str  success  The ID of the SMB share.    \u0026nbsp; is_abe_enabled   bool  success  Whether Access Based enumeration is enforced or not    \u0026nbsp; is_branch_cache_enabled   bool  success  Whether branch cache is enabled or not.    \u0026nbsp; is_continuous_availability_enabled   bool  success  Whether the share will be available continuously or not    \u0026nbsp; is_encryption_enabled   bool  success  Whether encryption is enabled or not.    \u0026nbsp; name   str  success  Name of the SMB share.    \u0026nbsp; nas_server_id   str  success  The ID of the nas_server.    \u0026nbsp; nas_server_name   str  success  The Name of the nas_server.    \u0026nbsp; snapshot_id   str  success  The ID of the Snapshot.    \u0026nbsp; snapshot_name   str  success  The Name of the Snapshot.    \u0026nbsp; umask   str  success  Unix mask for the SMB share    Authors  P Srinivas Rao (@srinivas-rao5) ansible.team@dell.com   Host Module Manage Host operations on Unity.\nSynopsis The Host module contains the following operations Creation of a Host. Addition of initiators to Host. Removal of initiators from Host. Modification of host attributes. Get details of a Host. Deletion of a Host.\nParameters   Parameter Type Required Default Choices Description   host_name  str      Name of the host. Mandatory for host creation.    host_id  str      Unique identifier of the host. host_id is auto generated during creation. Except create, all other operations require either host_id or host_name.    description  str      Host description.    host_os  str      AIX Citrix XenServer HP-UX IBM VIOS Linux Mac OS Solaris VMware ESXi Windows Client Windows Server   Operating system running on the host.    new_host_name  str      New name for the host. Only required in rename host operation.    initiators  list elements: str      List of initiators to be added/removed to/from host.    initiator_state  str      present-in-host absent-in-host   State of the initiator.    state  str   True     present absent   State of the host.    unispherehost  str   True     IP or FQDN of the Unity management server.    username  str   True     The username of the Unity management server.    password  str   True     The password of the Unity management server.    verifycert  bool    True    True False   Boolean variable to specify whether or not to validate SSL certificate. True - Indicates that the SSL certificate should be verified. False - Indicates that the SSL certificate should not be verified.    port  int    443    Port number through which communication happens with Unity management server.    Examples - name: Create empty Host. dellemc_unity_host: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; host_name: \u0026quot;ansible-test-host\u0026quot; host_os: \u0026quot;Linux\u0026quot; description: \u0026quot;ansible-test-host\u0026quot; state: \u0026quot;present\u0026quot; - name: Create Host with Initiators. dellemc_unity_host: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; host_name: \u0026quot;ansible-test-host-1\u0026quot; host_os: \u0026quot;Linux\u0026quot; description: \u0026quot;ansible-test-host-1\u0026quot; initiators: - \u0026quot;iqn.1994-05.com.redhat:c38e6e8cfd81\u0026quot; - \u0026quot;20:00:00:90:FA:13:81:8D:10:00:00:90:FA:13:81:8D\u0026quot; initiator_state: \u0026quot;present-in-host\u0026quot; state: \u0026quot;present\u0026quot; - name: Modify Host using host_id. dellemc_unity_host: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; host_id: \u0026quot;Host_253\u0026quot; new_host_name: \u0026quot;ansible-test-host-2\u0026quot; host_os: \u0026quot;Mac OS\u0026quot; description: \u0026quot;Ansible tesing purpose\u0026quot; state: \u0026quot;present\u0026quot; - name: Add Initiators to Host. dellemc_unity_host: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; host_name: \u0026quot;ansible-test-host-2\u0026quot; initiators: - \u0026quot;20:00:00:90:FA:13:81:8C:10:00:00:90:FA:13:81:8C\u0026quot; initiator_state: \u0026quot;present-in-host\u0026quot; state: \u0026quot;present\u0026quot; - name: Get Host details using host_name. dellemc_unity_host: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; host_name: \u0026quot;ansible-test-host-2\u0026quot; state: \u0026quot;present\u0026quot; - name: Get Host details using host_id. dellemc_unity_host: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; host_id: \u0026quot;Host_253\u0026quot; state: \u0026quot;present\u0026quot; - name: Delete Host. dellemc_unity_host: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; host_name: \u0026quot;ansible-test-host-2\u0026quot; state: \u0026quot;absent\u0026quot; Return Values   Key Type Returned Description   changed   bool   always   Whether or not the resource has changed.    host_details   complex   When host exists.   Details of the host.    \u0026nbsp; description   str  success  Description about the host.    \u0026nbsp; fc_host_initiators   complex  success  Details of the FC initiators associated with the host.    \u0026nbsp; \u0026nbsp; UnityHostInitiatorList   complex  success  FC initiators with system generated unique hash value.    \u0026nbsp; id   str  success  The system ID given to the host.    \u0026nbsp; iscsi_host_initiators   complex  success  Details of the ISCSI initiators associated with the host.    \u0026nbsp; \u0026nbsp; UnityHostInitiatorList   complex  success  ISCSI initiators with sytem genrated unique hash value.    \u0026nbsp; name   str  success  The name of the host.    \u0026nbsp; os_type   str  success  Operating system running on the host.    \u0026nbsp; type   str  success  HostTypeEnum of the host.    Authors  Rajshree Khare (@kharer5) ansible.team@dell.com   Consistency Group Module Manage consistency groups on Unity storage system\nSynopsis Managing the consistency group on the Unity storage system includes creating new consistency group, adding volumes to consistency group, removing volumes from consistency group, mapping hosts to consistency group, unmapping hosts from consistency group, renaming consistency group, modifying attributes of consistency group and deleting consistency group.\nParameters   Parameter Type Required Default Choices Description   cg_name  str      The name of the consistency group. It is mandatory for the create operation. Specify either cg_name or cg_id (but not both) for any operation.    cg_id  str      The ID of the consistency group. It can be used only for get, modify, add/remove volumes, or delete operations.    volumes  list elements: dict      This is a list of volumes. Either the volume ID or name must be provided for adding/removing existing volumes from consistency group. If volumes are given, then vol_state should also be specified. Volumes cannot be added/removed from consistency group, if the consistency group or the volume has snapshots.    \u0026nbsp; vol_id   str      The ID of the volume.    \u0026nbsp; vol_name   str      The name of the volume.    vol_state  str      present-in-group absent-in-group   String variable, describes the state of volumes inside consistency group. If volumes are given, then vol_state should also be specified.    new_cg_name  str      The new name of the consistency group, used in rename operation.    description  str      Description of the consistency group.    snap_schedule  str      Snapshot schedule assigned to the consistency group. Specifying an empty string \"\" removes the existing snapshot schedule from consistency group.    tiering_policy  str      AUTOTIER_HIGH AUTOTIER HIGHEST LOWEST   Tiering policy choices for how the storage resource data will be distributed among the tiers available in the pool.    hosts  list elements: dict      This is a list of hosts. Either the host ID or name must be provided for mapping/unmapping hosts for a consistency group. If hosts are given, then mapping_state should also be specified. Hosts cannot be mapped to a consistency group, if the consistency group has no volumes. When a consistency group is being mapped to the host, users should not use the volume module to map the volumes in the consistency group to hosts.    \u0026nbsp; host_id   str      The ID of the host.    \u0026nbsp; host_name   str      The name of the host.    mapping_state  str      mapped unmapped   String variable, describes the state of hosts inside the consistency group. If hosts are given, then mapping_state should also be specified.    state  str   True     absent present   Define whether the consistency group should exist or not.    unispherehost  str   True     IP or FQDN of the Unity management server.    username  str   True     The username of the Unity management server.    password  str   True     The password of the Unity management server.    verifycert  bool    True    True False   Boolean variable to specify whether or not to validate SSL certificate. True - Indicates that the SSL certificate should be verified. False - Indicates that the SSL certificate should not be verified.    port  int    443    Port number through which communication happens with Unity management server.    Examples - name: Create consistency group dellemc_unity_consistencygroup: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; cg_name: \u0026quot;{{cg_name}}\u0026quot; description: \u0026quot;{{description}}\u0026quot; snap_schedule: \u0026quot;{{snap_schedule1}}\u0026quot; state: \u0026quot;present\u0026quot; - name: Get details of consistency group using id dellemc_unity_consistencygroup: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; cg_id: \u0026quot;{{cg_id}}\u0026quot; state: \u0026quot;present\u0026quot; - name: Add volumes to consistency group dellemc_unity_consistencygroup: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; cg_id: \u0026quot;{{cg_id}}\u0026quot; volumes: - vol_name: \u0026quot;Ansible_Test-3\u0026quot; - vol_id: \u0026quot;sv_1744\u0026quot; vol_state: \u0026quot;{{vol_state_present}}\u0026quot; state: \u0026quot;present\u0026quot; - name: Rename consistency group dellemc_unity_consistencygroup: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; cg_name: \u0026quot;{{cg_name}}\u0026quot; new_cg_name: \u0026quot;{{new_cg_name}}\u0026quot; state: \u0026quot;present\u0026quot; - name: Modify consistency group details dellemc_unity_consistencygroup: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; cg_name: \u0026quot;{{new_cg_name}}\u0026quot; snap_schedule: \u0026quot;{{snap_schedule2}}\u0026quot; tiering_policy: \u0026quot;{{tiering_policy1}}\u0026quot; state: \u0026quot;present\u0026quot; - name: Map hosts to a consistency group dellemc_unity_consistencygroup: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; cg_id: \u0026quot;{{cg_id}}\u0026quot; hosts: - host_name: \u0026quot;10.226.198.248\u0026quot; - host_id: \u0026quot;Host_511\u0026quot; mapping_state: \u0026quot;mapped\u0026quot; state: \u0026quot;present\u0026quot; - name: Unmap hosts from a consistency group dellemc_unity_consistencygroup: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; cg_id: \u0026quot;{{cg_id}}\u0026quot; hosts: - host_id: \u0026quot;Host_511\u0026quot; - host_name: \u0026quot;10.226.198.248\u0026quot; mapping_state: \u0026quot;unmapped\u0026quot; state: \u0026quot;present\u0026quot; - name: Remove volumes from consistency group dellemc_unity_consistencygroup: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; cg_name: \u0026quot;{{new_cg_name}}\u0026quot; volumes: - vol_name: \u0026quot;Ansible_Test-3\u0026quot; - vol_id: \u0026quot;sv_1744\u0026quot; vol_state: \u0026quot;{{vol_state_absent}}\u0026quot; state: \u0026quot;present\u0026quot; - name: Delete consistency group dellemc_unity_consistencygroup: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; cg_name: \u0026quot;{{new_cg_name}}\u0026quot; state: \u0026quot;absent\u0026quot; Return Values   Key Type Returned Description   changed   bool   always   Whether or not the resource has changed    consistency_group_details   complex   When consistency group exists   Details of the consistency group    \u0026nbsp; block_host_access   complex  success  Details of hosts mapped to the consistency group    \u0026nbsp; \u0026nbsp; UnityBlockHostAccessList   complex  success  List of hosts mapped to consistency group    \u0026nbsp; \u0026nbsp; \u0026nbsp; UnityBlockHostAccess   complex  success  Details of host    \u0026nbsp; id   str  success  The system ID given to the consistency group    \u0026nbsp; luns   complex  success  Details of volumes part of consistency group    \u0026nbsp; \u0026nbsp; UnityLunList   complex  success  List of volumes part of consistency group    \u0026nbsp; \u0026nbsp; \u0026nbsp; UnityLun   complex  success  Detail of volume    \u0026nbsp; relocation_policy   str  success  FAST VP tiering policy for the consistency group    \u0026nbsp; snap_schedule   complex  success  Snapshot schedule applied to consistency group    \u0026nbsp; \u0026nbsp; UnitySnapSchedule   complex  success  Snapshot schedule applied to consistency group    \u0026nbsp; \u0026nbsp; \u0026nbsp; id   str  success  The system ID given to the snapshot schedule    \u0026nbsp; \u0026nbsp; \u0026nbsp; name   str  success  The name of the snapshot schedule    \u0026nbsp; snapshots   complex  success  List of snapshots of consistency group    \u0026nbsp; \u0026nbsp; creation_time   str  success  Date and time on which the snapshot was taken    \u0026nbsp; \u0026nbsp; expirationTime   str  success  Date and time after which the snapshot will expire    \u0026nbsp; \u0026nbsp; name   str  success  Name of the snapshot    \u0026nbsp; \u0026nbsp; storageResource   complex  success  Storage resource for which the snapshot was taken    \u0026nbsp; \u0026nbsp; \u0026nbsp; UnityStorageResource   complex  success  Details of the storage resource    Authors  Akash Shendge (@shenda1) ansible.team@dell.com   Snapshot Schedule Module Manage snapshot schedules on Unity storage system\nSynopsis Managing snapshot schedules on Unity storage system includes creating new snapshot schedule, getting details of snapshot schedule, modifying attributes of snapshot schedule, and deleting snapshot schedule.\nParameters   Parameter Type Required Default Choices Description   name  str      The name of the snapshot schedule. Name is mandatory for a create operation. Specify either name or id (but not both) for any operation.    id  str      The ID of the snapshot schedule.    type  str      every_n_hours every_day every_n_days every_week every_month   Type of the rule to be included in snapshot schedule. Type is mandatory for any create or modify operation. Once the snapshot schedule is created with one type it can be modified.    interval  int      Number of hours between snapshots. Applicable only when rule type is 'every_n_hours'.    hours_of_day  list elements: int      Hours of the day when the snapshot will be taken. Applicable only when rule type is 'every_day'.    day_interval  int      Number of days between snapshots. Applicable only when rule type is 'every_n_days'.    days_of_week  list elements: str      SUNDAY MONDAY TUESDAY WEDNESDAY THURSDAY FRIDAY SATURDAY   Days of the week for which the snapshot schedule rule applies. Applicable only when rule type is 'every_week'.    day_of_month  int      Day of the month for which the snapshot schedule rule applies. Applicable only when rule type is 'every_month'. Value should be [1, 31].    hour  int      the hour when the snapshot will be taken. Applicable for 'every_n_days', 'every_week', 'every_month' rule types. For create operation, if 'hour' parameter is not specified, value will be taken as 0. Value should be [0, 23].    minute  int      Minute offset from the hour when the snapshot will be taken. Applicable for all rule types. For a create operation, if 'minute' parameter is not specified, value will be taken as 0. Value should be [0, 59].    desired_retention  int      The number of days/hours for which snapshot will be retained. When auto_delete is True, desired_retention cannot be specified. Maximum desired retention supported is 31 days or 744 hours.    retention_unit  str    hours    hours days   The retention unit for the snapshot.    auto_delete  bool      Indicates whether the system can automatically delete the snapshot.    state  str   True     absent present   Define whether the snapshot schedule should exist or not.    unispherehost  str   True     IP or FQDN of the Unity management server.    username  str   True     The username of the Unity management server.    password  str   True     The password of the Unity management server.    verifycert  bool    True    True False   Boolean variable to specify whether or not to validate SSL certificate. True - Indicates that the SSL certificate should be verified. False - Indicates that the SSL certificate should not be verified.    port  int    443    Port number through which communication happens with Unity management server.    Notes  Snapshot schedule created via Ansible will have only one rule. Modification of rule type is not allowed. Within the same type, other parameters can be modified. If an existing snapshot schedule has more than 1 rule in it, only get and delete operation is allowed.  Examples - name: Create snapshot schedule (Rule Type - every_n_hours) dellemc_unity_snapshotschedule: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; name: \u0026quot;Ansible_Every_N_Hours_Testing\u0026quot; type: \u0026quot;every_n_hours\u0026quot; interval: 6 desired_retention: 24 state: \u0026quot;{{state_present}}\u0026quot; - name: Create snapshot schedule (Rule Type - every_day) dellemc_unity_snapshotschedule: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; name: \u0026quot;Ansible_Every_Day_Testing\u0026quot; type: \u0026quot;every_day\u0026quot; hours_of_day: - 8 - 14 auto_delete: True state: \u0026quot;{{state_present}}\u0026quot; - name: Create snapshot schedule (Rule Type - every_n_days) dellemc_unity_snapshotschedule: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; name: \u0026quot;Ansible_Every_N_Day_Testing\u0026quot; type: \u0026quot;every_n_days\u0026quot; day_interval: 2 desired_retention: 16 retention_unit: \u0026quot;days\u0026quot; state: \u0026quot;{{state_present}}\u0026quot; - name: Create snapshot schedule (Rule Type - every_week) dellemc_unity_snapshotschedule: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; name: \u0026quot;Ansible_Every_Week_Testing\u0026quot; type: \u0026quot;every_week\u0026quot; days_of_week: - MONDAY - FRIDAY hour: 12 minute: 30 desired_retention: 200 state: \u0026quot;{{state_present}}\u0026quot; - name: Create snapshot schedule (Rule Type - every_month) dellemc_unity_snapshotschedule: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; name: \u0026quot;Ansible_Every_Month_Testing\u0026quot; type: \u0026quot;every_month\u0026quot; day_of_month: 17 auto_delete: True state: \u0026quot;{{state_present}}\u0026quot; - name: Get snapshot schedule details using name dellemc_unity_snapshotschedule: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; name: \u0026quot;Ansible_Every_N_Hours_Testing\u0026quot; state: \u0026quot;{{state_present}}\u0026quot; - name: Get snapshot schedule details using id dellemc_unity_snapshotschedule: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; id: \u0026quot;{{id}}\u0026quot; state: \u0026quot;{{state_present}}\u0026quot; - name: Modify snapshot schedule details id dellemc_unity_snapshotschedule: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; id: \u0026quot;{{id}}\u0026quot; type: \u0026quot;every_n_hours\u0026quot; interval: 8 state: \u0026quot;{{state_present}}\u0026quot; - name: Modify snapshot schedule using name dellemc_unity_snapshotschedule: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; name: \u0026quot;Ansible_Every_Day_Testing\u0026quot; type: \u0026quot;every_day\u0026quot; desired_retention: 200 auto_delete: False state: \u0026quot;{{state_present}}\u0026quot; - name: Delete snapshot schedule using id dellemc_unity_snapshotschedule: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; id: \u0026quot;{{id}}\u0026quot; state: \u0026quot;{{state_absent}}\u0026quot; - name: Delete snapshot schedule using name dellemc_unity_snapshotschedule: unispherehost: \u0026quot;{{unispherehost}}\u0026quot; verifycert: \u0026quot;{{verifycert}}\u0026quot; username: \u0026quot;{{username}}\u0026quot; password: \u0026quot;{{password}}\u0026quot; name: \u0026quot;Ansible_Every_Day_Testing\u0026quot; state: \u0026quot;{{state_absent}}\u0026quot; Return Values   Key Type Returned Description   changed   bool   always   Whether or not the resource has changed.    snapshot_schedule_details   complex   When snapshot schedule exists   Details of the snapshot schedule.    \u0026nbsp; id   str  success  The system ID given to the snapshot schedule.    \u0026nbsp; luns   complex  success  Details of volumes for which snapshot schedule applied.    \u0026nbsp; \u0026nbsp; UnityLunList   complex  success  List of volumes for which snapshot schedule applied.    \u0026nbsp; \u0026nbsp; \u0026nbsp; UnityLun   complex  success  Detail of volume.    \u0026nbsp; name   str  success  The name of the snapshot schedule.    \u0026nbsp; rules   complex  success  Details of rules that apply to snapshot schedule.    \u0026nbsp; \u0026nbsp; days_of_month   list  success  Days of the month for which the snapshot schedule rule applies.    \u0026nbsp; \u0026nbsp; days_of_week   complex  success  Days of the week for which the snapshot schedule rule applies.    \u0026nbsp; \u0026nbsp; \u0026nbsp; DayOfWeekEnumList   list  success  Enumeration of days of the week.    \u0026nbsp; \u0026nbsp; hours   list  success  Hourly frequency for the snapshot schedule rule.    \u0026nbsp; \u0026nbsp; id   str  success  The system ID of the rule.    \u0026nbsp; \u0026nbsp; interval   int  success  Number of days or hours between snaps, depending on the rule type.    \u0026nbsp; \u0026nbsp; is_auto_delete   bool  success  Indicates whether the system can automatically delete the snapshot based on pool automatic-deletion thresholds.    \u0026nbsp; \u0026nbsp; minute   int  success  Minute frequency for the snapshot schedule rule.    \u0026nbsp; \u0026nbsp; retention_time   int  success  Period of time in seconds for which to keep the snapshot.    \u0026nbsp; \u0026nbsp; retention_time_in_hours   int  success  Period of time in hours for which to keep the snapshot.    \u0026nbsp; \u0026nbsp; rule_type   str  success  Type of the rule applied to snapshot schedule.    \u0026nbsp; storage_resources   complex  success  Details of storage resources for which snapshot schedule applied.    \u0026nbsp; \u0026nbsp; UnityStorageResourceList   complex  success  List of storage resources for which snapshot schedule applied.    \u0026nbsp; \u0026nbsp; \u0026nbsp; UnityStorageResource   complex  success  Detail of storage resource.    Authors  Akash Shendge (@shenda1) ansible.team@dell.com   ","excerpt":"Ansible Modules for Dell EMC Unity Product Guide 1.2.0 © 2021 Dell Inc. or its subsidiaries. All …","ref":"/ansible-docs/docs/storage/platforms/unity/product-guide/","title":"Product Guide"},{"body":"Ansible Modules for Dell EMC PowerFlex The Ansible Modules for Dell EMC PowerFlex allow Data Center and IT administrators to use RedHat Ansible to automate and orchestrate the provisioning and management of Dell EMC PowerFlex storage systems.\nThe capabilities of the Ansible modules are managing SDCs, volumes, snapshots, storage pools, SDSs and devices; and to gather high level facts from the storage system. The options available are list, show, create, modify and delete. These tasks can be executed by running simple playbooks written in yaml syntax. The modules are written so that all the operations are idempotent, so making multiple identical requests has the same effect as making a single request.\nLicense Ansible collection for PowerFlex is released and licensed under the GPL-3.0 license. See LICENSE for the full terms. Ansible modules and modules utilities that are part of the Ansible collection for PowerFlex are released and licensed under the Apache 2.0 license. See MODULE-LICENSE for the full terms.\nSupport Ansible collection for PowerFlex are supported by Dell EMC and are provided under the terms of the license attached to the collection. Please see the LICENSE section for the full terms. Dell EMC does not provide any support for the source code modifications. For any Ansible modules issues, questions or feedback, join the Dell EMC Automation Community.\nPrerequisites    Ansible Modules PowerFlex/VxFlex OS Version Red Hat Enterprise Linux SDK version Python version Ansible     v1.1.0 3.5, 3.6 7.8, 8.2 1.2.0 3.6.x 3.7.x 3.8.x 2.9 2.10 2.11     Please follow PyPowerFlex installation instructions on PyPowerFlex Documentation  Idempotency The modules are written in such a way that all requests are idempotent and hence fault-tolerant. It essentially means that the result of a successfully performed request is independent of the number of times it is executed.\nList of Ansible Modules for Dell EMC PowerFlex  Gather facts module Snapshot module SDC module Storage pool module Volume module SDS module Device Module  Installation of SDK Install python sdk named \u0026lsquo;PyPowerFlex\u0026rsquo;. It can be installed using pip, based on appropriate python version.\n  Clone the repo \u0026ldquo;https://github.com/dell/python-powerflex\u0026quot; using command:\ngit clone https://github.com/dell/python-powerflex.git    Go to the root directory of setup.\n  Execute the following command:\npip install .    Building Collections   Use the following command to build the collection from source code:\nansible-galaxy collection build    For more details on how to build a tar ball, please refer: Building the collection\nInstalling Collections Online Installation of Collections   Use the following command to install the latest collection hosted in galaxy portal:\nansible-galaxy collection install dellemc.powerflex -p \u0026lt;install_path\u0026gt;    Offline Installation of Collections   Download the latest tar build from any of the available distribution channel Ansible Galaxy /Automation Hub and use the following command to install the collection anywhere in your system:\nansible-galaxy collection install dellemc-powerflex-1.1.0.tar.gz -p \u0026lt;install_path\u0026gt;    Set the environment variable:\nexport ANSIBLE_COLLECTIONS_PATHS=$ANSIBLE_COLLECTIONS_PATHS:\u0026lt;install_path\u0026gt;    Using Collections   In order to use any Ansible module, ensure that the importing of proper FQCN(Fully Qualified Collection Name) must be embedded in the playbook. Below example can be referred\ncollections: - dellemc.powerflex    In order to use installed collection in a specific task use a proper FQCN(Fully Qualified Collection Name). Refer to the following example:\ntasks: - name: Get Volume details dellemc.powerflex.dellemc_powerflex_volume    For generating Ansible documentation for a specific module, embed the FQCN before the module name. Refer to the following example:\nansible-doc dellemc.powerflex.dellemc_powerflex_gatherfacts    Running Ansible Modules The Ansible server must be configured with Python library for PowerFlex to run the Ansible playbooks. The Documents provide information on different Ansible modules along with their functions and syntax. The parameters table in the Product Guide provides information on various parameters which needs to be configured before running the modules.\nSSL Certificate Validation   Copy the CA certificate to the \u0026ldquo;/etc/pki/ca-trust/source/anchors\u0026rdquo; path of the host by any external means.\n  Set the \u0026ldquo;REQUESTS_CA_BUNDLE\u0026rdquo; environment variable to the path of the SSL certificate using the command:\n export REQUESTS_CA_BUNDLE=/etc/pki/ca-trust/source/anchors/\u0026lt;\u0026lt;Certificate_Name\u0026gt;\u0026gt;    Import the SSL certificate to host using the command:\n update-ca-trust extract    If \u0026ldquo;TLS CA certificate bundle error\u0026rdquo; occurs, then follow below steps:\n cd /etc/pki/tls/certs/ openssl x509 -in ca-bundle.crt -text -noout    Results Each module returns the updated state and details of the entity, For example, if you are using the Volume module, all calls will return the updated details of the volume. Sample result is shown in each module\u0026rsquo;s documentation.\n","excerpt":"Ansible Modules for Dell EMC PowerFlex The Ansible Modules for Dell EMC PowerFlex allow Data Center …","ref":"/ansible-docs/docs/storage/platforms/powerflex/readme/","title":"ReadMe"},{"body":"Ansible Modules for Dell EMC PowerMax The Ansible Modules for Dell EMC PowerMax allow data center and IT administrators to use RedHat Ansible to automate and orchestrate the configuration and management of Dell EMC PowerMax arrays.\nThe capabilities of Ansible modules are managing volumes, storage groups, ports, port groups, hosts, host groups, masking views, snapshots, SRDF links, RDF groups, metro DR environments, jobs, snapshot policies, storage pools and gathering high-level facts about the arrays. The options available for each capability are list, show, create, delete, and modify. These tasks can be executed by running simple playbooks written in yaml syntax. The modules are written so that all the operations are idempotent, therefore making multiple identical requests has the same effect as making a single request.\nSupport Ansible modules for PowerMax are supported by Dell EMC and are provided under the terms of the license attached to the source code. Dell EMC does not provide support for any source code modifications. For any Ansible module issues, questions or feedback, join the Dell EMC Automation community.\nSupported Platforms  Dell EMC PowerMax and VMAX All Flash arrays with Unisphere version 9.1 and later.  Prerequisites This table provides information about the software prerequisites for the Ansible Modules for Dell EMC PowerMax.\n   Ansible Modules Unisphere Version PowerMaxOS Red Hat Enterprise Linux Python version Python library version Ansible     v1.5.0 9.1 9.2 5978.221.221 5978.444.444 5978.669.669 5978.711.711 7.5 7.6, 7.7, 7.8, and 8.2 2.7.12 3.5.2 3.6.x 3.7.x 9.1.x.x 9.2.x.x 2.9 and 2.10     Please follow PyU4V installation instructions on PyU4V Documentation  Idempotency The modules are written in such a way that all requests are idempotent and hence fault-tolerant. This means that the result of a successfully performed request is independent of the number of times it is executed.\nList of Ansible Modules for Dell EMC PowerMax  Volume module Host module Host Group module Snapshot module Masking View module Port module Port Group module Storage Group module Gatherfacts module SRDF module RDF Group module Metro DR module Job module Snapshot Policy module Storage Pool module Process Storage Pool module  Installation of SDK Install the python sdk named \u0026lsquo;PyU4V\u0026rsquo;. It can be installed using pip, based on the appropriate python version.\nInstalling Collections   Download the tar build and run the following command to install the collection anywhere in your system:\nansible-galaxy collection install dellemc-powermax-1.5.0.tar.gz -p \u0026lt;install_path\u0026gt;    Set the environment variable:\nexport ANSIBLE_COLLECTIONS_PATHS=$ANSIBLE_COLLECTIONS_PATHS:\u0026lt;install_path\u0026gt;    Using Collections  In order to use any Ansible module, ensure that the importation of the proper FQCN (Fully Qualified Collection Name) must be embedded in the playbook. For example, collections: - dellemc.powermax To generate Ansible documentation for a specific module, embed the FQCN before the module name. For example, ansible-doc dellemc.powermax.dellemc_powermax_gatherfacts  Running Ansible Modules The Ansible server must be configured with Python library for Unisphere to run the Ansible playbooks. The Documents provide information on different Ansible modules along with their functions and syntax. The parameters table in the Product Guide provides information on various parameters which needs to be configured before running the modules.\nSSL Certificate Validation  Copy the CA certificate to the \u0026ldquo;/etc/pki/ca-trust/source/anchors\u0026rdquo; path of the host by any external means. Set the \u0026ldquo;REQUESTS_CA_BUNDLE\u0026rdquo; environment variable to the path of the SSL certificate using the command: export REQUESTS_CA_BUNDLE=/etc/pki/ca-trust/source/anchors/\u0026laquo;Certificate_Name\u0026raquo; Import the SSL certificate to host using the command: update-ca-trust extract If \u0026ldquo;TLS CA certificate bundle error\u0026rdquo; occurs, then follow below steps:  cd /etc/pki/tls/certs/ openssl x509 -in ca-bundle.crt -text -noout    Results Each module returns the updated state and details of the entity, for example, if you are using the Volume module, all calls will return the updated details of the volume. A sample result is shown in each module\u0026rsquo;s documentation.\n","excerpt":"Ansible Modules for Dell EMC PowerMax The Ansible Modules for Dell EMC PowerMax allow data center …","ref":"/ansible-docs/docs/storage/platforms/powermax/readme/","title":"ReadMe"},{"body":"Ansible Modules for Dell EMC PowerScale The Ansible Modules for Dell EMC PowerScale allow Data Center and IT administrators to use RedHat Ansible to automate and orchestrate the configuration and management of Dell EMC PowerScale arrays.\nThe capabilities of the Ansible modules are managing users, groups, node, active directory, ldap, access zones, file system, nfs exports, smb shares, snapshots, snapshot schedules and smart quotas, and to gather facts from the array. The tasks can be executed by running simple playbooks written in yaml syntax.\nSupport  Ansible modules for PowerScale are supported by Dell EMC and are provided under the terms of the license attached to the source code. For any setup, configuration issues, questions or feedback, join the Dell EMC Automation community. For any Dell EMC storage issues, please contact Dell support at: https://www.dell.com/support. Dell EMC does not provide support for any source code modifications.  Supported Platforms  Dell EMC PowerScale Arrays version 8.0 and above.  Prerequisites  Ansible 2.9, 2.10 Python 3.5, 3.6, 3.7 Red Hat Enterprise Linux 7.6, 7.7, 7.8, 8.2 Python SDK for PowerScale (version 8.1.1 and 9.0.0)  Idempotency The modules are written in such a way that all requests are idempotent and hence fault-tolerant. It essentially means that the result of a successfully performed request is independent of the number of times it is executed.\nList of Ansible Modules for Dell EMC PowerScale  File System Module Access Zone Module Users Module Groups Module Snapshot Module Snapshot Schedule Module NFS Module SMB Module Smart Quota Module Gather Facts Module Active Directory Module LDAP Module Node Module  Installation of SDK Based on which PowerScale version is being used, install sdk as follows:\n  For PowerScale version \u0026lt; 9.0.0, install python sdk named \u0026lsquo;isi-sdk-8-1-1\u0026rsquo; as below:\n pip install isi_sdk_8_1_1    For PowerScale version 9.0.0 and above, install python sdk named \u0026lsquo;isi-sdk-9-0-0\u0026rsquo; as below:\n pip install isi_sdk_9_0_0    Installing Collections   Download the tar build and run the following command to install the collection anywhere in your system:\nansible-galaxy collection install dellemc-powerscale-1.2.0.tar.gz -p \u0026lt;install_path\u0026gt;    Set the environment variable:\nexport ANSIBLE_COLLECTIONS_PATHS=$ANSIBLE_COLLECTIONS_PATHS:\u0026lt;install_path\u0026gt;    Using Collections  In order to use any Ansible module, ensure that the importation of the proper FQCN (Fully Qualified Collection Name) is embedded in the playbook. For example, collections: - dellemc.powerscale To generate Ansible documentation for a specific module, embed the FQCN before the module name. For example, ansible-doc dellemc.powerscale.dellemc_powerscale_gatherfacts  Running Ansible Modules The Ansible server must be configured with Python library for OneFS to run the Ansible playbooks. The Documents provide information on different Ansible modules along with their functions and syntax. The parameters table in the Product Guide provides information on various parameters which need to be configured before running the modules.\nSSL Certificate Validation  Export the SSL certificate using KeyStore Explorer tool or from the browser in .crt format. Append the SSL certificate to the Certifi package file cacert.pem.  For Python 3.5 : cat \u0026lt;\u0026gt; \u0026raquo; /usr/local/lib/python3.5/dist-packages/certifi/cacert.pem For Python 2.7 : cat \u0026lt;\u0026gt; \u0026raquo; /usr/local/lib/python2.7/dist-packages/certifi/cacert.pem    Results Each module returns the updated state and details of the entity. For example, if you are using the group module, all calls will return the updated details of the group. Sample result is shown in each module\u0026rsquo;s documentation.\n","excerpt":"Ansible Modules for Dell EMC PowerScale The Ansible Modules for Dell EMC PowerScale allow Data …","ref":"/ansible-docs/docs/storage/platforms/powerscale/readme/","title":"ReadMe"},{"body":"Ansible Modules for Dell EMC PowerStore The Ansible Modules for Dell EMC PowerStore allow Data Center and IT administrators to use RedHat Ansible to automate and orchestrate the configuration and management of Dell EMC PowerStore arrays.\nThe capabilities of the Ansible modules are managing volumes, volume groups, hosts, host groups, snapshots, snapshot rules, replication rules, replication sessions, protection policies, file systems, NAS servers, SMB shares, user and tree quotas, file system snapshots, NFS exports, Cluster, Networks, Local users, Job, and Roles. It also allows the capability to gather facts from the array. The options available for each are list, show, create, modify and delete. These tasks can be executed by running simple playbooks written in yaml syntax. The modules are written so that all the operations are idempotent, so making multiple identical requests has the same effect as making a single request.\nLicense Ansible collection for PowerStore is released and licensed under the GPL-3.0 license. See LICENSE for the full terms. Ansible modules and modules utilities that are part of the Ansible collection for PowerStore are released and licensed under the Apache 2.0 license. See MODULE-LICENSE for the full terms.\nSupport Ansible collections for PowerStore are supported by Dell EMC and are provided under the terms of the license attached to the collection. Please see the LICENSE for the full terms. Dell EMC does not provide any support for the source code modifications. For any Ansible modules issues, questions or feedback, join the Dell EMC Automation Community.\nPrerequisites    Ansible Modules PowerStore Version Red Hat Enterprise Linux SDK version Python version Ansible     v1.3.0 1.x 2.0 7.8, 8.2 1.4.0 3.6.x 3.7.x 3.8.x 2.9 2.10 2.11     Please follow PyPowerStore installation instructions on PyPowerStore Documentation  Idempotency The modules are written in such a way that all requests are idempotent and hence fault-tolerant. It essentially means that the result of a successfully performed request is independent of the number of times it is executed.\nList of Ansible Modules for Dell EMC PowerStore  Volume module Volume group module Host module Host group module Snapshot module Snapshot rule module Replication rule module Replication session module Protection policy module Gather facts module File system module NAS server module SMB share module Quota module File system snapshot module NFS export module Cluster module Network module Local user module Role module Job module  Installation of SDK  Clone the repo using the command:  git clone https://github.com/dell/python-powerstore/tree/1.4.0\nGo to the root directory of setup. Execute the following command:  pip install .\nBuilding Collections   Use the following command to build the collection from source code:\nansible-galaxy collection build    For more details on how to build a tar ball, please refer: Building the collection\nInstalling Collections Online Installation of Collections  Use the following command to install the latest collection hosted in galaxy:  ansible-galaxy collection install dellemc.powerstore -p \u0026lt;install_path\u0026gt;\nOffline Installation of Collections  Download the latest tar build from any of the available distribution channel Ansible Galaxy /Automation Hub and use the following command to install the collection anywhere in your system:  ansible-galaxy collection install dellemc-powerstore-1.3.0.tar.gz -p \u0026lt;install_path\u0026gt;\nSet the environemnt variable:  export ANSIBLE_COLLECTIONS_PATHS=$ANSIBLE_COLLECTIONS_PATHS:\u0026lt;install_path\u0026gt;\nUsing Collections  In order to use any Ansible module, ensure that the importing of a proper FQCN (Fully Qualified Collection Name) must be embedded in the playbook. Refer to the followig example:  collections:\n dellemc.powerstore  In order to use an installed collection specific to the task use a proper FQCN (Fully Qualified Collection Name). Refer to the followig example:  tasks: - name: Get Volume details dellemc.powerstore.dellemc_powerstore_volume\nFor generating Ansible documentaion for a specific module, embed the FQCN before the module name. Refer to the following example:  ansible-doc dellemc.powerstore.dellemc_powerstore_gatherfacts\nRunning Ansible Modules The Ansible server must be configured with Python library for PowerStore to run the Ansible playbooks. The Documents provide information on different Ansible modules along with their functions and syntax. The parameters table in the Product Guide provides information on various parameters which needs to be configured before running the modules.\nSSL Certificate Validation   Copy the CA certificate to this \u0026ldquo;/etc/pki/ca-trust/source/anchors\u0026rdquo; path of the host by any external means.\n  Set the \u0026ldquo;REQUESTS_CA_BUNDLE\u0026rdquo; environment variable to the path of the SSL certificate using the following command:\nexport REQUESTS_CA_BUNDLE=/etc/pki/ca-trust/source/anchors/\u0026laquo;Certificate_Name\u0026raquo;\n  Import the SSL certificate to host using the following command:\nupdate-ca-trust\n  Results Each module returns the updated state and details of the entity. For example, if you are using the group module, all calls will return the updated details of the group. Sample result is shown in each module\u0026rsquo;s documentation.\n","excerpt":"Ansible Modules for Dell EMC PowerStore The Ansible Modules for Dell EMC PowerStore allow Data …","ref":"/ansible-docs/docs/storage/platforms/powerstore/readme/","title":"ReadMe"},{"body":"Ansible Modules for Dell EMC Unity The Ansible Modules for Dell EMC Unity allow Data Center and IT administrators to use RedHat Ansible to automate and orchestrate the configuration and management of Dell EMC Unity arrays.\nThe capabilities of the Ansible modules are managing consistency groups, filesystem, filesystem snapshots, NAS server, NFS export, SMB share, hosts, snapshots, snapshot schedules, storage pools, user quotas, quota trees and volumes; and to gather facts from the array. The options available for each are list, show, create, modify and delete. These tasks can be executed by running simple playbooks written in yaml syntax. The modules are written so that all the operations are idempotent, so making multiple identical requests has the same effect as making a single request.\nSupport Ansible modules for Unity are supported by Dell EMC and are provided under the terms of the license attached to the source code. Dell EMC does not provide support for any source code modifications. For any Ansible module issues, questions or feedback, join the Dell EMC Automation community.\nSupported Platforms  Dell EMC Unity Arrays version 5.0, 5.1.0  Prerequisites  Ansible 2.9, 2.10 Python 2.8, 3.5, 3.6, 3.7, 3.8 Red Hat Enterprise Linux 7.6, 7.7, 7.8, 8.2 Python Library for Unity storops version 1.2.10 or higher  Idempotency The modules are written in such a way that all requests are idempotent and hence fault-tolerant. It essentially means that the result of a successfully performed request is independent of the number of times it is executed.\nList of Ansible Modules for Dell EMC Unity  Consistency group module Filesystem module Filesystem snapshot module Gather facts module Host module NAS server module NFS export module SMB share module Snapshot module Snapshot schedule module Storage pool module User quota module Quota tree module Volume module  Installation of SDK Install python sdk named \u0026lsquo;storops\u0026rsquo;. It can be installed using pip, based on appropriate python version.\npip install storops  Installing Collections   Download the tar build and follow the below command to install the collection anywhere in your system:\nansible-galaxy collection install dellemc-unity-1.2.0.tar.gz -p \u0026lt;install_path\u0026gt;    Set the environment variable:\nexport ANSIBLE_COLLECTIONS_PATHS=$ANSIBLE_COLLECTIONS_PATHS:\u0026lt;install_path\u0026gt;    Using Collections   In order to use any Ansible module, ensure that the importing of proper FQCN(Fully Qualified Collection Name) must be embedded in the playbook. Below example can be referred\ncollections: - dellemc.unity    For generating Ansible documentaion for a specific module, embed the FQCN before the module name. The below example can be referred.\nansible-doc dellemc.unity.dellemc_unity_gatherfacts    Running Ansible Modules The Ansible server must be configured with Python library for Unity to run the Ansible playbooks. The Documents provide information on different Ansible modules along with their functions and syntax. The parameters table in the Product Guide provides information on various parameters which need to be configured before running the modules.\nSSL Certificate Validation NOTE: These modules are supported through CA certified certificate only, however a self-signed certificate is not supported.\n Copy the CA certificate to this \u0026ldquo;/etc/pki/ca-trust/source/anchors\u0026rdquo; path of the host by any external means. Set the \u0026ldquo;REQUESTS_CA_BUNDLE\u0026rdquo; environment variable to the path of the SSL certificate using the command \u0026ldquo;export REQUESTS_CA_BUNDLE=/etc/pki/ca-trust/source/anchors/\u0026laquo;Certificate_Name\u0026raquo;\u0026rdquo; Import the SSL certificate to host using the command \u0026ldquo;update-ca-trust\u0026rdquo;.  Results Each module returns the updated state and details of the entity, For example, if you are using the Volume module, all calls will return the updated details of the volume. Sample result is shown in each module\u0026rsquo;s documentation.\n","excerpt":"Ansible Modules for Dell EMC Unity The Ansible Modules for Dell EMC Unity allow Data Center and IT …","ref":"/ansible-docs/docs/storage/platforms/unity/readme/","title":"ReadMe"},{"body":"Ansible Modules for Dell EMC PowerFlex Release Notes 1.1.0  © 2021 Dell Inc. or its subsidiaries. All rights reserved. Dell EMC, and other trademarks are trademarks of Dell Inc. or its subsidiaries. Other trademarks may be trademarks of their respective owners.\n Contents These release notes contain supplemental information about Ansible Modules for Dell EMC PowerFlex.\n Product Description New Features Known issues Limitations Distribution Documentation  Product Description The Ansible Modules for Dell EMC PowerFlex are used for managing volumes, storage pools, SDCs, snapshots, SDSs and devices for PowerFlex storage devices. The modules use playbooks to list, show, create, delete, and modify each of the entities.\nThe Ansible Modules for Dell EMC PowerFlex supports the following features:\n Create volumes, storage pools, snapshots, SDSs. Add devices. Modify volumes, storage pools, SDCs, snapshots and SDSs. Delete volumes, snapshots and SDSs. Get details of a volumes, snapshots, SDCs, storage pools, SDSs and devices. Get entities of the PowerFlex storage device. Remove devices.  New Features The Ansible Modules for Dell EMC PowerFlex release 1.1.0 supports the following features:\n  The following are the features of the gatherfacts module:\n Get list of devices.    The following are the features of the SDS module:\n Get the details of an SDS. Create an SDS. Modify details of an SDS. Delete an SDS.    The following are the features of the device module:\n Get the details of a device. Add a device. Remove a device.    Known issues  Setting the RF cache and performance profile of the SDS during its creation fails intermittently on PowerFlex version 3.5  Limitations There are no known limitations.\nDistribution The software package is available for download from the Ansible Modules for PowerFlex GitHub page.\nDocumentation The documentation is available on Ansible Modules for PowerFlex GitHub page. It includes the following:\n README Release Notes (this document) Product Guide  ","excerpt":"Ansible Modules for Dell EMC PowerFlex Release Notes 1.1.0  © 2021 Dell Inc. or its subsidiaries. …","ref":"/ansible-docs/docs/storage/platforms/powerflex/release-notes/","title":"Release Notes"},{"body":"Ansible Modules for Dell EMC PowerMax Release Notes 1.5.0  © 2021 Dell Inc. or its subsidiaries. All rights reserved. Dell EMC, and other trademarks are trademarks of Dell Inc. or its subsidiaries. Other trademarks may be trademarks of their respective owners.\n Contents These release notes contain supplemental information about Ansible Modules for Dell EMC PowerMax.\n Revision History Product Description New Features \u0026amp; Enhancements Known issues Limitations Distribution Documentation  Revision History    Date Document revision Description of changes     May 2021 01 Ansible Modules for Dell EMC PowerMax release 1.5.0    Product Description The Ansible Modules for Dell EMC PowerMax are used for managing volumes, storage groups, ports, port groups, host, host groups, masking views, SRDF links, RDF groups, snapshots, job, snapshot policies, storage pools, role for automatic volume provisioning and Metro DR environments for PowerMax arrays. The modules use playbooks to list, show, create, delete, and modify each of the entities.\nThe Ansible Modules for Dell EMC PowerMax supports the following features:\n Create volumes, storage groups, hosts, host groups, port groups, masking views, Metro DR environments, snapshot policies, and snapshots of a storage group. Modify volumes, storage groups, hosts, host groups, Metro DR environments, snapshot policies, and port groups in the array. Delete volumes, storage groups, hosts, host groups, port groups, masking views, Metro DR environments, snapshot policies, and snapshots of a storage group. Get details of volumes, storage groups, hosts, host groups, port, port groups, masking views, Metro DR environments, Job, RDF groups, snapshot policies, storage pools, and snapshots of a storage group.  New Features \u0026amp; Enhancements The Ansible Modules for Dell EMC PowerMax release 1.5.0 supports the following features:\n The Snapshot policy module supports the following functionalities:  Create a snapshot policy. Get details of any specific snapshot policy. Modify the snapshot policy attributes. Delete a snapshot policy.  NOTE: Supports PyU4V 9.2.1.3 and above.\n    The storage pool module supports the following functionality:  Get storage pool details for a given storage pool.   The following enhancements have been made to the gatherfacts module:  Get list of snapshot policies present on the PowerMax array.  NOTE: Supports PyU4V 9.2.1.3 and above for getting snapshot policy details and PyU4V 9.2.0.8 and above for getting snapshot details.\n    The following enhancements have been made to the storage group module:  Snapshot policy can be associated/disassociated to/from a storage group.  NOTE: Supports PyU4V 9.2.1.3 and above.\n    The following enhancements have been made to the snapshot module:  New parameter \u0026lsquo;snapshot_id\u0026rsquo; has been added which indicates unique ID of snapshot. snapshot_id is required for link, unlink, rename and delete operations.It is optional for getting details of snapshot.  NOTE: Supports PyU4V 9.2.0.8 and above.\n    Following functionalities are available for ansible role for automatic volume placement:  Finding if there is enough capacity of the given service level in any array. If multiple arrays available, return which is least used as \u0026lsquo;assigned_pool\u0026rsquo;. assigned_pool includes:  serial_no srp_id sg_name (if passed)     The following enhancements have been made to the host module:  Check mode feature of ansible is enabled for host module.   The following enhancements have been made to the host group module:  Check mode feature of ansible is enabled for host group module.   The following enhancements have been made to the volume module:  Check mode feature of ansible is enabled for volume module.   Support for Unisphere 9.1 and above Support for Python version 2.8 and above Support for PyU4V python library version 9.1.2.0 and above   NOTE: Unisphere Version 9.1 is compatible with PowerMax Python library version 9.1.x.x and similarly Unisphere versions later than 9.1 will only work with Python library versions later than 9.1.x.x.\n Known issues   Modify state operation from Establish to Suspend in Adaptive Copy mode in presence of force flag is not implemented. The REST API does not support this hence Python SDK (PyU4V) has no support for this operation.\n  Task to link a snapshot to a target storage group which is already linked is not implemented. The REST API does not support this hence Python SDK (PyU4V) has no support for this operation.\n  Limitations There are no known limitations.\nDistribution The software package is available for download from the Ansible Modules for PowerMax GitHub page.\nDocumentation The documentation is available on Ansible Modules for PowerMax GitHub page. It includes the following:\n README Release Notes (this document) Product Guide  ","excerpt":"Ansible Modules for Dell EMC PowerMax Release Notes 1.5.0  © 2021 Dell Inc. or its subsidiaries. All …","ref":"/ansible-docs/docs/storage/platforms/powermax/release-notes/","title":"Release Notes"},{"body":"Ansible Modules for Dell EMC PowerScale Release Notes 1.2.0  © 2021 Dell Inc. or its subsidiaries. All rights reserved. Dell, EMC, and other trademarks are trademarks of Dell Inc. or its subsidiaries. Other trademarks may be trademarks of their respective owners.\n Content These release notes contain supplemental information about Ansible Modules for Dell EMC PowerScale.\n Revision History Product Description Features Known Problem and limitations Software media, organization, and files Additional resources  Revision history The table in this section lists the revision history of this document.\nTable 1. Revision history\n   Revision Date Description     01 Jun 2021 Ansible Modules for Dell EMC PowerScale 1.2.0    Product Description This section describes the Ansible Modules for Dell EMC PowerScale. The Ansible Modules for Dell EMC PowerScale allow Data Center and IT administrators to use RedHat Ansible to automate and orchestrate the configuration and management of Dell EMC PowerScale arrays.\nThe Ansible Modules for Dell EMC PowerScale support the following features:\n Create user, groups, filesystem, NFS export, smart quotas, SMB share, snapshot and snapshot schedule of a filesystem. Modify user, groups, filesystem, access zone, NFS export, smart quotas, SMB share, snapshot and snapshot schedule of a filesystem. Delete user, groups, filesystem, NFS export, smart quotas, SMB share, snapshot and snapshot schedule of a filesystem. Get details of user, groups, node, filesystem, access zone, NFS export, smart quotas, SMB share, snapshot and snapshot schedule of a filesystem. Add, modify and remove Active Directory and LDAP to Authentication providers list. Map or unmap Active Directory and LDAP Authentication providers to Access zone. Get attributes and entities of the array.  The Ansible modules use playbooks, written in yaml syntax, to list, show, create, delete, and modify each of these entities.\nFeatures This section describes the features of the Ansible Modules for Dell EMC PowerScale for this release.\nThe Ansible Modules for Dell EMC PowerScale release 1.2.0 supports the following features:\n  Idempotency\n Has been handled in all modules. Allows the playbook to be run multiple times . Avoids the need for complex rollbacks.    Access Zones\n PowerScale has a concept of access zones. These are to partition the cluster into multiple isolated sections. Ansible modules support access zone operations that can also operate on the default (system) access zone. Users and Groups can be specific to a particular access zone. For non-system access zones, the path provided by the playbook is a relative path. Absolute path = Access zone base path + relative path provided by the user.    MODULES\n  The Access Zone module has the following enhancements:\n Map or unmap authentication providers to/from an access zone.    The File System module is enhanced to support the following functionality:\n Create a filesystem is updated to support both isi_sdk_8_1_1 and isi_sdk_9_0_0. Update a filesystem is updated to support both isi_sdk_8_1_1 and isi_sdk_9_0_0.    The ADS module supports the following functionality:\n Add Active Directory provider to authentication providers. Modify Active Directory provider parameters. Remove Active Directory provider from authentication providers. Retrieve details of Active Directory provider.    The LDAP module supports the following functionality:\n Add LDAP provider to authentication providers. Modify LDAP provider parameters. Remove LDAP provider from authentication providers. Retrieve details of LDAP provider.    The Node module supports the following functionality:\n Get Node details of Dell EMC PowerScale storage    The Gather Facts module is enhanced to support the following functionality:\n  Get details of the any entity listed below:\n Nodes Nfs exports Smb shares Active clients      The Smart Quotas module is enhanced to support the following functionality:\n Create a default-user/default-group quota. Modify the attributes of quota like include_overheads(8_1_1)/thresholds_on(9_0_0), soft_grace_period, hard_limit_size. Updated code to support both isi_sdk_8_1_1 and isi_sdk_9_0_0. Get details of the default-user/default-group quota. Delete the default-user/default-group quota.    Known issues Known problems in this release are listed.\n  Snapshot schedule\n If the playbook has a desired_retention field, running same the playbook again returns the changed as True (Idempotency does not work).    Filesystem Creation\n  Creation of a filesystem can fail when api_user: \u0026ldquo;admin\u0026rdquo; because it is possible that the admin user may not have privileges to set an ACLs.\n  In that case, create a filesystem with api_user: \u0026ldquo;root\u0026rdquo;.\n    Snapshot creation with alias name\n Alias name attribute remains null in spite of creating snapshot with alias name. This is an issue with PowerScale rest API. Alias name is not getting appended to the attribute in response.    Limitations This section lists the limitations in this release of Ansible Modules for Dell EMC PowerScale.\n  Gatherfacts\n Getting the list of users and groups with very long names may fail.    Users and Groups\n Only local users and groups can be created. Operations on users and groups with very long names may fail.    Access Zone\n Creation and deletion of access zones is not supported.    Filesystems\n ACLs can only be modified from POSIX to POSIX mode. Only directory quotas are supported but not user or group quotas. Modification of include_snap_data flag is not supported.    NFS Export\n If there multiple exports present with the same path in an access zone, operations on such exports fail.    Smart Quota\n Once the limits are assigned to the quota, then the quota can\u0026rsquo;t be converted to accounting. Only modification to the threshold limits is permitted. Its mandatory to pass \u0026lsquo;quota\u0026rsquo; parameter for create and modify operations for any quota type.    No support for advanced PowerScale features\n Advanced PowerScale features include SyncIQ, tiering, replication, and so on.     Software media, organization, and files The software package is available for download from the Ansible Modules for PowerScale GitHub page.\nAdditional resources This section provides more information about the product, how to get support, and provide feedback.\nDocumentation This section lists the related documentation for Ansible Modules for Dell EMC PowerScale. The documentation is available on the Ansible Modules for PowerScale GitHub page. The documentation includes the following:\n Ansible Modules for Dell EMC PowerScale Release Notes (this document). Ansible Modules for Dell EMC PowerScale Product Guide  Troubleshooting and support The Dell Container Community provides your primary source of support services.\nFor any setup, configuration issues, questions or feedback, join the Dell EMC Container community at https://www.dell.com/community/ Containers/bd-p/Containers.\n  Technical support\n  Dell EMC Online Support also provides technical support services. To open a service request, you must have a valid support agreement.\n  To get a valid support agreement or for other questions about your account, contact your Dell EMC sales representative.\n  For documentation, release notes, software updates, and other information about Dell EMC products, go to Dell EMC Online Support.\n    Support   Use the resources in this topic to get help and support.\n  The source code available on Github is unsupported and provided solely under the terms of the license attached to the source code.\n  For clarity, Dell EMC does not provide support for any source code modifications.\n  For any Ansible module setup, configuration issues, questions or feedback, join the Dell EMC Automation community at https:// www.dell.com/community/Automation/bd-p/Automation?ref=lithium_menu\n  For any Dell EMC storage issues, please contact Dell support at: https://www.dell.com/support.\n  ","excerpt":"Ansible Modules for Dell EMC PowerScale Release Notes 1.2.0  © 2021 Dell Inc. or its subsidiaries. …","ref":"/ansible-docs/docs/storage/platforms/powerscale/release-notes/","title":"Release Notes"},{"body":"Ansible Modules for Dell EMC PowerStore Release Notes 1.3.0  © 2021 Dell Inc. or its subsidiaries. All rights reserved. Dell, EMC, and other trademarks are trademarks of Dell Inc. or its subsidiaries. Other trademarks may be trademarks of their respective owners.\n Content These release notes contain supplemental information about Ansible Modules for Dell EMC PowerStore.\n Revision History Product Description New Features \u0026amp; Enhancements Known Issues Limitations Distribution Documentation  Revision history The table in this section lists the revision history of this document.\nTable 1. Revision history\n   Revision Date Description     01 September 2021 Current release of Ansible Modules for Dell EMC PowerStore 1.3.0    Product Description The Ansible modules for Dell EMC PowerStore are used to automate and orchestrate the deployment, configuration, and management of Dell EMC PowerStore storage systems. The capabilities of Ansible modules are managing Volumes, Volume groups, Hosts, Host groups, Protection policies, Replication rules, Replication sessions, NFS exports, SMB shares, NAS server, File systems, File system snapshots, Quota tree, Quotas for filesystem, Cluster, Networks, Local users, Roles, Job, and obtaining PowerStore system information. The options available for each capability are list, show, create, delete, and modify. The only exception is for NAS server for which the options available are list \u0026amp; modify.\nNew features \u0026amp; enhancements Along with the previous release deliverables, this release supports the following features -\n  Cluster module supports the following functionalities:\n Get cluster details Modify attributes of cluster    Network module supports the following functionalities:\n Get network details Modify attributes of the network    Local user module has the following functionalities:\n Create a local user Get local user details Modify attributes of local user Delete a local user    Role module has the following functionalities:\n Get role details    Job module has the following functionalities:\n Get job details for a given job ID    Gather Facts Module has the following enhancements:\n List of users List of roles List of networks List of appliances    Known issues There are no known issues.\nLimitations  All occurrences of Password and related parameters do not support Idempotency.  Distribution The software package is available for download from the Ansible Modules for PowerStore GitHub page.\nDocumentation The documentation is available on Ansible Modules for PowerStore GitHub page. It includes the following:\n README Release Notes (this document) Product Guide  ","excerpt":"Ansible Modules for Dell EMC PowerStore Release Notes 1.3.0  © 2021 Dell Inc. or its subsidiaries. …","ref":"/ansible-docs/docs/storage/platforms/powerstore/release-notes/","title":"Release Notes"},{"body":"Ansible Modules for Dell EMC Unity Release Notes 1.2.0  © 2021 Dell Inc. or its subsidiaries. All rights reserved. Dell, EMC, and other trademarks are trademarks of Dell Inc. or its subsidiaries. Other trademarks may be trademarks of their respective owners.\n Content These release notes contain supplemental information about Ansible Modules for Dell EMC Unity.\n Revision History Product Description New Features \u0026amp; Enhancements Known Issues Limitations Distribution Documentation  Revision history The table in this section lists the revision history of this document.\nTable 1. Revision history\n   Revision Date Description     01 June 2021 Current release of Ansible Modules for Dell EMC Unity 1.2.0    Product Description The Ansible modules for Dell EMC Unity are used to automate and orchestrate the deployment, configuration, and management of Dell EMC Unity Family systems, including Unity, Unity XT, and the UnityVSA. The capabilities of Ansible modules are managing NFS exports, SMB shares, NAS server, File Systems, File System Snapshots, Quota tree, User quotas for filesystem and quota tree and obtaining Unity system information. The options available for each capability are list, show, create, delete, and modify; except for NAS server for which options available are list \u0026amp; modify.\nNew features \u0026amp; enhancements This release supports the following features -\n  Application Tagging:\n A new HTTP header (Application-Type) is added in Unity REST API in Goshawk release which is used to set REST client name and its version and this information is recorded in Unity logs Ansible modules support application tagging which is used to identify the REST application that makes the request to Unisphere The value of application type parameter from Ansible module is set to Ansible/1.2.0    User quota module supports the following functionalities:\n Create User quota for a Filesystem/Quota tree Get User quota details Modify attributes of User quota Delete User quota    Quota tree module supports the following functionalities:\n Create Quota tree for a Filesystem Get Quota tree details Modify attributes of Quota tree Delete Quota tree    Consistency group module has the following enhancements:\n Map hosts to a new or an existing Consistency group Unmap hosts from a Consistency group    Filesystem module has the following enhancements:\n Set the attributes of Quota config while Filesystem creation Associate an existing snapshot schedule to existing or new Filesystem Remove snapshot schedule from a Filesystem    Volume module has the following enhancements:\n Map multiple hosts to a new or existing volume Unmap multiple hosts from a volume    Gather Facts Module has the following enhancements:\n List of User quota List of Quota tree    Known issues Known issues in this release are listed below:\n  Filesystem creation with quota config\n Setting quota configuration while creating a filesystem may sometime observe delay in fetching the details about the quota config of the new filesystem. The module will throw an error to rerun the task to see expected result.    Mapping and unmapping of hosts for a Consistency group\n Interoperability between Ansible Unity playbooks and Unisphere REST API is not supported for mapping and unmapping of hosts for a consistency group.  WORKAROUND: It is recommended to use Ansible Unity modules consistently for all mapping and unmapping of hosts for a consistency group instead of partially/mutually doing it through Unisphere and Ansible modules.\n     Limitations There are no known limitations.\nDistribution The software package is available for download from the Ansible Modules for Unity GitHub page.\nDocumentation The documentation is available on Ansible Modules for Unity GitHub page. It includes the following:\n README Release Notes (this document) Product Guide  ","excerpt":"Ansible Modules for Dell EMC Unity Release Notes 1.2.0  © 2021 Dell Inc. or its subsidiaries. All …","ref":"/ansible-docs/docs/storage/platforms/unity/release-notes/","title":"Release notes"},{"body":"Coming Soon!\n","excerpt":"Coming Soon!","ref":"/ansible-docs/docs/network/support/","title":"Support"},{"body":"Coming Soon!\n","excerpt":"Coming Soon!","ref":"/ansible-docs/docs/server/support/","title":"Support"},{"body":"Ansible modules for PowerMax are supported by Dell EMC and are provided under the terms of the license attached to the source code. Dell EMC does not provide support for any source code modifications. For any Ansible module issues, questions or feedback, join the Dell EMC Automation community.\n","excerpt":"Ansible modules for PowerMax are supported by Dell EMC and are provided under the terms of the …","ref":"/ansible-docs/docs/storage/support/","title":"Support"},{"body":"","excerpt":"","ref":"/ansible-docs/docs/storage/platforms/unity/","title":"Unity"},{"body":"","excerpt":"","ref":"/ansible-docs/docs/","title":"Documentation"},{"body":"","excerpt":"","ref":"/ansible-docs/docs/network/","title":"Network"},{"body":"","excerpt":"","ref":"/ansible-docs/docs/server/","title":"Server"},{"body":"","excerpt":"","ref":"/ansible-docs/docs/storage/","title":"Storage"},{"body":"   body { background-color: #E6E6FA; } .card-img-top { width: 100%; height: 15vw; object-fit: cover; } .card{ margin-right: 90px; }   Ansible Documentation Network    Server    Storage             ","excerpt":"   body { background-color: #E6E6FA; } .card-img-top { width: 100%; height: 15vw; object-fit: cover; …","ref":"/ansible-docs/","title":"Dell Technologies"},{"body":"","excerpt":"","ref":"/ansible-docs/search/","title":"Search Results"}]